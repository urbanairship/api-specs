{
  "components": {
    "parameters": {
      "appKeyHeader": {
        "in": "header",
        "name": "X-UA-Appkey",
        "required": true,
        "schema": {
          "description": "The application key.",
          "title": "Airship App Key header",
          "type": "string"
        }
      }
    },
    "responses": {
      "200": {
        "content": {
          "application/vnd.urbanairship+json; version=3": {
            "schema": {
              "$ref": "#/components/schemas/okResponseObject"
            }
          }
        },
        "description": "Everything worked as expected."
      },
      "202": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/okResponseObject"
            }
          }
        },
        "description": "The request has been accepted for processing."
      },
      "204": {
        "description": "An API request was successful, but there is no response body to return."
      },
      "400": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error"
            }
          }
        },
        "description": "There was a parsing or validation error in the request. Bad Request errors typically include `path` and `location` in the response, to help you find the cause of the error."
      },
      "401": {
        "content": {
          "text/plain": {
            "schema": {
              "$ref": "#/components/schemas/error"
            }
          }
        },
        "description": "Authentication information (the app key & secret or bearer token) was either incorrect or missing."
      },
      "403": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error"
            }
          }
        },
        "description": "Authentication was correct, but the user does not have permission to access the requested API, e.g., if the feature in question is not included in your pricing plan."
      },
      "404": {
        "content": {
          "application/vnd.urbanairship+json": {
            "schema": {
              "$ref": "#/components/schemas/error"
            }
          }
        },
        "description": "The requested resource doesn't exist."
      },
      "405": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error"
            }
          }
        },
        "description": "Returned when a request is made using an HTTP method not supported by the endpoint. For example, sending a DELETE to /api/schedules."
      },
      "406": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error"
            }
          }
        },
        "description": "Return when the client requests a version of the API which cannot be satisfied, because no compatible version is currently deployed."
      },
      "409": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error"
            }
          }
        },
        "description": "The request conflicts with another request."
      },
      "413": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error"
            }
          }
        },
        "description": "Returned when the request is too large to be processed."
      },
      "429": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error"
            }
          }
        },
        "description": "Too many requests hit the API too quickly. For example, if we are not ready to create a channel for this payload; e.g., it is rate limited. You should wait before retrying the channel creation."
      }
    },
    "schemas": {
      "absoluteWindow": {
        "description": "An object with `start` and `end` attributes containing ISO-formatted dates specifying an absolute window of time.",
        "properties": {
          "end": {
            "description": "An ISO-formatted date specifying the end date.",
            "example": "2018-02-01 12:00",
            "type": "string"
          },
          "start": {
            "description": "An ISO-formatted date specifying the start date.",
            "example": "2018-01-01 12:00",
            "type": "string"
          }
        },
        "required": [
          "start",
          "end"
        ],
        "title": "Absolute Window of Time",
        "type": "object",
        "x-schema-tag": "Automation Timing"
      },
      "actionsObject": {
        "description": "Describes Actions to be performed by the SDK when a user interacts with the notification. You can personalize message actions using [handlebars](../../guides/messaging/user-guide/personalization/dynamic-content).",
        "properties": {
          "add_tag": {
            "description": "An array of tags.",
            "example": [
              "Federer fan",
              "Messi fan"
            ],
            "items": {
              "maxLength": 128,
              "minLength": 1,
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "app_defined": {
            "additionalProperties": {
              "title": "Application-Defined Action Payload",
              "type": "object"
            },
            "description": "A map of registered action names to payloads as defined by the app or SDK. Some of these actions are supported as their own property on the Actions object, but be aware that their registered names in the SDK may be different. For a summary of the actions registered by the SDK, including usage information, see the [iOS](https://docs.airship.com/platform/ios/actions/#ios-available-actions) and [Android](https://docs.airship.com/platform/android/actions/#android-available-actions) docs.",
            "type": "object"
          },
          "open": {
            "description": "Open action. When a user interacts with the notification, opens one of: URL, deep link, or landing page as described in the associated `content` property.",
            "oneOf": [
              {
                "description": "Opens a URL or passes a string for use as a custom action.",
                "properties": {
                  "content": {
                    "description": "Any string. A URL string that starts with either 'http' or 'https' will open a URL or a string that starts with 'tel:' followed by a sequence of numbers will open the phone app.",
                    "example": [
                      "https://docs.urbanairship.com",
                      "tel:15035551234"
                    ],
                    "type": "string"
                  },
                  "type": {
                    "enum": [
                      "url"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "content"
                ],
                "title": "Open URL Action",
                "type": "object"
              },
              {
                "description": "Opens a deep link.",
                "properties": {
                  "content": {
                    "description": "A non-blank string.",
                    "maxLength": 1024,
                    "minLength": 1,
                    "type": "string"
                  },
                  "fallback_url": {
                    "description": "A URL that can be used on platforms that don't have full support for the otherwise defined action.",
                    "example": "https://docs.urbanairship.com",
                    "format": "url",
                    "pattern": "^http.*:\\/\\/.+",
                    "title": "Fallback URL",
                    "type": "string"
                  },
                  "type": {
                    "enum": [
                      "deep_link"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "content"
                ],
                "title": "Open Deep Link Action",
                "type": "object"
              },
              {
                "description": "Opens a landing page.",
                "properties": {
                  "content": {
                    "properties": {
                      "body": {
                        "description": "A string containing content which will be uploaded to our internal content hosting system.",
                        "example": "<html>content</html>",
                        "maxLength": 8192,
                        "minLength": 1,
                        "type": "string"
                      },
                      "content_encoding": {
                        "description": "A string specifying the encoding of the text in the `body` attribute, which must be 'utf-8' or 'base64'. Defaults to 'utf-8'.",
                        "enum": [
                          "utf-8",
                          "base64"
                        ],
                        "type": "string"
                      },
                      "content_type": {
                        "description": "A non-blank string, which must be a MIME type.",
                        "example": "text/html",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "body",
                      "content_type"
                    ],
                    "type": "object"
                  },
                  "type": {
                    "enum": [
                      "landing_page"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "content"
                ],
                "title": "Open Landing Page",
                "type": "object"
              }
            ],
            "type": "object"
          },
          "remove_tag": {
            "description": "An array of tags.",
            "example": [
              "Federer fan",
              "Messi fan"
            ],
            "items": {
              "maxLength": 128,
              "minLength": 1,
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "share": {
            "description": "String indicating the text that will populate the share action.",
            "example": "Hey guys check this out!",
            "maxLength": 1024,
            "minLength": 1,
            "type": "string"
          }
        },
        "title": "Actions"
      },
      "activityObject": {
        "description": "The `activity` object defines the target audience based on lifecycle actions or custom event activity, using comparison operators on activity count and recency. Optionally include a `where` object, which filters for specific activity values.\n\nIn the example to the right, the target audience is users who have opened your app from a notification from the \"neowise\" campaign at least twice, 3 days ago.\n",
        "properties": {
          "activity": {
            "description": "The target event activity, e.g., `app_open`.\n\nDefault event values are enumerated below. If you create a custom or predefined event that you wish to segment users on, you must register the event in the Airship dashboard under *Settings » Project Configuration » Events*.\n",
            "enum": [
              "app_open",
              "message_received",
              "message_center_read",
              "message_center_delivered",
              "message_center_deleted",
              "in_app_message_display",
              "in_app_message_resolution",
              "in_app_message_expiration",
              "screen_view",
              "web_session",
              "web_click",
              "short_link_click",
              "first_seen",
              "sms_aborted",
              "sms_delivered",
              "sms_dispatched",
              "sms_expired",
              "sms_failed",
              "sms_rejected",
              "sms_undeliverable",
              "sms_unknown",
              "email_bounce",
              "email_click",
              "email_delay",
              "email_delivered",
              "email_injection",
              "email_open",
              "email_unsubscribe",
              "scene_displayed",
              "scene_completed",
              "scene_incomplete",
              "survey_displayed",
              "survey_submitted",
              "survey_not_submitted"
            ],
            "type": "string"
          },
          "after": {
            "description": "A date value for an absolute comparison or an integer value for a relative comparison.\n",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "integer"
              }
            ]
          },
          "before": {
            "description": "A date value for an absolute comparison or an integer value for a relative comparison.\n",
            "oneOf": [
              {
                "description": "A date value, e.g., `\"after\": \"2020-08-01T12:00:00\"`",
                "type": "string"
              },
              {
                "type": "integer"
              }
            ]
          },
          "metric": {
            "description": "The metric you are targeting for the event.\n\nWhen using the metric `count` or `total_value`, `operator` and `value` are required.\n\nWhen using either `first` or `last`, `operator` and `value` are not allowed. Use one of the following combinations instead:\n\n* `before`/`precision`\n* `after`/`precision`\n* `on`/`on_precision`\n\n| Metric | Description |\n|---|---|\n| `count` | Evaluate based on the number of event occurrences. |\n| `total_value`   | Evaluate based on the cumulative event `value` associated with the target user. |\n| `last` | Evaluate based on the last occurence of an event for a given user/time window. |\n| `first` | Evaluate based on the first occurence of an event for a given user/time window. |\n",
            "enum": [
              "count",
              "total_value",
              "last",
              "first"
            ],
            "type": "string"
          },
          "on": {
            "description": "Use `on` in conjunction with the `first` or `last` metric to indicate either a specific date or period with precision. Use either:\n\n* A date in ISO-8601 format, e.g., `2020-08-10T17:28:34+0000` or\n* An integer which, when combined with the `on_precision` property, specifies the time period. For example, use `\"on\": 12` with `\"on_precision: \"month\"` to target events that occurred in December.\n",
            "oneOf": [
              {
                "description": "ISO-8601",
                "type": "string"
              },
              {
                "type": "integer"
              }
            ],
            "type": "string"
          },
          "on_precision": {
            "description": "When using the `first` or `last` metric with the `on` property to target events on, e.g., the 5th of any month, or only in March, use `on_precision`.",
            "enum": [
              "day",
              "month",
              "month_day",
              "year_month",
              "year_month_day"
            ],
            "type": "string"
          },
          "operator": {
            "description": "The comparison operator used to evaluate the activity expression. Use these operators (greater/less than, equal to, equal or greater/equal or less) when the `metric` is either `count` or `total_value`.\n",
            "enum": [
              "greater",
              "less",
              "equals",
              "greater_eq",
              "less_eq"
            ],
            "type": "string"
          },
          "precision": {
            "default": "days",
            "description": "If using a relative number (integer) for the `before`/`after`/`on` property,\nthe `precision` value will be interpreted as the number of time units ago, e.g.,\n*7 days ago*. Defaults to `days`.\n",
            "enum": [
              "days",
              "weeks",
              "months",
              "years"
            ],
            "type": "string"
          },
          "value": {
            "description": "The value that the `operator` uses to evaluate the target audience.\n",
            "type": "number"
          },
          "where": {
            "description": "The [Where Object](#schemas-whereobject).",
            "type": "object"
          }
        },
        "required": [
          "activity",
          "operator",
          "value"
        ],
        "title": "Activity Audience Object",
        "type": "object",
        "x-inline-component": false,
        "x-schema-tag": "Event Segmentation"
      },
      "amazonOverrideObject": {
        "description": "The platform override section for Kindle Fire (for Amazon Device Messaging).",
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actionsObject"
          },
          "alert": {
            "description": "A string that override the alert value provided at the top level, if any.",
            "type": "string"
          },
          "consolidation_key": {
            "description": "A string representing a key to suppress previous messages sent with the same key.",
            "type": "string"
          },
          "expires_after": {
            "description": "Delivery expiration, as either absolute ISO UTC timestamp, or number of seconds from now.",
            "oneOf": [
              {
                "description": "Number of seconds from now. When the delivery platform supports it, a value of zero (0) indicates that the message should be delivered immediately and never stored for later attempts.",
                "example": 3600,
                "type": "integer"
              },
              {
                "description": "An absolute ISO UTC timestamp.",
                "example": "2018-03-01T12:00:00",
                "type": "string"
              }
            ],
            "title": "Expiry",
            "type": "object"
          },
          "extra": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "A JSON dictionary of string-to-string key-value pairs. If you wish to pass structured data in an extra key, it must be JSON-encoded as a string.",
            "example": {
              "en": "English",
              "fr": "French"
            },
            "title": "Extra",
            "type": "object"
          },
          "icon": {
            "description": "A string representing an image file included in the application’s resources.",
            "type": "string"
          },
          "icon_color": {
            "description": "A string representing the icon color in API Color Format. i.e. '#rrggbb'",
            "type": "string"
          },
          "interactive": {
            "$ref": "#/components/schemas/interactiveObject"
          },
          "notification_channel": {
            "description": "A string representing a notification channel. Used to group notifications with similar behavior.",
            "type": "string"
          },
          "notification_tag": {
            "description": "A string representing a notification tag. If a message is currently displaying and has a tag set, sending another message with the same tag will replace the posted notification.",
            "type": "string"
          },
          "sound": {
            "description": "A string representing a sound file name included in the application’s resources.",
            "type": "string"
          },
          "style": {
            "description": "Advanced styles `big text`, `big picture`, and `inbox` are available on Android 4.3+ by adding the `style` to the platform specific notification payload on Android platforms. This object must contain a string field `type` which must be one of `big_picture`, `big_text`, or `inbox`. It may also contain `title` and `summary` override fields.",
            "properties": {
              "big_picture": {
                "description": "If the `type` is set to `big_picture`, then there must also be a `big_picture` string field which contains the URL for an image.",
                "format": "url",
                "type": "string"
              },
              "big_text": {
                "description": "If the `type` is set to `big_text`, then a `big_text` string field must be present with the text to be shown in big text style.",
                "type": "string"
              },
              "lines": {
                "description": "An array of strings.",
                "example": [
                  "line 1",
                  "line 2",
                  "line 3"
                ],
                "items": {
                  "description": "If the `type` field is set to `inbox` then a `lines` field should be provided as an array of strings.",
                  "type": "string"
                },
                "maxItems": 100,
                "minItems": 1,
                "type": "array"
              },
              "summary": {
                "description": "A string field which will override the summary of the notification.",
                "type": "string"
              },
              "title": {
                "description": "A string field which will override the title of the notification.",
                "type": "string"
              },
              "type": {
                "enum": [
                  "big_picture",
                  "big_text",
                  "inbox"
                ],
                "type": "string"
              }
            },
            "required": [
              "type"
            ],
            "title": "Android and Amazon Styles",
            "type": "object"
          },
          "summary": {
            "description": "A string representing a summary/subtitle of the notification.",
            "type": "string"
          },
          "title": {
            "description": "A string representing the title of the notification. The default value is the name of the app.",
            "type": "string"
          }
        },
        "title": "Amazon Override",
        "type": "object",
        "x-schema-tag": "Platform Overrides"
      },
      "amazonOverrideWithTemplate": {
        "description": "Use a `template` with an Amazon-specific message. You can reference a template by ID, or use `{{handlebars}}` directly in your message.",
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actionsObject"
          },
          "consolidation_key": {
            "description": "A string representing a key to suppress previous messages sent with the same key.",
            "type": "string"
          },
          "expires_after": {
            "description": "Delivery expiration, as either absolute ISO UTC timestamp, or number of seconds from now.",
            "oneOf": [
              {
                "description": "Number of seconds from now. When the delivery platform supports it, a value of zero (0) indicates that the message should be delivered immediately and never stored for later attempts.",
                "example": 3600,
                "type": "integer"
              },
              {
                "description": "An absolute ISO UTC timestamp.",
                "example": "2018-03-01T12:00:00",
                "type": "string"
              }
            ],
            "title": "Expiry",
            "type": "object"
          },
          "extra": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "A JSON dictionary of string-to-string key-value pairs. If you wish to pass structured data in an extra key, it must be JSON-encoded as a string.",
            "example": {
              "en": "English",
              "fr": "French"
            },
            "title": "Extra",
            "type": "object"
          },
          "interactive": {
            "$ref": "#/components/schemas/interactiveObject"
          },
          "notification_channel": {
            "description": "A string representing a notification channel. Used to group notifications with similar behavior.",
            "type": "string"
          },
          "notification_tag": {
            "description": "A string representing a notification tag. If a message is currently displaying and has a tag set, sending another message with the same tag will replace the posted notification.",
            "type": "string"
          },
          "sound": {
            "description": "A string representing a sound file name included in the application’s resources.",
            "type": "string"
          },
          "style": {
            "description": "Advanced styles `big text`, `big picture`, and `inbox` are available on Android 4.3+ by adding the `style` to the platform specific notification payload on Android platforms. This object must contain a string field `type` which must be one of `big_picture`, `big_text`, or `inbox`. It may also contain `title` and `summary` override fields.",
            "properties": {
              "big_picture": {
                "description": "If the `type` is set to `big_picture`, then there must also be a `big_picture` string field which contains the URL for an image.",
                "format": "url",
                "type": "string"
              },
              "big_text": {
                "description": "If the `type` is set to `big_text`, then a `big_text` string field must be present with the text to be shown in big text style.",
                "type": "string"
              },
              "lines": {
                "description": "An array of strings.",
                "example": [
                  "line 1",
                  "line 2",
                  "line 3"
                ],
                "items": {
                  "description": "If the `type` field is set to `inbox` then a `lines` field should be provided as an array of strings.",
                  "type": "string"
                },
                "maxItems": 100,
                "minItems": 1,
                "type": "array"
              },
              "summary": {
                "description": "A string field which will override the summary of the notification.",
                "type": "string"
              },
              "title": {
                "description": "A string field which will override the title of the notification.",
                "type": "string"
              },
              "type": {
                "enum": [
                  "big_picture",
                  "big_text",
                  "inbox"
                ],
                "type": "string"
              }
            },
            "required": [
              "type"
            ],
            "title": "Android and Amazon Styles",
            "type": "object"
          },
          "template": {
            "oneOf": [
              {
                "properties": {
                  "template_id": {
                    "description": "The `ID` of a template that you created in the Airship UI. You can find template IDs in *Messages » Content » Templates* in the dashboard.",
                    "format": "uuid",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              {
                "properties": {
                  "fields": {
                    "description": "Items in the field object are personalizable with handlebars.",
                    "properties": {
                      "alert": {
                        "description": "A string that override the alert value provided at the top level, if any.",
                        "type": "string"
                      },
                      "icon": {
                        "description": "A string representing an image file included in the application’s resources.",
                        "type": "string"
                      },
                      "icon_color": {
                        "description": "A string representing the icon color in API Color Format. i.e. '#rrggbb'",
                        "type": "string"
                      },
                      "summary": {
                        "description": "A string representing a summary/subtitle of the notification.",
                        "type": "string"
                      },
                      "title": {
                        "description": "A string representing the title of the notification. The default value is the name of the app.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            ]
          }
        },
        "title": "Amazon Override with Template",
        "type": "object",
        "x-schema-tag": "Platform Overrides with Templates"
      },
      "androidOverrideObject": {
        "description": "The platform override section for Android.",
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actionsObject"
          },
          "alert": {
            "description": "A string that override the alert value provided at the top level, if any.",
            "type": "string"
          },
          "category": {
            "description": "Helps determine notification sort order. Available on Android Lollipop+",
            "enum": [
              "alarm",
              "call",
              "email",
              "err",
              "event",
              "msg",
              "promo",
              "recommendation",
              "service",
              "social",
              "status",
              "sys",
              "transport"
            ],
            "type": "string"
          },
          "collapse_key": {
            "description": "A key indicating that this message can replace, or be replaced by, another message with the same `collapse_key`. This feature comes into play when a device is offline (e.g. airplane mode) or in doze mode; if multiple messages are available with the same collapse_key when a device comes back online, it will display only the most recent message and discard previous messages using the same `collapse_key`.",
            "type": "string"
          },
          "delay_while_idle": {
            "default": false,
            "deprecated": true,
            "description": "After Nov 15th 2016, this is still accepted by GCM, but ignored. When set to `true`, it indicates that the message should not be sent until the device becomes active. The default value is false.",
            "type": "boolean"
          },
          "delivery_priority": {
            "default": "normal",
            "description": "A string of either 'high' or 'normal', defaults to 'normal' if not provided. Sets the FCM/GCM priority of the message.",
            "enum": [
              "high",
              "normal"
            ],
            "type": "string"
          },
          "extra": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "A JSON dictionary of string-to-string key-value pairs. If you wish to pass structured data in an extra key, it must be JSON-encoded as a string.",
            "example": {
              "en": "English",
              "fr": "French"
            },
            "title": "Extra",
            "type": "object"
          },
          "icon": {
            "description": "A string representing an image file included in the application’s resources.",
            "type": "string"
          },
          "icon_color": {
            "description": "A string representing the icon color in API Color Format. i.e. '#rrggbb'",
            "type": "string"
          },
          "interactive": {
            "$ref": "#/components/schemas/interactiveObject"
          },
          "local_only": {
            "default": false,
            "description": "If true, the notification is only shown on wearable devices.",
            "type": "boolean"
          },
          "notification_channel": {
            "description": "A string representing a notification channel. Used to group notifications with similar behavior.",
            "type": "string"
          },
          "notification_tag": {
            "description": "A string representing a notification tag. If a message is currently displaying and has a tag set, sending another message with the same tag will replace the posted notification.",
            "type": "string"
          },
          "priority": {
            "description": "An integer in the range from -2 to 2 inclusive. Used to help determine notification sort order. 2 is the highest priority, -2 is the lowest, and 0 is the default priority.",
            "format": "int32",
            "maximum": 2,
            "minimum": -2,
            "type": "integer"
          },
          "public_notification": {
            "description": "An optional notification to show on lock screen instead of the redacted one. This is only useful with visibility set to -1 (private). The object may contain any of the following string fields `title`, `alert`, and `summary`.",
            "properties": {
              "alert": {
                "type": "string"
              },
              "summary": {
                "type": "string"
              },
              "title": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "sound": {
            "description": "A string representing a sound file name included in the application’s resources.",
            "type": "string"
          },
          "style": {
            "description": "Advanced styles `big text`, `big picture`, and `inbox` are available on Android 4.3+ by adding the `style` to the platform specific notification payload on Android platforms. This object must contain a string field `type` which must be one of `big_picture`, `big_text`, or `inbox`. It may also contain `title` and `summary` override fields.",
            "properties": {
              "big_picture": {
                "description": "If the `type` is set to `big_picture`, then there must also be a `big_picture` string field which contains the URL for an image.",
                "format": "url",
                "type": "string"
              },
              "big_text": {
                "description": "If the `type` is set to `big_text`, then a `big_text` string field must be present with the text to be shown in big text style.",
                "type": "string"
              },
              "lines": {
                "description": "An array of strings.",
                "example": [
                  "line 1",
                  "line 2",
                  "line 3"
                ],
                "items": {
                  "description": "If the `type` field is set to `inbox` then a `lines` field should be provided as an array of strings.",
                  "type": "string"
                },
                "maxItems": 100,
                "minItems": 1,
                "type": "array"
              },
              "summary": {
                "description": "A string field which will override the summary of the notification.",
                "type": "string"
              },
              "title": {
                "description": "A string field which will override the title of the notification.",
                "type": "string"
              },
              "type": {
                "enum": [
                  "big_picture",
                  "big_text",
                  "inbox"
                ],
                "type": "string"
              }
            },
            "required": [
              "type"
            ],
            "title": "Android and Amazon Styles",
            "type": "object"
          },
          "summary": {
            "description": "A string representing a summary/subtitle of the notification.",
            "type": "string"
          },
          "time_to_live": {
            "description": "Delivery expiration, as either absolute ISO UTC timestamp, or number of seconds from now.",
            "oneOf": [
              {
                "description": "Number of seconds from now. When the delivery platform supports it, a value of zero (0) indicates that the message should be delivered immediately and never stored for later attempts.",
                "example": 3600,
                "type": "integer"
              },
              {
                "description": "An absolute ISO UTC timestamp.",
                "example": "2018-03-01T12:00:00",
                "type": "string"
              }
            ],
            "title": "Expiry",
            "type": "object"
          },
          "title": {
            "description": "A string representing the title of the notification. The default value is the name of the app.",
            "type": "string"
          },
          "visibility": {
            "description": "An integer in the range from -1 to 1 inclusive. 1 = public (default), 0 = private, -1 = secret. Secret does not show any notifications. Private shows a redacted version of the notification.",
            "enum": [
              -1,
              0,
              1
            ],
            "format": "int32",
            "type": "integer"
          },
          "wearable": {
            "description": "Provides options for messages displayed on wearable Android devices.",
            "properties": {
              "background_image": {
                "description": "The URL to a background image to display on the wearable device.",
                "type": "string"
              },
              "extra_pages": {
                "description": "array of objects, each with a `title` and `alert` string attributes specifying extra pages of text to appear as pages after the notification alert on the wearable device.",
                "items": {
                  "properties": {
                    "alert": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "interactive": {
                "$ref": "#/components/schemas/interactiveObject"
              }
            },
            "type": "object"
          }
        },
        "title": "Android Override",
        "type": "object",
        "x-schema-tag": "Platform Overrides"
      },
      "androidOverrideWithTemplate": {
        "description": "Use a `template` with an Android-specific fields. You can reference a template by ID, or use `{{handlebars}}` directly in your message.",
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actionsObject"
          },
          "category": {
            "description": "Helps determine notification sort order. Available on Android Lollipop+",
            "enum": [
              "alarm",
              "call",
              "email",
              "err",
              "event",
              "msg",
              "promo",
              "recommendation",
              "service",
              "social",
              "status",
              "sys",
              "transport"
            ],
            "type": "string"
          },
          "collapse_key": {
            "description": "A key indicating that this message can replace, or be replaced by, another message with the same `collapse_key`. This feature comes into play when a device is offline (e.g. airplane mode) or in doze mode; if multiple messages are available with the same collapse_key when a device comes back online, it will display only the most recent message and discard previous messages using the same `collapse_key`.",
            "type": "string"
          },
          "delay_while_idle": {
            "default": false,
            "deprecated": true,
            "description": "After Nov 15th 2016, this is still accepted by GCM, but ignored. When set to `true`, it indicates that the message should not be sent until the device becomes active. The default value is false.",
            "type": "boolean"
          },
          "delivery_priority": {
            "default": "normal",
            "description": "A string of either 'high' or 'normal', defaults to 'normal' if not provided. Sets the FCM/GCM priority of the message.",
            "enum": [
              "high",
              "normal"
            ],
            "type": "string"
          },
          "extra": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "A JSON dictionary of string-to-string key-value pairs. If you wish to pass structured data in an extra key, it must be JSON-encoded as a string.",
            "example": {
              "en": "English",
              "fr": "French"
            },
            "title": "Extra",
            "type": "object"
          },
          "interactive": {
            "$ref": "#/components/schemas/interactiveObject"
          },
          "local_only": {
            "default": false,
            "description": "If true, the notification is only shown on wearable devices.",
            "type": "boolean"
          },
          "notification_channel": {
            "description": "A string representing a notification channel. Used to group notifications with similar behavior.",
            "type": "string"
          },
          "notification_tag": {
            "description": "A string representing a notification tag. If a message is currently displaying and has a tag set, sending another message with the same tag will replace the posted notification.",
            "type": "string"
          },
          "priority": {
            "description": "An integer in the range from -2 to 2 inclusive. Used to help determine notification sort order. 2 is the highest priority, -2 is the lowest, and 0 is the default priority.",
            "format": "int32",
            "maximum": 2,
            "minimum": -2,
            "type": "integer"
          },
          "public_notification": {
            "description": "An optional notification to show on lock screen instead of the redacted one. This is only useful with visibility set to -1 (private). The object may contain any of the following string fields `title`, `alert`, and `summary`.",
            "properties": {
              "alert": {
                "type": "string"
              },
              "summary": {
                "type": "string"
              },
              "title": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "sound": {
            "description": "A string representing a sound file name included in the application’s resources.",
            "type": "string"
          },
          "style": {
            "description": "Advanced styles `big text`, `big picture`, and `inbox` are available on Android 4.3+ by adding the `style` to the platform specific notification payload on Android platforms. This object must contain a string field `type` which must be one of `big_picture`, `big_text`, or `inbox`. It may also contain `title` and `summary` override fields.",
            "properties": {
              "big_picture": {
                "description": "If the `type` is set to `big_picture`, then there must also be a `big_picture` string field which contains the URL for an image.",
                "format": "url",
                "type": "string"
              },
              "big_text": {
                "description": "If the `type` is set to `big_text`, then a `big_text` string field must be present with the text to be shown in big text style.",
                "type": "string"
              },
              "lines": {
                "description": "An array of strings.",
                "example": [
                  "line 1",
                  "line 2",
                  "line 3"
                ],
                "items": {
                  "description": "If the `type` field is set to `inbox` then a `lines` field should be provided as an array of strings.",
                  "type": "string"
                },
                "maxItems": 100,
                "minItems": 1,
                "type": "array"
              },
              "summary": {
                "description": "A string field which will override the summary of the notification.",
                "type": "string"
              },
              "title": {
                "description": "A string field which will override the title of the notification.",
                "type": "string"
              },
              "type": {
                "enum": [
                  "big_picture",
                  "big_text",
                  "inbox"
                ],
                "type": "string"
              }
            },
            "required": [
              "type"
            ],
            "title": "Android and Amazon Styles",
            "type": "object"
          },
          "template": {
            "oneOf": [
              {
                "properties": {
                  "template_id": {
                    "description": "The `ID` of a template that you created in the Airship UI. You can find template IDs in *Messages » Content » Templates* in the dashboard.",
                    "format": "uuid",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              {
                "properties": {
                  "fields": {
                    "description": "Items in the field object are personalizable with handlebars.",
                    "properties": {
                      "alert": {
                        "description": "A string that override the alert value provided at the top level, if any.",
                        "type": "string"
                      },
                      "icon": {
                        "description": "A string representing an image file included in the application’s resources.",
                        "type": "string"
                      },
                      "icon_color": {
                        "description": "A string representing the icon color in API Color Format. i.e. '#rrggbb'",
                        "type": "string"
                      },
                      "summary": {
                        "description": "A string representing a summary/subtitle of the notification.",
                        "type": "string"
                      },
                      "title": {
                        "description": "A string representing the title of the notification. The default value is the name of the app.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            ]
          },
          "time_to_live": {
            "description": "Delivery expiration, as either absolute ISO UTC timestamp, or number of seconds from now.",
            "oneOf": [
              {
                "description": "Number of seconds from now. When the delivery platform supports it, a value of zero (0) indicates that the message should be delivered immediately and never stored for later attempts.",
                "example": 3600,
                "type": "integer"
              },
              {
                "description": "An absolute ISO UTC timestamp.",
                "example": "2018-03-01T12:00:00",
                "type": "string"
              }
            ],
            "title": "Expiry",
            "type": "object"
          },
          "visibility": {
            "description": "An integer in the range from -1 to 1 inclusive. 1 = public (default), 0 = private, -1 = secret. Secret does not show any notifications. Private shows a redacted version of the notification.",
            "enum": [
              -1,
              0,
              1
            ],
            "format": "int32",
            "type": "integer"
          },
          "wearable": {
            "description": "Provides options for messages displayed on wearable Android devices.",
            "properties": {
              "background_image": {
                "description": "The URL to a background image to display on the wearable device.",
                "type": "string"
              },
              "extra_pages": {
                "description": "array of objects, each with a `title` and `alert` string attributes specifying extra pages of text to appear as pages after the notification alert on the wearable device.",
                "items": {
                  "properties": {
                    "alert": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "interactive": {
                "$ref": "#/components/schemas/interactiveObject"
              }
            },
            "type": "object"
          }
        },
        "title": "Android Override with Template",
        "type": "object",
        "x-schema-tag": "Platform Overrides with Templates"
      },
      "atomicSelector": {
        "description": "Atomic selectors are the simplest way to identify a single device, i.e., app or browser installation, or a group of devices. These selectors are either a unique identifier for the device such as a channel ID or metadata that maps to the device (or multiple devices) such as a tag.",
        "oneOf": [
          {
            "description": "The simplest selector, which targets the entire audience.",
            "enum": [
              "all"
            ],
            "title": "All Selector",
            "type": "string"
          },
          {
            "description": "A tag is an arbitrary bit of metadata used for targeting devices. A tag specifier may or may not have an associated group declaration, indicating a `tag group` the tag belongs to, for example {\"tag\": \"silver-member\", \"group\": \"loyalty\"}. If no tag group is specified, the default `device` group is used.",
            "example": [
              {
                "tag": [
                  "Federer fan",
                  "Messi fan"
                ]
              },
              {
                "group": "Loyalty",
                "tag": [
                  "silver",
                  "ten-plus"
                ]
              }
            ],
            "properties": {
              "group": {
                "type": "string"
              },
              "tag": {
                "oneOf": [
                  {
                    "maxLength": 128,
                    "minLength": 1,
                    "type": "string"
                  },
                  {
                    "example": [
                      "hello",
                      "world"
                    ],
                    "items": {
                      "maxLength": 128,
                      "minLength": 1,
                      "type": "string"
                    },
                    "maxItems": 100,
                    "minItems": 1,
                    "type": "array"
                  }
                ]
              }
            },
            "required": [
              "tag"
            ],
            "title": "Tag Selector",
            "type": "object"
          },
          {
            "description": "The segment ID.",
            "properties": {
              "segment": {
                "oneOf": [
                  {
                    "format": "uuid",
                    "type": "string"
                  },
                  {
                    "example": [
                      "00256e0b-b02f-4f12-a77f-4c3d57078330",
                      "f59970d3-3d42-4584-907e-f5c57f5d46a1"
                    ],
                    "items": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "maxItems": 100,
                    "minItems": 1,
                    "type": "array"
                  }
                ]
              }
            },
            "required": [
              "segment"
            ],
            "title": "Segment Selector",
            "type": "object"
          },
          {
            "description": "The unique channel identifier used to target a web device, i.e., web browser.",
            "properties": {
              "channel": {
                "oneOf": [
                  {
                    "format": "uuid",
                    "type": "string"
                  },
                  {
                    "example": [
                      "00256e0b-b02f-4f12-a77f-4c3d57078330",
                      "f59970d3-3d42-4584-907e-f5c57f5d46a1"
                    ],
                    "items": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "maxItems": 100,
                    "minItems": 1,
                    "type": "array"
                  }
                ]
              }
            },
            "required": [
              "channel"
            ],
            "title": "Channel Selector",
            "type": "object"
          },
          {
            "description": "A `named_user` is an alternate, non-unique name, mapped to a user profile in a different database, e.g., CRM, that can be used to target devices associated with that profile.",
            "example": [
              "john_doe",
              "ID#998877"
            ],
            "properties": {
              "named_user": {
                "oneOf": [
                  {
                    "maxLength": 128,
                    "minLength": 1,
                    "type": "string"
                  },
                  {
                    "example": [
                      "hello",
                      "world"
                    ],
                    "items": {
                      "maxLength": 128,
                      "minLength": 1,
                      "type": "string"
                    },
                    "maxItems": 100,
                    "minItems": 1,
                    "type": "array"
                  }
                ]
              }
            },
            "required": [
              "named_user"
            ],
            "title": "Named User Selector",
            "type": "object"
          },
          {
            "description": "The unique channel identifier used to target an Amazon device.",
            "properties": {
              "amazon_channel": {
                "oneOf": [
                  {
                    "format": "uuid",
                    "type": "string"
                  },
                  {
                    "example": [
                      "00256e0b-b02f-4f12-a77f-4c3d57078330",
                      "f59970d3-3d42-4584-907e-f5c57f5d46a1"
                    ],
                    "items": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "maxItems": 100,
                    "minItems": 1,
                    "type": "array"
                  }
                ]
              }
            },
            "required": [
              "amazon_channel"
            ],
            "title": "Amazon Channel Selector",
            "type": "object"
          },
          {
            "description": "The unique channel identifier used to target an Android device.",
            "properties": {
              "android_channel": {
                "oneOf": [
                  {
                    "format": "uuid",
                    "type": "string"
                  },
                  {
                    "example": [
                      "00256e0b-b02f-4f12-a77f-4c3d57078330",
                      "f59970d3-3d42-4584-907e-f5c57f5d46a1"
                    ],
                    "items": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "maxItems": 100,
                    "minItems": 1,
                    "type": "array"
                  }
                ]
              }
            },
            "required": [
              "android_channel"
            ],
            "title": "Android Channel Selector",
            "type": "object"
          },
          {
            "description": "The unique channel identifier used to target a device on an open platform.",
            "properties": {
              "open_channel": {
                "oneOf": [
                  {
                    "format": "uuid",
                    "type": "string"
                  },
                  {
                    "example": [
                      "00256e0b-b02f-4f12-a77f-4c3d57078330",
                      "f59970d3-3d42-4584-907e-f5c57f5d46a1"
                    ],
                    "items": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "maxItems": 100,
                    "minItems": 1,
                    "type": "array"
                  }
                ]
              }
            },
            "required": [
              "open_channel"
            ],
            "title": "Open Channel Selector",
            "type": "object"
          },
          {
            "description": "A long or short code the app is configured to send from. When using a short code, prepend the ISO 3166-1 alpha-2 formatted country code to the short code with a colon, e.g.: `US:12345`. Failing to provide the country code will only cause an error if your app contains multiple short code senders for different countries. See the [ISO 3166 browsing tool](https://www.iso.org/obp/ui/#search) to locate the proper alpha-2 country code.",
            "properties": {
              "sms_sender": {
                "oneOf": [
                  {
                    "maxLength": 16,
                    "minLength": 1,
                    "type": "string"
                  },
                  {
                    "items": {
                      "maxLength": 16,
                      "minLength": 1,
                      "type": "string"
                    },
                    "maxItems": 100,
                    "minItems": 1,
                    "type": "array"
                  }
                ]
              }
            },
            "required": [
              "sms_sender"
            ],
            "title": "SMS Sender Selector",
            "type": "string"
          },
          {
            "description": "Selects a single SMS device. The `msisdn` must be `opted_in` to receive notifications.",
            "properties": {
              "msisdn": {
                "description": "The recipient phone number.",
                "maxLength": 128,
                "minLength": 1,
                "type": "string"
              },
              "sender": {
                "description": "The sender that the app is configured to send SMS messages from.",
                "maxLength": 128,
                "minLength": 1,
                "type": "string"
              }
            },
            "required": [
              "sender",
              "msisdn"
            ],
            "title": "SMS ID Selector",
            "type": "object"
          },
          {
            "description": "A `static_list` is a subset of your audience defined by a CSV file containing channel IDs or Named Users.",
            "example": [
              "preferred_customers"
            ],
            "properties": {
              "static_list": {
                "oneOf": [
                  {
                    "maxLength": 128,
                    "minLength": 1,
                    "type": "string"
                  },
                  {
                    "example": [
                      "hello",
                      "world"
                    ],
                    "items": {
                      "maxLength": 128,
                      "minLength": 1,
                      "type": "string"
                    },
                    "maxItems": 100,
                    "minItems": 1,
                    "type": "array"
                  }
                ]
              }
            },
            "required": [
              "static_list"
            ],
            "title": "Static List Selector",
            "type": "object"
          },
          {
            "description": "An single instance or array of [subscription list IDs](#schemas-subscriptionlistobject-list_id).",
            "example": [
              "monthly_newsletter"
            ],
            "properties": {
              "subscription_list": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "example": [
                      "strange_facts",
                      "cool_newsletter"
                    ],
                    "items": {
                      "maxLength": 32,
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": "array"
                  }
                ]
              }
            },
            "required": [
              "subscription_list"
            ],
            "title": "Subscription List Selector",
            "type": "object"
          },
          {
            "$ref": "#/components/schemas/textAttribute"
          },
          {
            "$ref": "#/components/schemas/numberAttribute"
          },
          {
            "$ref": "#/components/schemas/dateAttribute"
          },
          {
            "deprecated": true,
            "description": "Deprecated. A legacy mechanism used for mapping devices to a customer ID, e.g., a CRM identifier. Superseded by `named_user`.",
            "properties": {
              "alias": {
                "oneOf": [
                  {
                    "maxLength": 128,
                    "minLength": 1,
                    "type": "string"
                  },
                  {
                    "example": [
                      "hello",
                      "world"
                    ],
                    "items": {
                      "maxLength": 128,
                      "minLength": 1,
                      "type": "string"
                    },
                    "maxItems": 100,
                    "minItems": 1,
                    "type": "array"
                  }
                ]
              }
            },
            "required": [
              "alias"
            ],
            "title": "Alias Selector",
            "type": "object"
          },
          {
            "deprecated": true,
            "description": "A legacy identifier for targeting Android and Windows devices, superseded by `android_channel`.",
            "properties": {
              "apid": {
                "oneOf": [
                  {
                    "format": "uuid",
                    "type": "string"
                  },
                  {
                    "example": [
                      "00256e0b-b02f-4f12-a77f-4c3d57078330",
                      "f59970d3-3d42-4584-907e-f5c57f5d46a1"
                    ],
                    "items": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "maxItems": 100,
                    "minItems": 1,
                    "type": "array"
                  }
                ]
              }
            },
            "required": [
              "apid"
            ],
            "title": "APID Selector",
            "type": "object"
          },
          {
            "description": "The unique identifier used to target a Windows device using the Window Push Notification Service (WNS).",
            "properties": {
              "wns": {
                "oneOf": [
                  {
                    "format": "uuid",
                    "type": "string"
                  },
                  {
                    "example": [
                      "00256e0b-b02f-4f12-a77f-4c3d57078330",
                      "f59970d3-3d42-4584-907e-f5c57f5d46a1"
                    ],
                    "items": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "maxItems": 100,
                    "minItems": 1,
                    "type": "array"
                  }
                ]
              }
            },
            "required": [
              "wms"
            ],
            "title": "WNS Selector",
            "type": "object"
          },
          {
            "$ref": "#/components/schemas/activityObject"
          },
          {
            "description": "A special selector used in Pipelines to indicate that the audience of the push is composed of the device or devices that activated the trigger. See [Pipeline Objects](#schema-tag-pipeline-objects) for more information.",
            "enum": [
              "triggered"
            ],
            "title": "Triggered Selector",
            "type": "string"
          }
        ],
        "title": "Atomic Selector",
        "type": "object",
        "x-schema-tag": "Audience Selection"
      },
      "attributes": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "number"
            },
            {
              "type": "integer"
            }
          ]
        },
        "description": "Attributes associated with a channel or named user. This object contains predefined attributes that you enable and assign to the channel, or custom attributes that you create and assign.\n\nThis object enumerates predefined attributes, but you can [create your own in the Airship dashboard](/guides/messaging/user-guide/audience/segmentation/attributes/project/#adding-attributes)\n",
        "properties": {
          "account_creation": {
            "description": "The date-time when the user created their account.",
            "type": "string"
          },
          "advertising_id": {
            "description": "The IDFA associated with a user.",
            "type": "string"
          },
          "age": {
            "description": "The user's age.",
            "type": "integer"
          },
          "altitude": {
            "description": "The altitude associated with a user.",
            "type": "number"
          },
          "birthdate": {
            "description": "The user's birthdate.",
            "type": "string"
          },
          "city": {
            "description": "The city associated with the channel.",
            "type": "string"
          },
          "company": {
            "description": "The company that a user is associated with.",
            "type": "string"
          },
          "country": {
            "description": "The country associated with the channel.",
            "type": "string"
          },
          "email": {
            "description": "A user's email address.",
            "type": "string"
          },
          "first_name": {
            "description": "The first name of a user.",
            "type": "string"
          },
          "full_name": {
            "description": "A user's first and last names.",
            "type": "string"
          },
          "gender": {
            "description": "A user's gender.",
            "type": "string"
          },
          "home_phone": {
            "description": "The user's home phone number — similar to an SMS channel `msisdn`.",
            "type": "integer"
          },
          "last_name": {
            "description": "The last name of a user.",
            "type": "string"
          },
          "latitude": {
            "description": "The latitude associated with a user — maybe their default location.",
            "type": "number"
          },
          "longitude": {
            "description": "The longitude associated with a user — maybe their default location.",
            "type": "number"
          },
          "loyalty_tier": {
            "description": "The loyalty program tier that a user is associated with, e.g. gold, platinum, etc.",
            "type": "string"
          },
          "mobile_phone": {
            "description": "The user's mobile phone number — similar to an SMS channel `msisdn`.",
            "type": "integer"
          },
          "region": {
            "description": "The state, province, principality, etc associated with the channel.",
            "type": "string"
          },
          "title": {
            "description": "A default attribute. You must enable this attribute in the dashboard before you can assign it.",
            "type": "string"
          },
          "username": {
            "description": "A user's username — generally a part of their login information.",
            "type": "string"
          },
          "work_phone": {
            "description": "The user's work phone number — similar to an SMS channel `msisdn`.",
            "type": "integer"
          },
          "zipcode": {
            "description": "A user's zipcode. This is different from the SMS channel `ua_ndc` attribute, that records users area code or phone number prefix.",
            "type": "integer"
          }
        },
        "title": "Custom and Predefined Attributes",
        "type": "object",
        "x-schema-tag": "Attributes"
      },
      "attributesObject": {
        "properties": {
          "attributes": {
            "description": "The attributes that you want to set for, or remove from, your `audience`. You can have both `set` and `remove` actions in the same request.\n",
            "items": {
              "oneOf": [
                {
                  "description": "Add a new attribute, or edit the value of an existing attribute, for the audience.\n",
                  "properties": {
                    "action": {
                      "description": "Indicate that you want to `set` an attribute on the audience.\n",
                      "enum": [
                        "set"
                      ],
                      "type": "string"
                    },
                    "key": {
                      "description": "The attribute you want to set.",
                      "type": "string"
                    },
                    "timestamp": {
                      "description": "The ISO 8601 timestamp when the attribute changed. If you don't enter a timestamp, Airship uses the current time.\n",
                      "type": "string"
                    },
                    "value": {
                      "description": "The value that you want to set for an attribute. Accepts numbers or strings for integer/number type attributes, but your string must be convertible to a number or the request will fail.\n",
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        }
                      ]
                    }
                  },
                  "required": [
                    "action",
                    "key",
                    "value"
                  ],
                  "title": "Set Attribute",
                  "type": "object"
                },
                {
                  "description": "Remove an existing attribute from the audience.\n",
                  "properties": {
                    "action": {
                      "description": "Indicate that you want to `remove` an attribute from the audience.\n",
                      "enum": [
                        "remove"
                      ],
                      "type": "string"
                    },
                    "key": {
                      "description": "The attribute you want to remove.",
                      "type": "string"
                    },
                    "timestamp": {
                      "description": "The ISO 8601 timestamp when the attribute changed. If you don't enter a timestamp, Airship uses the current time.\n",
                      "type": "string"
                    }
                  },
                  "required": [
                    "action",
                    "key"
                  ],
                  "title": "Remove Attribute",
                  "type": "object"
                }
              ]
            },
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "attributes"
        ],
        "title": "Attribute Assignment",
        "type": "object",
        "x-inline-component": false,
        "x-schema-tag": "Attributes"
      },
      "audienceSelector": {
        "description": "An audience selector forms the expression that determines the set of channels to target.",
        "oneOf": [
          {
            "$ref": "#/components/schemas/compoundSelector"
          },
          {
            "$ref": "#/components/schemas/atomicSelector"
          }
        ],
        "title": "Audience Selector",
        "x-schema-tag": "Audience Selection"
      },
      "campaignsObject": {
        "description": "An object specifying custom campaign categories related to the notification.",
        "properties": {
          "categories": {
            "description": "Array of strings representing the campaigns you wish to associate with the notification. Must have between 1 to 10 items in the array with a 64 character/byte maximum per item.",
            "example": [
              "shoes",
              "running",
              "summer 2017"
            ],
            "items": {
              "maxLength": 64,
              "type": "string"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "categories"
        ],
        "title": "Campaigns Object",
        "type": "object"
      },
      "channelObject": {
        "description": "Describes a channel.",
        "properties": {
          "address": {
            "description": "The address to send push notifications to when `device_type` is `email` or `open`. For all other `device_type` values, this key is replaced with `push_address`.",
            "example": "email@address.com",
            "type": "string"
          },
          "alias": {
            "deprecated": true,
            "description": "Deprecated. Displays the alias associated with the channel, if one exist Aliases are the precursor to Named Users, our user mapping system. If you are using aliases, please upgrade to [Named Users](../../guides/messaging/user-guide/audience/segmentation/named-users/). Listed as `null` when not set.",
            "example": "alias_nope",
            "nullable": true,
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/attributes",
            "description": "A dictionary of attributes that you've associated with the channel. See [Attributes]() for more information about creating and assigning attributes.\n\nThe attributes listed here are \"predefined\" by Airship, but you can create new attributes in the Airship dashboard.\n"
          },
          "background": {
            "description": "If true, the device can receive background push notifications. If false, it cannot. This field only appears for iOS devices on the 5.0+ SDK.",
            "type": "boolean"
          },
          "channel_id": {
            "description": "The unique channel identifier for a device.",
            "example": "9c36e8c7-5a73-47c0-9716-99fd3d4197d5",
            "format": "uuid",
            "type": "string"
          },
          "commercial_opted_in": {
            "description": "The date-time when a user gave explicit permission to receive commercial\nemails.\n",
            "type": "string"
          },
          "commercial_opted_out": {
            "description": "The date-time when a user explicitly denied permission to receive\ncommercial emails.\n",
            "type": "string"
          },
          "created": {
            "description": "The creation date of this channel.",
            "readOnly": true,
            "type": "string"
          },
          "device_attributes": {
            "$ref": "#/components/schemas/device_attributes"
          },
          "device_type": {
            "description": "Specifies the device platform for a channel.",
            "enum": [
              "ios",
              "android",
              "amazon",
              "web",
              "open",
              "email",
              "sms"
            ],
            "type": "string"
          },
          "installed": {
            "description": "If true, the channel is installed. If false, it is uninstalled.",
            "type": "boolean"
          },
          "ios": {
            "description": "Contains parameters that apply when the `device_type` is set to `ios`.",
            "properties": {
              "badge": {
                "description": "The iOS badge number. Must be greater than zero.",
                "format": "int32",
                "type": "integer"
              },
              "quiettime": {
                "description": "[Quiet time](../../integration/#int-quiet-time) settings. Requires presence of `tz`.",
                "properties": {
                  "end": {
                    "description": "Quiet time end in `HH:MM` format.",
                    "example": "07:30",
                    "nullable": true,
                    "type": "string"
                  },
                  "start": {
                    "description": "Quiet time start in `HH:MM` format.",
                    "example": "21:30",
                    "nullable": true,
                    "type": "string"
                  }
                },
                "title": "Quiet Time Object",
                "type": "object"
              },
              "tz": {
                "description": "The channel's time zone. A list of possible time zone values is maintained at the [IANA Time Zone Database](http://www.iana.org/time-zones).",
                "example": "America/Los_Angeles",
                "nullable": true,
                "type": "string"
              }
            },
            "title": "iOS Channel Object",
            "type": "object"
          },
          "last_registration": {
            "description": "The last registration date of this channel, if known.",
            "nullable": true,
            "readOnly": true,
            "type": "string"
          },
          "named_user_id": {
            "description": "A customer-chosen ID that represents the device user, e.g., CRM ID. This ID cannot have leading or trailing whitespace.",
            "example": "john_doe",
            "maxLength": 128,
            "minLength": 1,
            "nullable": true,
            "pattern": "^[^\\s].{1,125}\\S$",
            "type": "string"
          },
          "open": {
            "description": "Contains options that apply when the `device_type` is set to `open`.",
            "properties": {
              "identifiers": {
                "additionalProperties": true,
                "description": "A set of up to 100 key:value pairs representing identifiers for this channel in your own delivery systems and delivered as a part of webhook payloads.",
                "example": {
                  "slack-handle": "slackinator"
                },
                "type": "object"
              },
              "open_platform_name": {
                "description": "The name of the open channel that this `channel_id` is registered on.",
                "example": "Slack",
                "type": "string"
              }
            },
            "title": "Open Channel Options",
            "type": "object"
          },
          "opt_in": {
            "description": "If true, the channel is opted-in to push notifications. If false, it is not.",
            "type": "boolean"
          },
          "push_address": {
            "description": "The address to send push notifications to for all `device_type` values other than `email` and `open`. When `device_type` is `email` or `open`, this key is replaced with `address`.",
            "example": "FE66489F304DC75B8D6E8200DFF8A456E8DAEACEC428B427E9518741C92C6660",
            "nullable": true,
            "type": "string"
          },
          "tag_groups": {
            "$ref": "#/components/schemas/tagGroupObject",
            "description": "One or more tag group objects (including [Device Property Tags](../../reference/device-property-tags/)) associated with this channel."
          },
          "tags": {
            "description": "An array of tags associated with this channel.",
            "example": [
              "Federer fan",
              "Messi fan"
            ],
            "items": {
              "maxLength": 128,
              "minLength": 1,
              "type": "string"
            },
            "maxItems": 1000,
            "minItems": 0,
            "type": "array"
          },
          "transactional_opted_in": {
            "description": "The date-time when a user gave explicit permission to receive transactional\nemails. Users do not need to opt-in to receive transactional\nemails unless they have previously opted out.\n",
            "type": "string"
          },
          "transactional_opted_out": {
            "description": "The date-time when a user explicitly denied permission to receive\ntransactional emails.\n",
            "type": "string"
          },
          "web": {
            "description": "Contains parameters that apply when the `device_type` is set to `web`.",
            "properties": {
              "subscription": {
                "description": "Encryption keys required for signing the push package.",
                "properties": {
                  "auth": {
                    "description": "The authentication secret.",
                    "type": "string"
                  },
                  "p256dh": {
                    "description": "The public key.",
                    "type": "string"
                  }
                },
                "title": "Subscription Web Channel Object",
                "type": "object"
              },
              "user_agent_string": {
                "description": "The full user agent string.",
                "type": "string"
              }
            },
            "title": "Web Channel properties",
            "type": "object"
          }
        },
        "title": "Channel Object",
        "type": "object"
      },
      "complexEventSelector": {
        "description": "An event selector is a JSON dictionary consisting of a set of (possibly negated)\nevent-specific selectors joined together by a doubly-nested set of operators,\nin disjunctive or conjunctive normal form. That is, only queries of the pattern\n\"single AND of ORs\" or \"single OR of ANDs\" are allowed (no further nesting is allowed),\nand only leaf nodes of such queries may be negated. Elision of single-value operators\nis allowed for the sake of brevity/usability on writes, but responses from our servers\nwill always be fully qualified.\n\nEvent-specific selectors are allowed to reference any field in a potentially matching\nevent, at any nesting depth therein, with the goal of matching their structure to\nexisting API formats, both inbound and outbound.\n\nTop-level operator dictionaries are of the form `{\"and\": []}` or `{\"or\": []}`, where the members\nof the array will be operator dictionaries of the other type (\"AND of ORs\" or \"OR of ANDs\"),\nor if eliding on ingress, negation operator dictionaries or event-specific selectors.\n\nNegation operator dictionaries are of the form `{\"not\": {}}` where the inner object is strictly\nan event-specific selector. I.e., only leaf nodes may be negated, in keeping with the tenets of\nconjunctive/disjunctive normal form.",
        "oneOf": [
          {
            "description": "Defines an event value to match.",
            "properties": {
              "key": {
                "description": "The field you want to match a value against.",
                "type": "string"
              },
              "scope": {
                "description": "Specifies an inner-dictionary on a potentially-matching event.",
                "type": "string"
              },
              "value": {
                "description": "Specifies the criteria qualifying a value as a match. Integer values support\nup to 6 digits of decimal precision. You can specify a range of values using\n`at_least`/`greater_than` and `at_most`/`less_than`, but the value for\n`at_least`/`greater_than` must be less than the value of `at_most`/`less_than`\nor your request will return an error.\n",
                "properties": {
                  "array_contains": {
                    "description": "Matches if an array contains the specified string value.",
                    "type": "string"
                  },
                  "at_least": {
                    "description": "Matches values greater than the specified value.",
                    "type": "integer"
                  },
                  "at_most": {
                    "description": "Matches values less than the specified value.",
                    "type": "integer"
                  },
                  "equals": {
                    "anyOf": [
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      }
                    ],
                    "description": "Specifies an exact match. String values are case sensitive and must match exactly."
                  },
                  "greater_than": {
                    "description": "Matches values greater than the specified value.",
                    "type": "integer"
                  },
                  "less_than": {
                    "description": "Matches values less than the specified value.",
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            },
            "required": [
              "key",
              "value"
            ],
            "title": "Event Value Selector",
            "type": "object",
            "x-schema-tag": "Pipeline Objects"
          },
          {
            "description": "AND selector",
            "properties": {
              "and": {
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/complexEventSelector"
                    }
                  ]
                },
                "type": "array"
              }
            },
            "title": "AND Selector",
            "type": "object"
          },
          {
            "description": "OR selector",
            "properties": {
              "or": {
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/complexEventSelector"
                    }
                  ]
                },
                "type": "array"
              }
            },
            "title": "OR Selector",
            "type": "object"
          },
          {
            "description": "NOT selector",
            "properties": {
              "not": {
                "description": "Defines an event value to match.",
                "properties": {
                  "key": {
                    "description": "The field you want to match a value against.",
                    "type": "string"
                  },
                  "scope": {
                    "description": "Specifies an inner-dictionary on a potentially-matching event.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Specifies the criteria qualifying a value as a match. Integer values support\nup to 6 digits of decimal precision. You can specify a range of values using\n`at_least`/`greater_than` and `at_most`/`less_than`, but the value for\n`at_least`/`greater_than` must be less than the value of `at_most`/`less_than`\nor your request will return an error.\n",
                    "properties": {
                      "array_contains": {
                        "description": "Matches if an array contains the specified string value.",
                        "type": "string"
                      },
                      "at_least": {
                        "description": "Matches values greater than the specified value.",
                        "type": "integer"
                      },
                      "at_most": {
                        "description": "Matches values less than the specified value.",
                        "type": "integer"
                      },
                      "equals": {
                        "anyOf": [
                          {
                            "type": "boolean"
                          },
                          {
                            "type": "string"
                          },
                          {
                            "type": "integer"
                          }
                        ],
                        "description": "Specifies an exact match. String values are case sensitive and must match exactly."
                      },
                      "greater_than": {
                        "description": "Matches values greater than the specified value.",
                        "type": "integer"
                      },
                      "less_than": {
                        "description": "Matches values less than the specified value.",
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  }
                },
                "required": [
                  "key",
                  "value"
                ],
                "title": "Event Value Selector",
                "type": "object",
                "x-schema-tag": "Pipeline Objects"
              }
            },
            "title": "NOT Selector",
            "type": "object"
          }
        ],
        "title": "Event Selector",
        "x-schema-tag": "Pipeline Objects"
      },
      "compoundSelector": {
        "description": "Compound selectors combine boolean operators (AND, OR, or NOT) with atomic or nested compound selectors.",
        "oneOf": [
          {
            "description": "AND selector",
            "properties": {
              "AND": {
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/compoundSelector"
                    },
                    {
                      "$ref": "#/components/schemas/atomicSelector"
                    }
                  ]
                },
                "maxItems": 10,
                "minItems": 1,
                "type": "array"
              }
            },
            "title": "AND selector",
            "type": "object"
          },
          {
            "description": "OR selector",
            "properties": {
              "OR": {
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/compoundSelector"
                    },
                    {
                      "$ref": "#/components/schemas/atomicSelector"
                    }
                  ]
                },
                "maxItems": 10,
                "minItems": 1,
                "type": "array"
              }
            },
            "title": "OR Selector",
            "type": "object"
          },
          {
            "description": "NOT selector",
            "properties": {
              "NOT": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/compoundSelector"
                  },
                  {
                    "$ref": "#/components/schemas/atomicSelector"
                  }
                ]
              }
            },
            "title": "NOT Selector",
            "type": "object"
          }
        ],
        "title": "Compound Selector",
        "x-schema-tag": "Audience Selection"
      },
      "customEventObject": {
        "description": "Defines a custom event.",
        "properties": {
          "body": {
            "description": "Contains information about your custom event. While only the event `name` is required, it is recommended that you provide as much information in this object as possible, so that your event is relevant and informative.",
            "properties": {
              "interaction_id": {
                "description": "The identifier defining where the event occurred. In a traditional website, this would be the path and query string from the URL. In a single page app that uses hash routing, it would be the path, query string, and fragment identifier.",
                "example": "your.store/us/en_us/pd/shoe/pid-11046546/pgid-10978234",
                "type": "string"
              },
              "interaction_type": {
                "description": "Describes the type of interaction that triggered the event, e.g., 'url', 'social', 'email'. This should almost always be 'url' for web events. Airship can separate events with the same `name` by `interaction_type`, providing greater insight into custom events.",
                "example": "url",
                "type": "string"
              },
              "name": {
                "description": "A plain-text name for the event. Airship’s analytics systems will roll up events with the same `name`, providing counts and total value associated with the event.\nThis value cannot contain upper-case characters. If the `name` contains upper-case characters, you will receive a 400 response.\n",
                "example": "purchased",
                "pattern": "[^A-Z\\s]",
                "type": "string"
              },
              "properties": {
                "additionalProperties": true,
                "description": "An object containing custom event properties. You can use handlebars to access custom event properties in templates or messages triggered by the custom event. Items in the `properties` object are limited to a 255 character maximum string length.",
                "example": {
                  "category": "mens shoes"
                },
                "type": "object"
              },
              "session_id": {
                "description": "The user session during which the event occurred. You must supply and maintain session identifiers.",
                "example": "22404b07-3f8f-4e42-a4ff-a996c18fa9f1",
                "type": "string"
              },
              "transaction": {
                "description": "If the event is one in a series representing a single transaction, use the transaction field to tie events together.",
                "example": "886f53d4-3e0f-46d7-930e-c2792dac6e0a",
                "type": "string"
              },
              "value": {
                "default": 0,
                "description": "If the event is associated with a count or amount, the 'value' field carries that information. Airship will treats this field as a representation of money; mathematical operations will use fixed precision representations of this field. The `value` field respects six digits of precision to the right of the decimal point. This field is optional; if empty, its value will default to zero.",
                "example": 120.49,
                "type": "number"
              }
            },
            "required": [
              "name"
            ],
            "type": "object"
          },
          "occurred": {
            "description": "The date and time when the event occurred. Events must have occurred within the past 90 days. You cannot provide a future date-time. If omitted, current date-time is used.",
            "type": "string"
          },
          "user": {
            "description": "Contains the Airship channel identifier for the user who triggered the event.",
            "oneOf": [
              {
                "properties": {
                  "named_user_id": {
                    "description": "The named user associated with the event.",
                    "example": "tommy_tutone",
                    "type": "string"
                  }
                },
                "title": "Named User",
                "type": "object"
              },
              {
                "properties": {
                  "amazon_channel": {
                    "description": "The unique channel identifier for an Amazon device.",
                    "example": "3c070fc0-e976-4563-b088-ec8946176a01",
                    "format": "uuid",
                    "type": "string"
                  }
                },
                "title": "Amazon Channel",
                "type": "object"
              },
              {
                "properties": {
                  "android_channel": {
                    "description": "The unique channel identifier for an Android device.",
                    "example": "8bb5df16-bcca-4a55-ba71-8417525732f5",
                    "format": "uuid",
                    "type": "string"
                  }
                },
                "title": "Android Channel",
                "type": "object"
              },
              {
                "properties": {
                  "ios_channel": {
                    "description": "The unique channel identifier for an iOS device.",
                    "example": "f59970d3-3d42-4584-907e-f5c57f5d46a1",
                    "format": "uuid",
                    "type": "string"
                  }
                },
                "title": "iOS Channel",
                "type": "object"
              },
              {
                "properties": {
                  "web_channel": {
                    "description": "The unique channel identifier for a web device.",
                    "example": "9c36e8c7-5a73-47c0-9716-99fd3d4197d5",
                    "format": "uuid",
                    "type": "string"
                  }
                },
                "title": "Web Channel",
                "type": "object"
              },
              {
                "properties": {
                  "channel": {
                    "description": "Airship canonical identifier for a user. Airship will determine the device.",
                    "example": "000ecc30-1e5d-47ed-b12e-11e2eb960db0",
                    "format": "uuid",
                    "type": "string"
                  }
                },
                "title": "Generic Channel",
                "type": "object"
              }
            ]
          }
        },
        "required": [
          "user",
          "body"
        ],
        "title": "Custom Event object",
        "type": "object"
      },
      "dateAttribute": {
        "description": "An attribute object with a `DATE` schema type. Performs absolute date comparisons for ISO-formatted date values or a relative date comparisons given an integer `value` and `precision`, e.g., \"days\", \"months\". Use a date attribute to target a channel based on the date values.",
        "properties": {
          "attribute": {
            "description": "The key for the date attribute that you previously defined in the Airship UI, e.g., `\"birth_date\"`.",
            "maxLength": 256,
            "minLength": 1,
            "type": "string"
          },
          "operator": {
            "description": "The operator used to evaluate the attribute expression. The `operator` that you use with a date attribute will determine which additional properties will be required in the object. See table for required fields.\n\n\n| **operator** | Required properties |\n|---|---|\n| `is_empty` | `attribute`   |\n| `before`   | `attribute`, `value`, `precision`\\*  |\n| `after`    | `attribute`, `value`, `precision`\\*  |\n| `range`    | `attribute`, `value` |\n| `equals`   | `attribute`, `value`, `precision`\\*\\* |\n| \\*  *`precision` is required, but enum values are different than with an equals operator* |\n| \\*\\* *`precision` is required, but enum values are different than with a before or after operator* |\n\n**Date Attribute Operators**:\n\n* `is_empty`— Evaluates to true if a channel or named user does not have a value for the attribute.\n\n* `before`— Value is one of:\n  - *String*, ISO-8601 inclusive date, optionally including an offset, e.g., `2007-03-01T13:00:00+08:00`. The value will be converted and stored as UTC.\n  - *Integer*, Relative number of units from the current time (i.e., now) into the past. Example: `\"before\": 20` indicates \"at least 20 years ago\" given a `precision` of `years`.\n  - *String* with the value `\"now\"`, representing the current date/time, i.e., \"before now\". When using the `now` value, no `precision` is required.\n\n    **Note**: When using the `before` operator, precision value must be one of `years`, `months`, `days`, `hours`, or `minutes`.\n\n* `after`— Values for `after` behave identically to `before`, as described above.\n\n* `range`— An ISO-8601 time interval. The format consists of an inclusive start and an exclusive end time date separated with a `/`, e.g.: `2019-03-01T13:00:00/2019-05-11T15:30:00`. `range` does not have a precision.\n\n* `equals`— allows for selecting specific or non-specific dates as determined by the `precision` provided in the attribute object.\n\n  **Note**: When using the `equals` operator, `precision` must be one of:\n  - `day`— an integer which represents the day of the month or \"now\".\n  - `month`— an integer which represents the month of the year starting with 1 for Jan or \"now\" which will use the value of the current month.\n  - `month_day`— a string in the format of \"mm-dd\" which represents a month and day. Ex. 05-04 is May 4th. Value can also be \"now\". If today is 2020-03-09, then value will be \"03-09\".\n  - `year_month`— a string in the format of \"yyyy-mm\" which represents a year and month. Ex. 2020-05 is May 2020. Value can also be \"now\". If today is 2020-03-09, then value will be \"2020-03\".\n  - `year_month_day`— a string in the format of \"yyyy-mm-dd\" which represents a specific year, month, and day. Ex. 2020-05-04. Value can also be \"now\". If today is 2020-03-09, then value will be \"2020-03-09\".\n  -  or value can be \"now\" which is the current date/time.\n",
            "enum": [
              "is_empty",
              "before",
              "after",
              "range",
              "equals"
            ],
            "type": "string"
          },
          "precision": {
            "description": "The precision, expressed as a timing interval unit, that Airship uses to evaluate a date attribute expression.",
            "enum": [
              "years",
              "months",
              "days",
              "hours",
              "minutes",
              "day",
              "month",
              "month_day",
              "year_month",
              "year_month_day"
            ],
            "type": "string"
          },
          "value": {
            "oneOf": [
              {
                "description": "An ISO-formatted date.",
                "type": "string"
              },
              {
                "description": "An integer specifying the relative number of units, e.g., \"days\", \"years\", from the current time into the past.",
                "type": "integer"
              }
            ]
          }
        },
        "required": [
          "attribute",
          "operator"
        ],
        "title": "Date Attribute Selector",
        "type": "object",
        "x-schema-tag": "Attributes"
      },
      "device_attributes": {
        "description": "Native attribute properties that Airship gathers automatically assigns to a channel. Varies by channel type. See: [Default Attributes](../../guides/messaging/user-guide/audience/segmentation/attributes/reference/#default-attributes).\n\nFor segmentation, when using `ua_app_version`, `ua_sdk_version`, or `ua_device_os`, only semantic versioning formatting is accepted, and anything after the third decimal place is excluded, e.g., `12.2.3-alpha` is compared as `12.2.3`. You can use operators `equals`, `contains`, `less`, `greater`, `is_empty` with values in the formats `1`, `1.2`, `1.2.3`.\n",
        "properties": {
          "ua_app_version": {
            "description": "The app version that the channel uses.",
            "type": "string"
          },
          "ua_browser_name": {
            "description": "The browser associated with a web channel.",
            "type": "string"
          },
          "ua_browser_type": {
            "description": "The browser type — mobile or desktop — associated with a web channel.",
            "enum": [
              "mobile",
              "desktop"
            ],
            "type": "string"
          },
          "ua_browser_version": {
            "description": "The browser version associated with a web channel.",
            "type": "string"
          },
          "ua_carrier": {
            "description": "The cellular carrier of the device associated with an app channel.",
            "type": "string"
          },
          "ua_country": {
            "description": "The 2-letter country code for an app or web channel.",
            "type": "string"
          },
          "ua_device_model": {
            "description": "The model of the device associated with an app channel.",
            "type": "string"
          },
          "ua_device_os": {
            "description": "The operating system of the device associated with an app channel.",
            "type": "string"
          },
          "ua_language": {
            "description": "The 2-letter language code for an app or web channel.",
            "type": "string"
          },
          "ua_local_tz": {
            "description": "The timezone that the SDK registers for an app or web channel.",
            "type": "string"
          },
          "ua_location_settings": {
            "description": "If \"true\", location settings are enabled for an app channel.",
            "enum": [
              "true",
              "false"
            ],
            "type": "string"
          },
          "ua_ndc": {
            "description": "The National Destination Code aka area code derived from the msisdn on an SMS channel.",
            "type": "string"
          },
          "ua_sdk_version": {
            "description": "The Airship SDK version associated with an app or web channel.",
            "type": "string"
          },
          "ua_subdivision": {
            "description": "The ISO-3166-2 code derived from the msisdn on an SMS channel.",
            "type": "string"
          }
        },
        "title": "Device Attributes",
        "type": "object",
        "x-schema-tag": "Attributes"
      },
      "email": {
        "description": "The payload for a create and send operation to email channels. When registering and sending to email channels, `device_types` must be set to `email`.",
        "properties": {
          "audience": {
            "description": "The email addresses and opt in agreements for the channels you want to register and send to.",
            "properties": {
              "create_and_send": {
                "description": "Each object in the array represents a channel you want push to and/or register. Channel registration fields are prefixed with `ua_` and have the same requirements as the [email registration endpoint](#operation-api-channels-email-post).\n\n\nYou cannot provide optional channel registration fields using this endpoint (like `locale_language` for email channels). All other fields represent variables if `notification` specifies a `template`.",
                "items": {
                  "additionalProperties": {
                    "description": "Like substitutions in the [template merge data object](#schemas-pushtemplatepayload), you can provide additional keys and values representing variables in your notification `template`. Variable keys can be any type of value, including arrays, objects, etc. Your variable keys **must not** be prefixed with `ua_`. See [Email Notification Object with Inline Template](#schemas-emailoverridewithtemplate) for more information about template substitutions.\n",
                    "title": "Substitutions"
                  },
                  "description": "Create-and-send email channel registration and template `substitutions`; each object in the array represents a channel.",
                  "properties": {
                    "ua_address": {
                      "description": "The email address you want to register.",
                      "type": "string"
                    },
                    "ua_commercial_opted_in": {
                      "description": "The date-time when the email address gave permission to receive commercial emails. If this date-time is newer than a `commercial_opted_out` value on the channel, the channel will receive your message but Airship will not update the channel's opt-in status or value.",
                      "type": "string"
                    },
                    "ua_transactional_opted_in": {
                      "description": "The date-time when the email address gave permission to receive transactional emails. Transactional emails do not require this value, but you can set it if you want it to appear in email channel listings.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "ua_address"
                  ],
                  "type": "object"
                },
                "maxItems": 1000,
                "type": "array"
              }
            },
            "required": [
              "create_and_send"
            ],
            "title": "EmailAudience for Create and Send Payloads",
            "type": "object"
          },
          "campaigns": {
            "$ref": "#/components/schemas/campaignsObject"
          },
          "device_types": {
            "description": "The platform you want to register channels for and send notifications to.",
            "items": {
              "enum": [
                "email",
                "mms",
                "sms",
                "open::<open_platform_name>"
              ],
              "maxItems": 1,
              "type": "string"
            },
            "type": "array"
          },
          "notification": {
            "description": "An `alert` notification or a platform override matching the valie in `device types`. A notification with a platform override that does not match your `device_types` will result in a 400 error.",
            "properties": {
              "email": {
                "description": "You can either provide the standard object that you would provide when performing a `/api/push` to an email platform, or you can provide some of the email platform override fields along with an inline template.",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/emailOverrideObject"
                  },
                  {
                    "$ref": "#/components/schemas/emailOverrideWithTemplate"
                  }
                ]
              }
            },
            "type": "object"
          }
        },
        "required": [
          "audience",
          "device_types",
          "notification"
        ],
        "title": "Create and Send to Email Channels",
        "type": "object",
        "x-schema-tag": "Create and Send"
      },
      "emailOverrideObject": {
        "description": "Notification fields specific to email messages. This object is required when email is enabled for an appkey and `email` is specified in the payload’s `device_types` field.",
        "properties": {
          "attachments": {
            "description": "Optional list of objects, each containing an `id` string which represents an email attachment.\n\nSee [Email Attachments](#operation-api-attachments-post)\n",
            "items": {
              "description": "A key/value pair representing an existing email attachment.",
              "properties": {
                "id": {
                  "description": "The email attachment id.",
                  "type": "string"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "minItems": 1,
            "type": "array"
          },
          "bcc": {
            "description": "An array of email addresses that you want to blind copy on this email. Contact your Account Manager to enable BCC addresses. Using addresses that your Airship Account Manager has not enabled for BCC will return a 400.",
            "items": {
              "format": "email address",
              "type": "string"
            },
            "type": "array"
          },
          "bypass_opt_in_level": {
            "description": "You can set this toggle when `message_type` is set to `transactional` to send a business critical email. If true, the message will be sent to your entire audience, ignoring `transactional_opted_out` status.",
            "type": "boolean"
          },
          "click_tracking": {
            "default": true,
            "description": "True by default. Set to `false` to prevent click tracking for GDPR compliance.\n",
            "type": "boolean"
          },
          "html_body": {
            "description": "The rich-text html body of the email, **no larger than 100kb**.\n* When `\"message_type\": \"commercial\"`, the body must contain an unsubscribe\nlink in the format *\\<a data-ua-unsubscribe=\"1\" title=\"unsubscribe\">Unsubscribe\\</a>*.\nYou can send the user to a custom \"goodbye\" page by providing an href\nattribute in the link: *\\<a data-ua-unsubscribe=\"1\" title=\"unsubscribe\"\nhref=\"YOUR_URL\">Unsubscribe\\</a>*. If your unsubscribe link includes an\n`href`, Airship unsubscribes the user before redirecting to your page.\n* See: [Email image recommendations](../../guides/messaging/user-guide/messages/content/media-guidelines/#email).\n",
            "example": [
              "<h1>Greetings</h1><p>Hello!</p><p><a data-ua-unsubscribe=\"1\" title=\"unsubscribe\" href=\"http://unsubscribe.urbanairship.com/email/success.html\">Unsubscribe</a></p>"
            ],
            "type": "string"
          },
          "message_type": {
            "description": "Must be `transactional` or `commercial`.",
            "enum": [
              "transactional",
              "commercial"
            ],
            "example": "commercial",
            "type": "string"
          },
          "open_tracking": {
            "default": true,
            "description": "True by default. Set to `false` to prevent \"open\" tracking for GDPR compliance.\n",
            "type": "boolean"
          },
          "plaintext_body": {
            "description": "The plain text body of the email, **no larger than 100kb**.\n\n\nWhen `\"message_type\": \"commercial\"`, the body must contain a *[[ua_unsubscribe]]*\nlink, which will be replaced by the unsubscribe link in Airship.\nYou can send the user to a custom \"goodbye\" page by providing an href\nin the format *[[ua-unsubscribe href=\"your url here\"]]*. If you include an `href`, Airship unsubscribes the user before redirecting to your page.\n",
            "example": "Greetings. Hello there! [[ua-unsubscribe]]",
            "type": "string"
          },
          "reply_to": {
            "description": "The reply-to address.\n",
            "example": "no-reply@mycompany.com",
            "type": "string"
          },
          "sender_address": {
            "description": "The email address of the sender. The domain of the email must be enabled in the email provider at the delivery tier (ie: Sparkpost).",
            "example": "no-reply@mycompany.com",
            "type": "string"
          },
          "sender_name": {
            "description": "The common name for the sender, visible to email recipients.",
            "example": "My Company",
            "type": "string"
          },
          "subject": {
            "description": "The subject line of the email.",
            "example": "Test Email",
            "type": "string"
          }
        },
        "required": [
          "message_type",
          "subject",
          "plaintext_body",
          "sender_name",
          "sender_address",
          "reply_to"
        ],
        "title": "Email Override",
        "type": "object",
        "x-schema-tag": "Platform Overrides"
      },
      "emailOverrideWithTemplate": {
        "description": "Notification fields specific to email messages with an inline template for use in a `/api/create-and-send` payload. Using a template enables you to provide and populate variables in your notification. You can also add conditional statements based on those variables, determining message text that to send to each member of your audience. Conditionals begin with `{{#operator}}` and end with `{{/operator}}`. For more information, see [Dynamic Content](/guides/messaging/user-guide/personalization/dynamic-content).",
        "properties": {
          "bcc": {
            "description": "An array of email addresses that you want to blind copy on this email. Contact your Account Manager to enable BCC addresses. Using addresses that your Airship Account Manager has not enabled for BCC will return a 400.",
            "items": {
              "format": "email address",
              "type": "string"
            },
            "type": "array"
          },
          "click_tracking": {
            "default": true,
            "description": "True by default. Set to `false` to prevent click tracking for GDPR compliance.\n",
            "type": "boolean"
          },
          "message_type": {
            "description": "The type of email you are sending, `transactional` or `commercial`.",
            "enum": [
              "transactional",
              "commercial"
            ],
            "example": "commercial",
            "type": "string"
          },
          "open_tracking": {
            "default": true,
            "description": "True by default. Set to `false` to prevent \"open\" tracking for GDPR compliance.\n",
            "type": "boolean"
          },
          "reply_to": {
            "description": "The reply-to address.",
            "example": "no-reply@mycompany.com",
            "type": "string"
          },
          "sender_address": {
            "description": "The email address of the sender. The domain of the email must be enabled in the email provider at the delivery tier.",
            "example": "no-reply@mycompany.com",
            "type": "string"
          },
          "sender_name": {
            "description": "The common name for the sender, visible to email recipients.",
            "example": "My Company",
            "type": "string"
          },
          "template": {
            "description": "Specify a `template_id` created in the Airship UI or use an inline template.",
            "oneOf": [
              {
                "properties": {
                  "template_id": {
                    "description": "The `ID` of a template that you created in the Airship UI. You can find template IDs in *Messages » Content » Templates* in the dashboard.",
                    "format": "uuid",
                    "type": "string"
                  }
                },
                "required": [
                  "template_id"
                ],
                "type": "object"
              },
              {
                "properties": {
                  "fields": {
                    "description": "The template you want to construct for the message. Provide variables in the template in double curly brackets — `{{variable_name}}`. The variable name must be a case-sensitive match of a key in your `create-and-send` objects to be replaced as a part of the template.",
                    "properties": {
                      "plaintext_body": {
                        "description": "The plain text body of the email you want to send.\n\n\nWhen `\"message_type\": \"commercial\"`, the body must contain a `[[ua_unsubscribe]]` link, which will be replaced by the unsubscribe link in Airship. You can send the user to a custom \"goodbye\" page by providing an href in the format `[[ua-unsubscribe href=\"your url here\"]]`",
                        "type": "string"
                      },
                      "subject": {
                        "description": "The subject line of the email you want to send.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "subject",
                      "plaintext_body"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "fields"
                ],
                "type": "object"
              }
            ]
          }
        },
        "required": [
          "message_type",
          "sender_name",
          "sender_address",
          "reply_to",
          "template"
        ],
        "title": "Email Notification with Template",
        "type": "object",
        "x-schema-tag": "Platform Overrides with Templates"
      },
      "error": {
        "description": "Errors returned with 4xx responses. Errors include as much information as possible to help you understand the reason for the failure.",
        "properties": {
          "details": {
            "description": "Provides information relating to the specific `error_code` when possible. For `400` errors, this object may include the `path` and `location` of validation failures.",
            "properties": {
              "error": {
                "description": "Specific information about the semantic error, helping you better understand why the request failed.",
                "type": "string"
              },
              "location": {
                "description": "The specific line and column where the validation error occured, if known.",
                "properties": {
                  "column": {
                    "description": "The column containing the semantic error.",
                    "type": "integer"
                  },
                  "line": {
                    "description": "The line containing the semantic error.",
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "path": {
                "description": "The path to the key containing the validation error.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "error": {
            "description": "a plain-text explanation of the error",
            "type": "string"
          },
          "error_code": {
            "description": "the Airship error code. This is normally the http error code appended with a 2-digit identifier, helping provide more specific details about the error.",
            "example": 40401,
            "type": "integer"
          },
          "ok": {
            "description": "2xx responses return `true`; 4xx responses return `false`",
            "example": false,
            "type": "boolean"
          }
        },
        "required": [
          "ok",
          "error"
        ],
        "title": "Error Response",
        "type": "object",
        "x-note": "it's a good idea to log whenever you receive a non-2XX response. For best results, log the entire request and response, including headers. This information will help you or Support fix the issue.",
        "x-schema-tag": "Response Format"
      },
      "eventIdentifier": {
        "description": "Event identifiers describe events that Automation can detect and act on. They may be described by a simple string, e.g.,  `open`, or by an object for parameterized events, e.g.,  `{ \"tag_added\" : \"<t>\" }`.",
        "oneOf": [
          {
            "description": "Triggers the pipeline whenever an event of the following types occurs. `first_open` and `first_opt_in` are only available in immediate triggers.\n\n\n* `open` events occur whenever your audience opens your app.\n* `first_open` events occur when your audience opens your app for the first time.\n* `first_opt_in` events represent the first time your audience opts into `email` (commercial only), `sms`, or `open` notifications.\n* `double_opt_in` events occur when a new email channel registration occurs with the `\"opt_in_mode\": \"double\"` parameter.\n* When used without a value, `region_entered` and `region_exited` types cause the trigger to fire whenever an audience member enters or exits any region.\n",
            "enum": [
              "open",
              "first_open",
              "first_opt_in",
              "double_opt_in",
              "region_entered",
              "region_exited"
            ],
            "title": "Simple Event Identifier",
            "type": "string"
          },
          {
            "description": "A compound event identifier is a JSON dictionary with a single key indicating the event type, and a value specifying the specific parameter to match on.",
            "properties": {
              "custom_event": {
                "$ref": "#/components/schemas/complexEventSelector",
                "description": "A custom event selector is an event selector that describes the\nspecific criteria a custom event must fulfill in order to trigger an automation.\nSupported Custom Event fields in the default scope are `\"name\"` (string) and [\"value\"] .\nCustom events also have a map of properties that may also be selected under the `\"properties\"` scope. Values for the `\"properties\"` key may be string, boolean, number, or an array of strings."
              },
              "region_entered": {
                "description": "A region selector is an event selector that describes the specific criteria\na region must fulfill in order to quilify as a match (for triggering pipelines).\n\nSupported default scope region keys are currently: \"name\" (string) and \"region_id\" (string).\n\nUnder the \"source_info\" scope, we support the following key: \"region_id\" (string).\n\nWe also have support for the arbitrary scope \"attributes\", which has no key restrictions\nbecause it is user-supplied in its entirety.",
                "title": "Region Selector",
                "type": "object"
              },
              "region_exited": {
                "description": "A region selector is an event selector that describes the specific criteria\na region must fulfill in order to quilify as a match (for triggering pipelines).\n\nSupported default scope region keys are currently: \"name\" (string) and \"region_id\" (string).\n\nUnder the \"source_info\" scope, we support the following key: \"region_id\" (string).\n\nWe also have support for the arbitrary scope \"attributes\", which has no key restrictions\nbecause it is user-supplied in its entirety.",
                "title": "Region Selector",
                "type": "object"
              },
              "tag_added": {
                "description": "Defines a tag selector.",
                "oneOf": [
                  {
                    "properties": {
                      "group": {
                        "description": "The tag group. If you do not specify a group, Airship uses the default `device` tag group; this group is represented by a channel's `tags` array rather than the `tag_groups` object.",
                        "type": "string"
                      },
                      "tag": {
                        "description": "The tag.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "tag"
                    ],
                    "type": "object"
                  },
                  {
                    "description": "The device tag.",
                    "type": "string"
                  }
                ],
                "title": "Tag Selector"
              },
              "tag_removed": {
                "description": "Defines a tag selector.",
                "oneOf": [
                  {
                    "properties": {
                      "group": {
                        "description": "The tag group. If you do not specify a group, Airship uses the default `device` tag group; this group is represented by a channel's `tags` array rather than the `tag_groups` object.",
                        "type": "string"
                      },
                      "tag": {
                        "description": "The tag.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "tag"
                    ],
                    "type": "object"
                  },
                  {
                    "description": "The device tag.",
                    "type": "string"
                  }
                ],
                "title": "Tag Selector"
              }
            },
            "title": "Compound Event Identifier",
            "type": "object"
          }
        ],
        "title": "Event Identifier",
        "x-schema-tag": "Pipeline Objects"
      },
      "experimentObject": {
        "description": "An experiment object describes an A/B test, including the audience and variant portions.",
        "properties": {
          "audience": {
            "$ref": "#/components/schemas/audienceSelector",
            "description": "The audience for the experiment."
          },
          "campaigns": {
            "$ref": "#/components/schemas/campaignsObject",
            "description": "Campaigns object that will be applied to resulting pushes.",
            "type": "object"
          },
          "control": {
            "description": "The proportional subset of the audience that will not receive a push. The remaining audience will be split betweeen the variants. It may help to think of this value as a percentage. See: [Splitting the Audience](https://docs.urbanairship.com/api/ua/#splitting-the-audience)",
            "format": "float",
            "type": "number"
          },
          "created_at": {
            "description": "The date-time when the experiment was created. This value is created and assigned automatically by Airship, and appears in responses only.",
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "description": "A description of the experiment.",
            "type": "string"
          },
          "device_types": {
            "description": "An array containing one or more strings identifying targeted platforms. Accepted platforms are\n    `ios`, `android`, `amazon`, `wns`, `web`, `sms`, `email`, and `open::<open_platform_name>` (using the `open_platform_name` value of your open channel).",
            "items": {
              "enum": [
                "android",
                "amazon",
                "ios",
                "web",
                "wns",
                "sms",
                "email",
                "open::open_platform_name"
              ],
              "type": "string"
            },
            "minItems": 1,
            "title": "Device Types Selector",
            "type": "array"
          },
          "id": {
            "description": "The unique ID assigned to this experiment. This value is created and assigned automatically by Airship, and appears in responses only.",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "A name for the experiment.",
            "type": "string"
          },
          "push_id": {
            "description": "The push ID associated with this experiment. This value is created and assigned automatically by Airship, and appears in responses only.",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "variants": {
            "description": "The variants for the experiment. An experiment must have at least 1 variant and no more than 26.",
            "items": {
              "description": "Each object represents a push that will be sent to a subset of the experiment’s audience. Message Center is not currently supported for experiments.",
              "properties": {
                "description": {
                  "description": "A description of the variant.",
                  "type": "string"
                },
                "id": {
                  "description": "Reflects the position of the variant in the array (beginning at 0). This ID is applied automatically and only appears in responses.",
                  "readOnly": true,
                  "type": "integer"
                },
                "name": {
                  "description": "A name for the variant.",
                  "type": "string"
                },
                "push": {
                  "description": "A push object without `audience` and `device_types` fields. These two fields are not allowed because they are already defined in the experiment object.",
                  "properties": {
                    "in_app": {
                      "$ref": "#/components/schemas/inAppObject"
                    },
                    "notification": {
                      "$ref": "#/components/schemas/notificationObject"
                    },
                    "options": {
                      "$ref": "#/components/schemas/pushOptions"
                    }
                  },
                  "type": "object"
                },
                "schedule": {
                  "$ref": "#/components/schemas/scheduleSpec",
                  "description": "The time when the push notification should be sent.",
                  "type": "object"
                },
                "weight": {
                  "description": "The proportion of the audience that will receive this variant. Defaults to 1.",
                  "type": "integer"
                }
              },
              "required": [
                "push"
              ],
              "type": "object"
            },
            "maximum": 26,
            "minimum": 1,
            "type": "array"
          }
        },
        "required": [
          "audience",
          "device_types",
          "variants"
        ],
        "title": "Experiment Object",
        "type": "object"
      },
      "feedReferences": {
        "description": "An object used to indicate that an External Data Feed should be invoked, the name of the feed to invoke and the way in which to invoke it. You can only include a field if you include a `templates` object in the payload or set the `personalization` option to `true`.",
        "properties": {
          "defaults": {
            "additionalProperties": {
              "additionalProperties": {
                "description": "A list of default values, where the key is the name of the property you want to set a default for.",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              "description": "The feed you want to specify default values for.",
              "type": "object"
            },
            "description": "Default parameter values for your feed. These values override any defaults you set for your feed in the Airship Dashboard.",
            "minProperties": 1,
            "type": "object"
          },
          "feeds": {
            "description": "An array of feeds that you want to use to personalize your message.",
            "items": {
              "properties": {
                "name": {
                  "description": "The name of the feed you set up in the Dashboard.",
                  "type": "string"
                },
                "on_error": {
                  "default": "cancel",
                  "description": "Determines what to do with a message if there is an error with your feed (if it is unreachable or does not return an expected response).",
                  "enum": [
                    "continue",
                    "cancel"
                  ],
                  "type": "string"
                },
                "params": {
                  "additionalProperties": {
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "number"
                      }
                    ]
                  },
                  "description": "An optional dictionary of overrides for default parameters in handlebars referencing the feed.",
                  "type": "object"
                }
              },
              "required": [
                "name"
              ],
              "type": "object"
            },
            "type": "array"
          }
        },
        "title": "External Data Feed References",
        "type": "object"
      },
      "geofenceObject": {
        "description": "A Geofence object describes a geographical boundary corresponding to a physical location of relevance to the application or application owner. The geofence `type` can be a `polygon`, a `circle`, or provided by a `confidenzial` source.",
        "oneOf": [
          {
            "description": "A Geofence subtype describing a polygon.",
            "properties": {
              "points": {
                "description": "An ordered array of Points that correspond to the vertices of the polygon on the globe.",
                "items": {
                  "$ref": "#/components/schemas/pointObject"
                },
                "type": "array"
              },
              "type": {
                "description": "The key \"type\" indicating a polygon geofence subtype.",
                "enum": [
                  "POLYGON"
                ],
                "type": "string"
              }
            },
            "required": [
              "type",
              "points"
            ],
            "title": "Polygon Geofence Object",
            "type": "object"
          },
          {
            "description": "A Geofence subtype describing a circle.",
            "properties": {
              "center": {
                "$ref": "#/components/schemas/pointObject",
                "description": "A single Point indicating the center fo the circle."
              },
              "radius": {
                "description": "An integer indicating the size (in meters) of the radius of the circle whose edge is the geofence boundary.",
                "type": "integer"
              },
              "type": {
                "description": "The key \"type\" indicating a circle geofence subtype.",
                "enum": [
                  "CIRCLE"
                ],
                "type": "string"
              }
            },
            "required": [
              "type",
              "center",
              "radius"
            ],
            "title": "Circle Geofence Object",
            "type": "object"
          },
          {
            "description": "A confidential Geofence subtype.",
            "properties": {
              "id": {
                "description": "The source-specific identifier for this geofence.",
                "type": "string"
              },
              "source": {
                "description": "The name of the company providing the geofence.",
                "type": "string"
              },
              "type": {
                "description": "The key \"type\" indicating a confidential geofence subtype.",
                "enum": [
                  "CONFIDENTIAL"
                ],
                "type": "string"
              },
              "version": {
                "description": "The version number for the source of this geofence.",
                "type": "string"
              }
            },
            "required": [
              "type",
              "source",
              "version",
              "id"
            ],
            "title": "Confidential Geofence Object",
            "type": "object"
          }
        ],
        "title": "Geofence Object",
        "x-schema-tag": "Region Data Formats"
      },
      "inAppObject": {
        "description": "A JSON object describing an in-app message payload.",
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actionsObject"
          },
          "alert": {
            "description": "The text displayed on the in-app message.",
            "type": "string"
          },
          "display": {
            "description": "The allowed fields for this object depend on the value of of the `display_type` field. Currently, the only valid `display_type` is `banner`, so the following is an associated display object for the banner display type.",
            "properties": {
              "duration": {
                "default": 15,
                "description": "Specifies how long the notification should stay on the screen in seconds before automatically disappearing; set to `15` by default.",
                "type": "integer"
              },
              "position": {
                "default": "bottom",
                "description": "One of either 'top' or 'bottom', specifies the screen position of the message. Defaults to `bottom`.",
                "enum": [
                  "top",
                  "bottom"
                ],
                "type": "string"
              },
              "primary_color": {
                "description": "Specifies the primary color of the in-app message (format #rrggbb).",
                "example": "#FF0000",
                "type": "string"
              },
              "secondary_color": {
                "description": "Specifies the secondary color of the in-app message (format #rrggbb).",
                "example": "#00FF00",
                "type": "string"
              }
            },
            "type": "object"
          },
          "display_type": {
            "description": "Specifies the display type. Currently, the only valid option is 'banner'.",
            "enum": [
              "banner"
            ],
            "type": "string"
          },
          "expiry": {
            "description": "Delivery expiration, as either absolute ISO UTC timestamp, or number of seconds from now.",
            "oneOf": [
              {
                "description": "Number of seconds from now. When the delivery platform supports it, a value of zero (0) indicates that the message should be delivered immediately and never stored for later attempts.",
                "example": 3600,
                "type": "integer"
              },
              {
                "description": "An absolute ISO UTC timestamp.",
                "example": "2018-03-01T12:00:00",
                "type": "string"
              }
            ],
            "title": "Expiry",
            "type": "object"
          },
          "extra": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "A JSON dictionary of string-to-string key-value pairs. If you wish to pass structured data in an extra key, it must be JSON-encoded as a string.",
            "example": {
              "en": "English",
              "fr": "French"
            },
            "title": "Extra",
            "type": "object"
          },
          "interactive": {
            "$ref": "#/components/schemas/interactiveObject"
          }
        },
        "required": [
          "alert",
          "display_type"
        ],
        "title": "In-App Message",
        "type": "object"
      },
      "interactiveObject": {
        "description": "An interactive notification.\n\nAttempting to specify an interactive payload for an unsupported device type will result in an HTTP 400 response.",
        "properties": {
          "button_actions": {
            "description": "An object containing keys that must be the button IDs for the specified interactive notification type. If the notification type begins with 'ua_', the keys must match exactly the button IDs for that type or a strict subset. The names of the button IDs cannot be validated for custom notifications.",
            "oneOf": [
              {
                "description": "Yes/No button action",
                "properties": {
                  "no": {
                    "$ref": "#/components/schemas/actionsObject"
                  },
                  "yes": {
                    "$ref": "#/components/schemas/actionsObject"
                  }
                },
                "title": "Yes/No",
                "type": "object"
              },
              {
                "description": "Accept/decline button action",
                "properties": {
                  "accept": {
                    "$ref": "#/components/schemas/actionsObject"
                  },
                  "decline": {
                    "$ref": "#/components/schemas/actionsObject"
                  }
                },
                "title": "Accept/Decline",
                "type": "object"
              },
              {
                "description": "Shop now button action",
                "properties": {
                  "shop_now": {
                    "$ref": "#/components/schemas/actionsObject"
                  }
                },
                "title": "Shop Now",
                "type": "object"
              },
              {
                "description": "Buy now button action",
                "properties": {
                  "buy_now": {
                    "$ref": "#/components/schemas/actionsObject"
                  }
                },
                "title": "Buy Now",
                "type": "object"
              },
              {
                "description": "Follow button action",
                "properties": {
                  "follow": {
                    "$ref": "#/components/schemas/actionsObject"
                  }
                },
                "title": "Follow",
                "type": "object"
              },
              {
                "description": "Opt in button action",
                "properties": {
                  "opt_in": {
                    "$ref": "#/components/schemas/actionsObject"
                  }
                },
                "title": "Opt In",
                "type": "object"
              },
              {
                "description": "Unfollow button action",
                "properties": {
                  "unfollow": {
                    "$ref": "#/components/schemas/actionsObject"
                  }
                },
                "title": "Unfollow",
                "type": "object"
              },
              {
                "description": "Opt out button action",
                "properties": {
                  "opt_out": {
                    "$ref": "#/components/schemas/actionsObject"
                  }
                },
                "title": "Opt Out",
                "type": "object"
              },
              {
                "description": "Opt in/remind button action",
                "properties": {
                  "opt_in": {
                    "$ref": "#/components/schemas/actionsObject"
                  },
                  "remind": {
                    "$ref": "#/components/schemas/actionsObject"
                  }
                },
                "title": "Opt In/Remind",
                "type": "object"
              },
              {
                "description": "Remind button action",
                "properties": {
                  "remind": {
                    "$ref": "#/components/schemas/actionsObject"
                  }
                },
                "title": "Remind",
                "type": "object"
              },
              {
                "description": "More info button action",
                "properties": {
                  "more_info": {
                    "$ref": "#/components/schemas/actionsObject"
                  }
                },
                "title": "More Info",
                "type": "object"
              },
              {
                "description": "Download button action",
                "properties": {
                  "download": {
                    "$ref": "#/components/schemas/actionsObject"
                  }
                },
                "title": "Download",
                "type": "object"
              },
              {
                "description": "Share button action",
                "properties": {
                  "share": {
                    "$ref": "#/components/schemas/actionsObject"
                  }
                },
                "title": "Share",
                "type": "object"
              },
              {
                "description": "Download/share button action",
                "properties": {
                  "download": {
                    "$ref": "#/components/schemas/actionsObject"
                  },
                  "share": {
                    "$ref": "#/components/schemas/actionsObject"
                  }
                },
                "title": "Download/Share",
                "type": "object"
              },
              {
                "description": "Remind/share button action",
                "properties": {
                  "remind": {
                    "$ref": "#/components/schemas/actionsObject"
                  },
                  "share": {
                    "$ref": "#/components/schemas/actionsObject"
                  }
                },
                "title": "Remind/Share",
                "type": "object"
              },
              {
                "description": "Opt in/share button action",
                "properties": {
                  "opt_in": {
                    "$ref": "#/components/schemas/actionsObject"
                  },
                  "share": {
                    "$ref": "#/components/schemas/actionsObject"
                  }
                },
                "title": "Opt In/Share",
                "type": "object"
              },
              {
                "description": "Opt out/share button action",
                "properties": {
                  "opt_out": {
                    "$ref": "#/components/schemas/actionsObject"
                  },
                  "share": {
                    "$ref": "#/components/schemas/actionsObject"
                  }
                },
                "title": "Opt Out/Share",
                "type": "object"
              },
              {
                "description": "Follow/share button action",
                "properties": {
                  "follow": {
                    "$ref": "#/components/schemas/actionsObject"
                  },
                  "share": {
                    "$ref": "#/components/schemas/actionsObject"
                  }
                },
                "title": "Follow/Share",
                "type": "object"
              },
              {
                "description": "Unfollow/share button action",
                "properties": {
                  "share": {
                    "$ref": "#/components/schemas/actionsObject"
                  },
                  "unfollow": {
                    "$ref": "#/components/schemas/actionsObject"
                  }
                },
                "title": "Unfollow/Share",
                "type": "object"
              },
              {
                "description": "Shop now/share button action",
                "properties": {
                  "share": {
                    "$ref": "#/components/schemas/actionsObject"
                  },
                  "shop_now": {
                    "$ref": "#/components/schemas/actionsObject"
                  }
                },
                "title": "Shop Now/Share",
                "type": "object"
              },
              {
                "description": "Buy now/share button action",
                "properties": {
                  "buy_now": {
                    "$ref": "#/components/schemas/actionsObject"
                  },
                  "share": {
                    "$ref": "#/components/schemas/actionsObject"
                  }
                },
                "title": "Buy Now/Share",
                "type": "object"
              },
              {
                "description": "More like/less like button action",
                "properties": {
                  "less_like": {
                    "$ref": "#/components/schemas/actionsObject"
                  },
                  "more_like": {
                    "$ref": "#/components/schemas/actionsObject"
                  }
                },
                "title": "More Like/Less Like",
                "type": "object"
              },
              {
                "description": "Like/dislike button action",
                "properties": {
                  "dislike": {
                    "$ref": "#/components/schemas/actionsObject"
                  },
                  "like": {
                    "$ref": "#/components/schemas/actionsObject"
                  }
                },
                "title": "Like/Dislike",
                "type": "object"
              },
              {
                "description": "Like button action",
                "properties": {
                  "like": {
                    "$ref": "#/components/schemas/actionsObject"
                  }
                },
                "title": "Like",
                "type": "object"
              },
              {
                "description": "Like/share button action",
                "properties": {
                  "like": {
                    "$ref": "#/components/schemas/actionsObject"
                  },
                  "share": {
                    "$ref": "#/components/schemas/actionsObject"
                  }
                },
                "title": "Like/Share",
                "type": "object"
              },
              {
                "description": "Add to calendar/remind button action",
                "properties": {
                  "add_calendar": {
                    "$ref": "#/components/schemas/actionsObject"
                  },
                  "remind": {
                    "$ref": "#/components/schemas/actionsObject"
                  }
                },
                "title": "Add to Calendar/Remind",
                "type": "object"
              },
              {
                "description": "Add button action",
                "properties": {
                  "add": {
                    "$ref": "#/components/schemas/actionsObject"
                  }
                },
                "title": "Add",
                "type": "object"
              },
              {
                "description": "Save button action",
                "properties": {
                  "save": {
                    "$ref": "#/components/schemas/actionsObject"
                  }
                },
                "title": "Save",
                "type": "object"
              },
              {
                "description": "Follow/Save button action",
                "properties": {
                  "follow": {
                    "$ref": "#/components/schemas/actionsObject"
                  },
                  "save": {
                    "$ref": "#/components/schemas/actionsObject"
                  }
                },
                "title": "Follow/Save",
                "type": "object"
              },
              {
                "description": "Rate button action",
                "properties": {
                  "rate": {
                    "$ref": "#/components/schemas/actionsObject"
                  }
                },
                "title": "Rate",
                "type": "object"
              },
              {
                "description": "Rate/remind button action",
                "properties": {
                  "rate": {
                    "$ref": "#/components/schemas/actionsObject"
                  },
                  "remind": {
                    "$ref": "#/components/schemas/actionsObject"
                  }
                },
                "title": "Rate/Remind",
                "type": "object"
              },
              {
                "description": "Search button action",
                "properties": {
                  "search": {
                    "$ref": "#/components/schemas/actionsObject"
                  }
                },
                "title": "Search",
                "type": "object"
              },
              {
                "description": "Book button action",
                "properties": {
                  "book": {
                    "$ref": "#/components/schemas/actionsObject"
                  }
                },
                "title": "Book",
                "type": "object"
              },
              {
                "description": "Happy/Sad button action",
                "properties": {
                  "happy": {
                    "$ref": "#/components/schemas/actionsObject"
                  },
                  "sad": {
                    "$ref": "#/components/schemas/actionsObject"
                  }
                },
                "title": "Happy/Sad",
                "type": "object"
              },
              {
                "description": "Up/down button action",
                "properties": {
                  "down": {
                    "$ref": "#/components/schemas/actionsObject"
                  },
                  "up": {
                    "$ref": "#/components/schemas/actionsObject"
                  }
                },
                "title": "Up/Down",
                "type": "object"
              },
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/actionsObject"
                },
                "description": "Custom button action",
                "title": "Custom Action",
                "type": "object"
              }
            ]
          },
          "type": {
            "description": "A string that specifies the name of either a predefined or a custom-defined interactive notification type. Predefined types are prefixed with 'ua_'.",
            "enum": [
              "ua_yes_no_foreground",
              "ua_yes_no_background",
              "ua_accept_decline_foreground",
              "ua_accept_decline_background",
              "ua_shop_now",
              "ua_buy_now",
              "ua_follow",
              "ua_opt_in",
              "ua_unfollow",
              "ua_opt_out",
              "ua_opt_in_remind",
              "ua_remind_me_later",
              "ua_more_info",
              "ua_download",
              "ua_share",
              "ua_download_share",
              "ua_remind_share",
              "ua_opt_in_share",
              "ua_opt_out_share",
              "ua_follow_share",
              "ua_unfollow_share",
              "ua_shop_now_share",
              "ua_buy_now_share",
              "ua_more_like_less_like",
              "ua_like_dislike",
              "ua_like",
              "ua_like_share",
              "ua_add_calendar_remind",
              "ua_add",
              "ua_save",
              "ua_follow_save",
              "ua_rate",
              "ua_rate_remind",
              "ua_search",
              "ua_book",
              "ua_icons_happy_sad",
              "ua_icons_up_down",
              "<custom_defined_interactive_notification_type>"
            ],
            "example": "ua_yes_no_foreground",
            "title": "Interactive Notification Type ID",
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "Interactive Notification Object",
        "type": "object"
      },
      "iosOverrideObject": {
        "description": "The platform override section for iOS.",
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actionsObject"
          },
          "alert": {
            "description": "Override the alert value provided at the top level, if any. May be a JSON string or an object which conforms to Apple’s push service spec.",
            "oneOf": [
              {
                "description": "Alert override text for iOS devices.",
                "type": "string"
              },
              {
                "description": "JSON object that conforms to Apple's [Payload Key Reference](https://developer.apple.com/library/archive/documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/PayloadKeyReference.html).\n\nWhen using `thread_id` to group notifications, you might want to use\nthe `summary-arg` and `summary-arg-count` keys to help users identify the\ngroup.",
                "properties": {
                  "action-loc-key": {
                    "description": "If a string is specified, the system displays an alert that includes the Close and View buttons. The string is used as a key to get a localized string in the current localization to use for the right button’s title instead of \"View\".",
                    "nullable": true,
                    "type": "string"
                  },
                  "body": {
                    "description": "The content of the alert message.",
                    "type": "string"
                  },
                  "launch-image": {
                    "description": "The name of the launch image file you want to display with the\nalert. If the user chooses to launch your app, the contents of\nthe specified image or storyboard file are displayed instead of your app's normal launch image.",
                    "type": "string"
                  },
                  "loc-args": {
                    "description": "An array of strings containing replacement values for variables in your message text. Each %@ character in the string specified by `loc-key` is replaced by a value from this array. The first item in the array replaces the first instance of the %@ character in the string, the second item replaces the second instance, and so on.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "loc-key": {
                    "description": "The key for a localized message string. Use this key, instead of the body key, to retrieve the message text from your app's `Localizable.strings` file. The value must contain the name of a key in your strings file.",
                    "type": "string"
                  },
                  "subtitle": {
                    "description": "Additional information explaining the purpose of the notification.",
                    "nullable": true,
                    "type": "string"
                  },
                  "subtitle-loc-args": {
                    "description": "An array of strings containing replacement values for variables in your subtitle string. Each %@ character in the string specified by `subtitle-loc-key` is replaced by a value from this array. The first item in the array replaces the first instance of the %@ character in the string, the second item replaces the second instance, and so on.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "subtitle-loc-key": {
                    "description": "The key for a localized subtitle string. Use this key, instead of the subtitle key, to retrieve the subtitle from your app's `Localizable.strings` file. The value must contain the name of a key in your strings file.",
                    "type": "string"
                  },
                  "summary-arg": {
                    "description": "A string added to the summary of grouped notifications represented\nby the `thread_id`",
                    "type": "string"
                  },
                  "summary-arg-count": {
                    "description": "The number of summary-arg strings that a group of notifications\nrepresented by a `thread_id` will display.",
                    "type": "integer"
                  },
                  "title": {
                    "description": "The title of the notification. Apple Watch displays this string in the short look notification interface. Specify a string that is quickly understood by the user.",
                    "type": "string"
                  },
                  "title-loc-args": {
                    "description": "An array of strings containing replacement values for variables in your title string. Each %@ character in the string specified by the `title-loc-key` is replaced by a value from this array. The first item in the array replaces the first instance of the %@ character in the string, the second item replaces the second instance, and so on.",
                    "items": {
                      "type": "string"
                    },
                    "nullable": true,
                    "type": "array"
                  },
                  "title-loc-key": {
                    "description": "The key for a localized title string. Specify this key instead of the title key to retrieve the title from your app’s `Localizable.strings` files. The value must contain the name of a key in your strings file.",
                    "nullable": true,
                    "type": "string"
                  }
                },
                "type": "object"
              }
            ]
          },
          "badge": {
            "description": "May be an integer, the value `auto`, or an increment value. Increments are expressed by integers formatted as strings, and prefixed with either `+` (U+002B) or `-` (U+002D). The numeric portion may be an integer value.",
            "example": "+1",
            "format": "int32",
            "type": "integer"
          },
          "category": {
            "description": "Sets the APNS category for the push. This maps directly to the `category` field in the `aps` section of the APNS payload. Any interactive notification specified for the IOS platform will take precedence and this value will be ignored (the interactive notification type will be used for the category).",
            "type": "string"
          },
          "collapse_id": {
            "description": "When there is a newer message that renders an older, related message irrelevant to the client app, the new message replaces the older message with the same collapse_id. Similar to the GCM collapse_key. The value of this key must not exceed 64 bytes. iOS 10 or above.",
            "type": "string"
          },
          "content_available": {
            "description": "If true, the payload is delivered to your app in the background.\n\nThis flag is automatically set to true if there is an In-App Message in the payload. Attempting to override this value to false when there is an in-app message will result in a 400 Bad Request response from the API.",
            "type": "boolean"
          },
          "expiry": {
            "description": "Delivery expiration, as either absolute ISO UTC timestamp, or number of seconds from now.",
            "oneOf": [
              {
                "description": "Number of seconds from now. When the delivery platform supports it, a value of zero (0) indicates that the message should be delivered immediately and never stored for later attempts.",
                "example": 3600,
                "type": "integer"
              },
              {
                "description": "An absolute ISO UTC timestamp.",
                "example": "2018-03-01T12:00:00",
                "type": "string"
              }
            ],
            "title": "Expiry",
            "type": "object"
          },
          "extra": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "A JSON dictionary of string-to-string key-value pairs. If you wish to pass structured data in an extra key, it must be JSON-encoded as a string.",
            "example": {
              "en": "English",
              "fr": "French"
            },
            "title": "Extra",
            "type": "object"
          },
          "interactive": {
            "$ref": "#/components/schemas/interactiveObject"
          },
          "interruption_level": {
            "default": "active",
            "description": "Indicates the importance and delivery timing of a notification.\n\n**Note**: Using a `critical` interruption level requires a special entitlement from Apple. If you have this entitlement, please contact your Airship Account Manager or our Support team to enable usage for your project.",
            "enum": [
              "passive",
              "active",
              "time-sensitive",
              "critical"
            ],
            "type": "string"
          },
          "media_attachment": {
            "description": "The `media_attachment` key on the iOS override is a JSON object that describes a media attachment to be handled by the UA Media Attachment extension in iOS 10.",
            "properties": {
              "content": {
                "description": "A JSON object that describes portions of the notification that should be modified if the media attachment succeeds, with any of the following fields",
                "properties": {
                  "body": {
                    "type": "string"
                  },
                  "subtitle": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "options": {
                "description": "A JSON object that describes how to display the resource at the URL specified above, with any of the following fields.",
                "properties": {
                  "crop": {
                    "description": "A JSON object that describes the crop parameters to be used in the thumbnail. Each field is a decimal, normalized from 0 to 1.",
                    "properties": {
                      "height": {
                        "description": "The height of the final crop.",
                        "format": "double",
                        "type": "number"
                      },
                      "width": {
                        "description": "The width of the final crop.",
                        "format": "double",
                        "type": "number"
                      },
                      "x": {
                        "description": "The X offset where the crop begins.",
                        "format": "double",
                        "type": "number"
                      },
                      "y": {
                        "description": "The Y offset where the crop begins.",
                        "format": "double",
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "hidden": {
                    "description": "A boolean, when true, the thumbnail will be hidden.",
                    "type": "boolean"
                  },
                  "time": {
                    "description": "A decimal, the frame of the animated resource that should be used in the thumbnail.",
                    "format": "int32",
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "url": {
                "description": "The URL to be downloaded by the UA Media Attachment extension. The media file should be one of the following types, and not exceed the maximum file size. Image (5 MB) JPEG, GIF, PNG. Audio (10 MB) AIFF, WAV, MP3, M4A. Video (50 MB) MPEG, MPEG2, MP4, AVI.",
                "type": "string"
              }
            },
            "required": [
              "url"
            ],
            "type": "object",
            "x-note": "It is recommended that you restrict image media attachments to 1 MB or less. While larger file sizes are technically supported (as shown in the table below), the ability to receive media may be limited by the download speed of the receiving device. If media is too large and takes too long to download, a notification may render without it.\n"
          },
          "mutable_content": {
            "description": "When set to true, content may be modified by an extension. This flag will be automatically set to true if there is a media_attachment in the payload. iOS 10.",
            "type": "boolean"
          },
          "priority": {
            "description": "Sets the APNS priority of the delivery. Valid values are 10 (immediate delivery) and 5 (conserve battery). The default value will be 10 if the notification is user-visible (In-App Message payload does not count towards visibility) which means there is either an alert, badge, or sound. If the notification is not user-visible, the priority will default to 5 and it is not legal to override this value to 10. Attempts to do so will cause the API respond with a 400 Bad Request response. enum: [5, 10]",
            "format": "int32",
            "type": "integer"
          },
          "relevance_score": {
            "default": 0,
            "description": "A number from 0.0 to 1.0. Used to sort notifications for an app. The notification with highest score is featured in the notification summary.",
            "example": 1.2,
            "format": "double",
            "type": "number"
          },
          "sound": {
            "description": "The name of the sound file in your app's bundle that you want to play for the alert.",
            "type": "string"
          },
          "subtitle": {
            "description": "A string that will display below the title of the notification. This is provided as a convenience for setting the subtitle in the alert JSON object. If a subtitle is also defined in the alert JSON object, this value is ignored. iOS 10.",
            "type": "string"
          },
          "target_content_id": {
            "description": "The identifier of the window to bring forward when the notification is opened. Used for multi-window content, such as App Clips.",
            "type": "string"
          },
          "thread_id": {
            "description": "A Unique identifier used to group notifications into separate threads in the Notification Center and on the lock screen. Grouped notifications are available beginning with iOS 12.",
            "type": "string"
          },
          "title": {
            "description": "A short string describing the purpose of the notification. This is provided as a convenience for setting the title in the alert JSON object. If a title is also defined in the alert JSON object, this value is ignored.",
            "type": "string"
          }
        },
        "title": "iOS Override",
        "type": "object",
        "x-schema-tag": "Platform Overrides"
      },
      "iosOverrideWithTemplate": {
        "description": "Use a `template` with iOS-specific message. You can reference a template by ID, or use `{{handlebars}}` directly in your message.",
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actionsObject"
          },
          "badge": {
            "description": "May be an integer, the value `auto`, or an increment value. Increments are expressed by integers formatted as strings, and prefixed with either `+` (U+002B) or `-` (U+002D). The numeric portion may be an integer value.",
            "example": "+1",
            "format": "int32",
            "type": "integer"
          },
          "category": {
            "description": "Sets the APNS category for the push. This maps directly to the `category` field in the `aps` section of the APNS payload. Any interactive notification specified for the IOS platform will take precedence and this value will be ignored (the interactive notification type will be used for the category).",
            "type": "string"
          },
          "collapse_id": {
            "description": "When there is a newer message that renders an older, related message irrelevant to the client app, the new message replaces the older message with the same collapse_id. Similar to the GCM collapse_key. The value of this key must not exceed 64 bytes. iOS 10 or above.",
            "type": "string"
          },
          "content_available": {
            "description": "If true, the payload is delivered to your app in the background.\n\nThis flag is automatically set to true if there is an In-App Message in the payload. Attempting to override this value to false when there is an in-app message will result in a 400 Bad Request response from the API.",
            "type": "boolean"
          },
          "expiry": {
            "description": "Delivery expiration, as either absolute ISO UTC timestamp, or number of seconds from now.",
            "oneOf": [
              {
                "description": "Number of seconds from now. When the delivery platform supports it, a value of zero (0) indicates that the message should be delivered immediately and never stored for later attempts.",
                "example": 3600,
                "type": "integer"
              },
              {
                "description": "An absolute ISO UTC timestamp.",
                "example": "2018-03-01T12:00:00",
                "type": "string"
              }
            ],
            "title": "Expiry",
            "type": "object"
          },
          "extra": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "A JSON dictionary of string-to-string key-value pairs. If you wish to pass structured data in an extra key, it must be JSON-encoded as a string.",
            "example": {
              "en": "English",
              "fr": "French"
            },
            "title": "Extra",
            "type": "object"
          },
          "interactive": {
            "$ref": "#/components/schemas/interactiveObject"
          },
          "media_attachment": {
            "description": "The `media_attachment` key on the iOS override is a JSON object that describes a media attachment to be handled by the UA Media Attachment extension in iOS 10.",
            "properties": {
              "content": {
                "description": "A JSON object that describes portions of the notification that should be modified if the media attachment succeeds, with any of the following fields",
                "properties": {
                  "body": {
                    "type": "string"
                  },
                  "subtitle": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "options": {
                "description": "A JSON object that describes how to display the resource at the URL specified above, with any of the following fields.",
                "properties": {
                  "crop": {
                    "description": "A JSON object that describes the crop parameters to be used in the thumbnail. Each field is a decimal, normalized from 0 to 1.",
                    "properties": {
                      "height": {
                        "description": "The height of the final crop.",
                        "format": "double",
                        "type": "number"
                      },
                      "width": {
                        "description": "The width of the final crop.",
                        "format": "double",
                        "type": "number"
                      },
                      "x": {
                        "description": "The X offset where the crop begins.",
                        "format": "double",
                        "type": "number"
                      },
                      "y": {
                        "description": "The Y offset where the crop begins.",
                        "format": "double",
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "hidden": {
                    "description": "A boolean, when true, the thumbnail will be hidden.",
                    "type": "boolean"
                  },
                  "time": {
                    "description": "A decimal, the frame of the animated resource that should be used in the thumbnail.",
                    "format": "int32",
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "url": {
                "description": "The URL to be downloaded by the UA Media Attachment extension. The media file should be one of the following types, and not exceed the maximum file size. Image (5 MB) JPEG, GIF, PNG. Audio (10 MB) AIFF, WAV, MP3, M4A. Video (50 MB) MPEG, MPEG2, MP4, AVI.",
                "type": "string"
              }
            },
            "required": [
              "url"
            ],
            "type": "object",
            "x-note": "It is recommended that you restrict image media attachments to 1 MB or less. While larger file sizes are technically supported (as shown in the table below), the ability to receive media may be limited by the download speed of the receiving device. If media is too large and takes too long to download, a notification may render without it.\n"
          },
          "mutable_content": {
            "description": "When set to true, content may be modified by an extension. This flag will be automatically set to true if there is a media_attachment in the payload. iOS 10.",
            "type": "boolean"
          },
          "priority": {
            "description": "Sets the APNS priority of the delivery. Valid values are 10 (immediate delivery) and 5 (conserve battery). The default value will be 10 if the notification is user-visible (In-App Message payload does not count towards visibility) which means there is either an alert, badge, or sound. If the notification is not user-visible, the priority will default to 5 and it is not legal to override this value to 10. Attempts to do so will cause the API respond with a 400 Bad Request response. enum: [5, 10]",
            "format": "int32",
            "type": "integer"
          },
          "sound": {
            "description": "The name of the sound file in your app's bundle that you want to play for the alert.",
            "type": "string"
          },
          "template": {
            "oneOf": [
              {
                "properties": {
                  "template_id": {
                    "description": "The `ID` of a template that you created in the Airship UI. You can find template IDs in *Messages » Content » Templates* in the dashboard.",
                    "format": "uuid",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              {
                "properties": {
                  "fields": {
                    "description": "Items in the field object are personalizable with handlebars.",
                    "properties": {
                      "alert": {
                        "description": "Alert override text for iOS devices.",
                        "type": "string"
                      },
                      "subtitle": {
                        "description": "A string that will display below the title of the notification. This is provided as a convenience for setting the subtitle in the alert JSON object. If a subtitle is also defined in the alert JSON object, this value is ignored. iOS 10.",
                        "type": "string"
                      },
                      "title": {
                        "description": "A short string describing the purpose of the notification. This is provided as a convenience for setting the title in the alert JSON object. If a title is also defined in the alert JSON object, this value is ignored.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            ]
          },
          "thread_id": {
            "description": "A Unique identifier used to group notifications into separate threads in the Notification Center and on the lock screen. Grouped notifications are available beginning with iOS 12.",
            "type": "string"
          }
        },
        "title": "iOS Override with Template",
        "type": "object",
        "x-schema-tag": "Platform Overrides with Templates"
      },
      "listMetadataObject": {
        "description": "Contains all user-specified data when defining a static list or attributes list in Airship.",
        "properties": {
          "description": {
            "description": "An optional description for the list.",
            "maxLength": 1000,
            "minLength": 1,
            "type": "string"
          },
          "extra": {
            "additionalProperties": {
              "example": {
                "key": "value"
              },
              "type": "string"
            },
            "description": "An optional JSON map of up to 100 key-value (string-to-string) pairs associated with the list. Keys in this object have a 64 character maximum; values can be up to 1024 characters."
          },
          "name": {
            "description": "The name of the list, consists of up to 64 URL-safe characters. The name is how the list is identified, so it should be unique and memorable.",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9_-]*$",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "title": "List Metadata Object",
        "type": "object"
      },
      "listObject": {
        "description": "Contains all user-specified data about a static list or attributes list (metadata), but does not contain CSV list contents. Use the `/api/lists/{name}/csv` endpoints to upload or download list contents.",
        "properties": {
          "channel_count": {
            "description": "A count of resolved channel identifiers for the last uploaded and successfully processed identifier list.",
            "readOnly": true,
            "type": "integer"
          },
          "created": {
            "description": "The time the list was initially created, in UTC Timestamp form.",
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "description": "An optional description for the list.",
            "maxLength": 1000,
            "type": "string"
          },
          "error_path": {
            "description": "If non-empty, indicates that there were errors in the processed CSV file. The value is either an empty string, or a URL to download a file describing the errors.",
            "type": "string"
          },
          "extra": {
            "additionalProperties": {
              "example": {
                "key": "value"
              },
              "type": "string"
            },
            "description": "An optional JSON map of up to 100 key-value (string-to-string) pairs associated with the list. Keys in this object have a 64 character maximum; values can be up to 1024 characters."
          },
          "last_updated": {
            "description": "The time the identifiers of the list were last updated successfully, in UTC timestamp form.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "The name of the list, consists of up to 64 URL-safe characters. The name is how the list is identified, so it should be unique and memorable.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string"
          },
          "status": {
            "description": "A string value representing the state of the list.\n\n* `ready` indicates that the list was processed successfully and ready for sending.\n* `processing`: the list is being processed.\n* `failure`: there was an error processing the last uploaded list.\n",
            "enum": [
              "ready",
              "processing",
              "failure"
            ],
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "title": "List Response Object",
        "type": "object"
      },
      "localization": {
        "description": "An array of localized messages inside a push object. Channels or named users bearing the specified language/country combination will receive the corresponding message.",
        "properties": {
          "country": {
            "description": "The ISO 3166-2 two-letter country code for this localization.",
            "type": "string"
          },
          "in_app": {
            "$ref": "#/components/schemas/inAppObject"
          },
          "language": {
            "description": "The ISO 639-1 two-letter language code for this localization.",
            "type": "string"
          },
          "message": {
            "$ref": "#/components/schemas/messageObject"
          },
          "notification": {
            "$ref": "#/components/schemas/notificationObject"
          }
        },
        "required": [
          "language",
          "country"
        ],
        "title": "Localizations",
        "type": "object"
      },
      "messageObject": {
        "description": "A Message Center message.",
        "properties": {
          "body": {
            "description": "The body of the message.",
            "type": "string"
          },
          "content_encoding": {
            "default": "utf-8",
            "description": "A string denoting encoding type of the data in body. Defaults to 'utf-8'. `base64` encoding can be used in cases which would be complex to escape properly, just as HTML containing embedded javascript code, which itself may contain embedded JSON data.",
            "example": "utf-8",
            "type": "string"
          },
          "content_type": {
            "description": "A string denoting the MIME type of the data in body. Defaults to 'text/html'.",
            "example": "text/html",
            "type": "string"
          },
          "expiry": {
            "description": "Delivery expiration, as either absolute ISO UTC timestamp, or number of seconds from now.",
            "oneOf": [
              {
                "description": "Number of seconds from now. When the delivery platform supports it, a value of zero (0) indicates that the message should be delivered immediately and never stored for later attempts.",
                "example": 3600,
                "type": "integer"
              },
              {
                "description": "An absolute ISO UTC timestamp.",
                "example": "2018-03-01T12:00:00",
                "type": "string"
              }
            ],
            "title": "Expiry",
            "type": "object"
          },
          "extra": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "A JSON dictionary of string-to-string key-value pairs. If you wish to pass structured data in an extra key, it must be JSON-encoded as a string.",
            "example": {
              "en": "English",
              "fr": "French"
            },
            "title": "Extra",
            "type": "object"
          },
          "icons": {
            "description": "A JSON dictionary of string key and value pairs representing icons. At this time, only the `list_icon` key is supported. Values must be URI/URLs to icon resources. For resources hosted by UA, use the following URI format 'ua:<resource_id>'.",
            "properties": {
              "list_icon": {
                "example": "ua: 9bf2f510-050e-11e3-9446-14dae95134d2",
                "type": "string"
              }
            },
            "type": "object"
          },
          "title": {
            "description": "The title of the message.",
            "type": "string"
          }
        },
        "required": [
          "title",
          "body"
        ],
        "title": "Message Center Object",
        "type": "object"
      },
      "messageObjectWithTemplate": {
        "description": "Use a `template` with a message center message. You can reference a template by ID, or use `{{handlebars}}` directly in your message.\n",
        "properties": {
          "content_encoding": {
            "default": "utf-8",
            "description": "A string denoting encoding type of the data in body. Defaults to 'utf-8'. `base64` encoding can be used in cases which would be complex to escape properly, just as HTML containing embedded javascript code, which itself may contain embedded JSON data.",
            "example": "utf-8",
            "type": "string"
          },
          "content_type": {
            "description": "A string denoting the MIME type of the data in body. Defaults to 'text/html'.",
            "example": "text/html",
            "type": "string"
          },
          "expiry": {
            "description": "Delivery expiration, as either absolute ISO UTC timestamp, or number of seconds from now.",
            "oneOf": [
              {
                "description": "Number of seconds from now. When the delivery platform supports it, a value of zero (0) indicates that the message should be delivered immediately and never stored for later attempts.",
                "example": 3600,
                "type": "integer"
              },
              {
                "description": "An absolute ISO UTC timestamp.",
                "example": "2018-03-01T12:00:00",
                "type": "string"
              }
            ],
            "title": "Expiry",
            "type": "object"
          },
          "extra": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "A JSON dictionary of string-to-string key-value pairs. If you wish to pass structured data in an extra key, it must be JSON-encoded as a string.",
            "example": {
              "en": "English",
              "fr": "French"
            },
            "title": "Extra",
            "type": "object"
          },
          "icons": {
            "description": "A JSON dictionary of string key and value pairs representing icons. At this time, only the `list_icon` key is supported. Values must be URI/URLs to icon resources. For resources hosted by UA, use the following URI format 'ua:<resource_id>'.",
            "properties": {
              "list_icon": {
                "example": "ua: 9bf2f510-050e-11e3-9446-14dae95134d2",
                "type": "string"
              }
            },
            "type": "object"
          },
          "template": {
            "oneOf": [
              {
                "properties": {
                  "template_id": {
                    "description": "The `ID` of a template that you created in the Airship UI. You can find template IDs in *Messages » Content » Templates* in the dashboard.",
                    "format": "uuid",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              {
                "properties": {
                  "fields": {
                    "description": "Items in the field object are personalizable with handlebars.",
                    "properties": {
                      "body": {
                        "description": "The body of the message. This can be a full HTML message.",
                        "type": "string"
                      },
                      "title": {
                        "description": "The title of the message.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            ]
          }
        },
        "title": "Message Center with Template",
        "type": "object",
        "x-schema-tag": "Platform Overrides with Templates"
      },
      "mms": {
        "description": "The payload for a create and send operation that registers SMS channels and sends a multimedia payload (MMS). When sending an MMS payload, `device_types` must be set to `mms`.\n",
        "properties": {
          "audience": {
            "description": "The SMS information and opt in parameters for the channels you want to register and send to.",
            "properties": {
              "create_and_send": {
                "description": "Each object in the array represents channel you want to register and push to. Channel registration fields are prefixed with `ua_` and have the same requirements as the [SMS channel registration endpoint](/api/channels/sms/post).\n\n\nAll other fields represent variables if `notification` specifies a `template`.",
                "items": {
                  "additionalProperties": {
                    "description": "Like substitutions in the [template merge data object](#schemas-pushtemplatepayload), you can provide additional keys and values representing variables in your notification `template`. Variable keys can be any type of value, including arrays, objects, etc. Your variable keys **must not** be prefixed with `ua_`. See the [Push Template Payload](#schemas-pushtemplatepayload) for more information about template substitutions.\n",
                    "title": "Substitutions"
                  },
                  "properties": {
                    "ua_msisdn": {
                      "description": "The phone number of a mobile device. Entries with `ua_msisdn` values that are not reachable by `ua_sender` values will be **silenty dropped.**",
                      "type": "string"
                    },
                    "ua_opted_in": {
                      "description": "The date/time when the user (msisdn) opted in to messages from the sender. If this date-time is newer than an `opted_out` value on the channel, the channel will receive your message, but Airship will not update the channel's opt-in status or value.\n",
                      "format": "datetime",
                      "type": "string"
                    },
                    "ua_sender": {
                      "description": "The long or short code your SMS messages are sent from. You can prefix short codes with an ISO 3166 country code — `US:12345`.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "ua_msisdn",
                    "ua_sender",
                    "ua_opted_in"
                  ],
                  "type": "object"
                },
                "maxItems": 1000,
                "type": "array"
              }
            },
            "required": [
              "create_and_send"
            ],
            "title": "SMS Audience for Create and Send Payloads",
            "type": "object"
          },
          "device_types": {
            "description": "The platform you want to register channels for and send notifications to.",
            "items": {
              "enum": [
                "email",
                "mms",
                "sms",
                "open::<open_platform_name>"
              ],
              "maxItems": 1,
              "type": "string"
            },
            "type": "array"
          },
          "notification": {
            "properties": {
              "mms": {
                "description": "A platform override for MMS messages; `device_types` must be set to `mms`. A notification with a platform override that does not match your `device_types` will result in a 400 error.",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/mmsOverrideObject"
                  },
                  {
                    "$ref": "#/components/schemas/mmsOverrideWithTemplate"
                  }
                ]
              }
            },
            "required": [
              "mms"
            ],
            "type": "object"
          }
        },
        "required": [
          "audience",
          "device_types",
          "notification"
        ],
        "title": "Create and Send MMS Notification",
        "type": "object",
        "x-schema-tag": "Create and Send"
      },
      "mmsOverrideObject": {
        "description": "Provides the content for a push to MMS channels. If `sms` is in the `device_type` array, your request may include this object.\nIt cannot be combined with an SMS Platform Override as a single push can only include either an SMS or MMS payload.\n",
        "properties": {
          "fallback_text": {
            "description": "If a member of your audience cannot receive MMS messages, they will receive your fallback text with a link to the original content.\n",
            "maxLength": 160,
            "minLength": 1,
            "type": "string"
          },
          "shorten_links": {
            "default": false,
            "description": "If true, Airship will shorten http/https links (space delimited) in the message text fields, producing unique, 25 character URLs for each member of your audience. Airship produces `short_link_click` events in the Real-Time Data Stream for each link that a user engages with.\n\nWhen this setting is enabled, you can add or remove tags from users who click your links by adding query strings to your URLs. You can serialize tag operations with `&`:\n* `?ua-tag-add=tag_group:tag&another_group:tag2` — adds a tag in `tag_group` to the `channel_id`.\n* `?ua-tag-remove=tag_group:tag&another_group:tag2` — removes a tag in `tag group` from the `channel_id`.\n",
            "type": "boolean"
          },
          "slides": {
            "description": "An array containing a single slide object. A slide is a multimedia object.\n",
            "items": {
              "properties": {
                "media": {
                  "description": "Contains information about the media you want to send.",
                  "properties": {
                    "content_length": {
                      "description": "The length of the attachment in bytes. Maximum size is 2MB or 2000000 bytes for image/jpeg and image/png, 1024000 bytes for image/gif,\nand 2048000 bytes for text/vcard. While this is optional, it is recommended since pushes will get dropped if the content size is incorrect.\n",
                      "type": "integer"
                    },
                    "content_type": {
                      "description": "The MIME type of the image specified in the URL. The MIME type must match the extension in the `url`.",
                      "enum": [
                        "image/jpeg",
                        "image/gif",
                        "image/png",
                        "text/vcard"
                      ],
                      "type": "string"
                    },
                    "url": {
                      "description": "The http or https URL of the media attachment for the slide. The URL must end in one of `.gif`, `.jpeg`, `.jpg`, `.png`, or `.vcf` (case-insensitive).\n\nWhile the `content_length` field is optional, your image must still be under 2MB for JPEGs and PNGs, 1 MB for GIFs, or 2048000 bytes for text/vcard.\n",
                      "maxLength": 2000,
                      "type": "string"
                    }
                  },
                  "required": [
                    "url",
                    "content_type"
                  ],
                  "type": "object"
                },
                "text": {
                  "description": "Text that you want to display along with the media attachment. The order of media and text in the message is not guaranteed.\n",
                  "maxLength": 5000,
                  "minLength": 0,
                  "type": "string"
                }
              },
              "required": [
                "media"
              ],
              "type": "object"
            },
            "maxItems": 1,
            "minItems": 1,
            "type": "array"
          },
          "subject": {
            "description": "The subject for the MMS message, normally displayed in bold. The subject might not appear for recipients if the Sender is a Toll-Free number.\n",
            "maxLength": 80,
            "minLength": 0,
            "type": "string"
          }
        },
        "required": [
          "fallback_text",
          "slides"
        ],
        "title": "MMS Platform Overrides",
        "type": "object",
        "x-schema-tag": "Platform Overrides"
      },
      "mmsOverrideWithTemplate": {
        "description": "Template and notification overrides for a create and send payload with `device_types` set to `mms`. With a template, you can provide and populate variables and conditional statements based on those variables. Conditionals begin with `{{#operator}}` and end with `{{/operator}}`. For more information, see [Dynamic Content](/guides/messaging/user-guide/personalization/dynamic-content).\n",
        "properties": {
          "slides": {
            "description": "An array containing a single slide object. A slide is a multimedia object.\n",
            "items": {
              "properties": {
                "media": {
                  "properties": {
                    "content_length": {
                      "description": "The length of the attachment in bytes. Maximum size is 2MB or 2000000 bytes for image/jpeg and image/png, 1024000 bytes for image/gif,\nand 2048000 bytes for text/vcard. While this is optional, it is recommended since pushes will get dropped if the content size is incorrect.\n",
                      "type": "integer"
                    },
                    "content_type": {
                      "description": "The MIME type of the image specified in the URL. The MIME type must match the extension in the `url`.",
                      "enum": [
                        "image/jpeg",
                        "image/gif",
                        "image/png",
                        "text/vcard"
                      ],
                      "type": "string"
                    },
                    "url": {
                      "description": "The HTTP or HTTPS URL of the media attachment for the slide. The URL must end in one of `.gif`, `.jpeg`, `.jpg`, `.png`, or `.vcf` (case-insensitive).\n\nWhile the `content_length` field is optional, your image must still be under 2MB for JPEGs and PNGs, 1 MB for GIFs, or 2048000 bytes for text/vcard.\n",
                      "maxLength": 2000,
                      "type": "string"
                    }
                  },
                  "required": [
                    "url",
                    "content_type"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "media"
              ],
              "type": "object"
            },
            "maxItems": 1,
            "minItems": 1,
            "type": "array"
          },
          "template": {
            "description": "Specify a `template_id` created in the Airship UI or use an inline template.",
            "oneOf": [
              {
                "properties": {
                  "template_id": {
                    "description": "The `ID` of a template that you created in the Airship UI. You can find template IDs in *Messages » Content » Templates* in the dashboard.",
                    "format": "uuid",
                    "type": "string"
                  }
                },
                "required": [
                  "template_id"
                ],
                "type": "object"
              },
              {
                "properties": {
                  "fields": {
                    "properties": {
                      "fallback_text": {
                        "description": "If a member of your audience cannot receive MMS messages, they will receive your fallback text with a link to the original content.\n",
                        "maxLength": 160,
                        "minLength": 1,
                        "type": "string"
                      },
                      "subject": {
                        "description": "The subject for the MMS message, normally displayed in bold. The subject might not appear for recipients if the Sender is a Toll-Free number.\n",
                        "maxLength": 80,
                        "minLength": 0,
                        "type": "string"
                      },
                      "text": {
                        "description": "Text that you want to display along with the media attachment. The order of media and text in the message is not guaranteed.\n",
                        "maxLength": 5000,
                        "minLength": 0
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            ]
          }
        },
        "title": "MMS Notification with Inline Template",
        "type": "object",
        "x-schema-tag": "Platform Overrides with Templates"
      },
      "namedUserResponseBody": {
        "description": "The response body for a named user listing, including tags, channels and attributes associated with the named user.",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/attributes"
          },
          "channels": {
            "description": "Listing of channels associated with the named user.",
            "items": {
              "$ref": "#/components/schemas/channelObject"
            },
            "type": "array"
          },
          "created": {
            "description": "Datetime created in UTC.",
            "format": "datetime",
            "type": "string"
          },
          "last_modified": {
            "description": "Datetime last modified in UTC.",
            "format": "datetime",
            "type": "string"
          },
          "named_user_id": {
            "description": "A customer-chosen ID that represents a user, e.g., CRM ID. This ID cannot have leading or trailing whitespace.",
            "example": "john_doe",
            "type": "string"
          },
          "subscription_lists": {
            "description": "A list of subscription list items associated with the named user.",
            "items": {
              "$ref": "#/components/schemas/namedUserSubscriptionListItem"
            },
            "type": "array"
          },
          "tags": {
            "$ref": "#/components/schemas/tagGroupObject",
            "description": "One or more tag group objects associated with the named user. See [Named User Tags](#operation-api-named_users-tags-post)."
          },
          "user_attributes": {
            "description": "User attributes consist of three values that are copied from the last channel associated with the named user.",
            "properties": {
              "ua_country": {
                "description": "An ISO 3166 two-character country code. Example: \"US\".",
                "type": "string"
              },
              "ua_language": {
                "description": "An ISO 639-1 two-character language code. Example: \"en\".",
                "type": "string"
              },
              "ua_local_tz": {
                "description": "Timezone as a string. Example: \"America/Los_Angeles\"",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "title": "Named User Object",
        "type": "object"
      },
      "namedUserSubscriptionListItem": {
        "description": "An item consisting of a list of list IDs and scope.",
        "properties": {
          "list_ids": {
            "description": "A list of subscription lists associated to the specified scope. If no scope is specified these subscription lists are not scoped.",
            "example": [
              "example_listId-1",
              "example_listId-5"
            ],
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          },
          "scope": {
            "description": "Scope as a string.",
            "enum": [
              "app",
              "email",
              "sms",
              "web"
            ],
            "type": "string"
          }
        },
        "required": [
          "list_ids",
          "scope"
        ],
        "title": "Subscription List Item Object",
        "type": "object"
      },
      "namedUserSubscriptionListsObject": {
        "description": "Defines the subscription list changes.",
        "properties": {
          "subscribe": {
            "description": "Subscribe to the specified subscription list identifier.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "unsubscribe": {
            "description": "Unsubscribe the specified subscription list identifier.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "title": "Subscription Lists Object",
        "type": "object"
      },
      "namedUserUpdate": {
        "description": "At least one of `associate`, `disassociate`, `tags` or `attributes` must be provied.\n",
        "properties": {
          "associate": {
            "description": "Associate a list of channels or email addresses with the named user.\nIf the `channel_id` or `email_address` is already associated with the named user,\nthis operation will do nothing.\n",
            "items": {
              "anyOf": [
                {
                  "properties": {
                    "channel_id": {
                      "example": "9c36e8c7-5a73-47c0-9716-99fd3d4197d5",
                      "format": "uuid",
                      "type": "string"
                    },
                    "device_type": {
                      "description": "The device type of the channel.\nIf the channel is not yet registered in Airship and `device_type` is not provided a 400 will be returned.\n",
                      "enum": [
                        "ios",
                        "android",
                        "amazon",
                        "web",
                        "email",
                        "sms",
                        "open"
                      ],
                      "example": "ios",
                      "type": "string"
                    }
                  },
                  "required": [
                    "channel_id"
                  ],
                  "title": "Channel",
                  "type": "object"
                },
                {
                  "properties": {
                    "email_address": {
                      "description": "This email channel must already be registered in Airship or a 400 will be returned\n",
                      "example": "user@company.com",
                      "format": "email",
                      "type": "string"
                    }
                  },
                  "required": [
                    "email_address"
                  ],
                  "title": "Email Address",
                  "type": "object"
                }
              ]
            },
            "type": "array"
          },
          "attributes": {
            "description": "Set or remove attributes on a named user.\n\nA single request body may contain `set` or `remove` operations, or both.\nIf both `set` and `remove` fields are present and the intersection of the attributes in these fields\nis not empty, then a 400 will be returned.\n\nIf at least one of the attributes included on the request is valid,\ni.e. at least one attribute exists, Airship returns a 200 with a warning containing a\nlist of attributes that failed to update.\n",
            "items": {
              "$ref": "#/components/schemas/attributesObject"
            },
            "type": "array"
          },
          "disassociate": {
            "description": "Disassociate a channel or an email address from the named user.\nIf a channel is provided in both `associate` and `disassociate` sections a 400 will be returned.\n",
            "items": {
              "anyOf": [
                {
                  "properties": {
                    "channel_id": {
                      "example": "9c36e8c7-5a73-47c0-9716-99fd3d4197d5",
                      "format": "uuid",
                      "type": "string"
                    },
                    "device_type": {
                      "description": "The device type of the channel.\nIf the channel is not yet registered in Airship and `device_type` is not provided a 400 will be returned.\n",
                      "enum": [
                        "ios",
                        "android",
                        "amazon",
                        "web",
                        "email",
                        "sms",
                        "open"
                      ],
                      "example": "ios",
                      "type": "string"
                    }
                  },
                  "required": [
                    "channel_id"
                  ],
                  "title": "Channel",
                  "type": "object"
                },
                {
                  "properties": {
                    "email_address": {
                      "description": "This email channel must already be registered in Airship or a 400 will be returned\n",
                      "example": "user@company.com",
                      "format": "email",
                      "type": "string"
                    }
                  },
                  "required": [
                    "email_address"
                  ],
                  "title": "Email Address",
                  "type": "object"
                }
              ]
            },
            "type": "array"
          },
          "tags": {
            "description": "Add, remove, or set tags on a named user. A single request body may\ncontain add and/or remove objects, or a single set field. At least one of the add, remove, or set objects\nmust be present in a request.\n\nA tag must be < 128 characters. A request with one or more tags longer than 128 characters will return\na 400 response.\n\nIf at least one of the tags included on the request is valid,\ni.e. at least one tags exists, Airship returns a 200 with a warning containing a\nlist of tags that failed to update.\n",
            "properties": {
              "add": {
                "$ref": "#/components/schemas/tagGroupObject",
                "description": "Add the list of tags to the named user, but do not remove any. If the tags are already present, they are not modified."
              },
              "remove": {
                "$ref": "#/components/schemas/tagGroupObject",
                "description": "Remove the list of tags from the named user, but do not remove any others. If the tags are not currently present, nothing happens."
              },
              "set": {
                "$ref": "#/components/schemas/tagGroupObject",
                "description": "Set these tags for the named user; any tags previously associated that are not in this current list are removed."
              }
            },
            "title": "Tags",
            "type": "object"
          }
        },
        "title": "Update Named User",
        "type": "object"
      },
      "notificationObject": {
        "description": "The notification payload that is required unless either `message` or `in_app` is present. You can provide an `alert` and any platform overrides that apply to the `device_type` platforms you specify.",
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actionsObject"
          },
          "alert": {
            "description": "A notification message, displayed for any platforms recieving the push without a platform override.",
            "type": "string"
          },
          "amazon": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/amazonOverrideObject"
              },
              {
                "$ref": "#/components/schemas/amazonOverrideWithTemplate"
              }
            ]
          },
          "android": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/androidOverrideObject"
              },
              {
                "$ref": "#/components/schemas/androidOverrideWithTemplate"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/emailOverrideObject"
              },
              {
                "$ref": "#/components/schemas/emailOverrideWithTemplate"
              }
            ]
          },
          "interactive": {
            "$ref": "#/components/schemas/interactiveObject"
          },
          "ios": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/iosOverrideObject"
              },
              {
                "$ref": "#/components/schemas/iosOverrideWithTemplate"
              }
            ]
          },
          "mms": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/mmsOverrideObject"
              },
              {
                "$ref": "#/components/schemas/mmsOverrideWithTemplate"
              }
            ]
          },
          "open::open_platform_name": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/openChannelOverrideObject"
              },
              {
                "$ref": "#/components/schemas/openChannelOverrideWithTemplate"
              }
            ]
          },
          "sms": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/smsOverrideObject"
              },
              {
                "$ref": "#/components/schemas/smsOverrideWithTemplate"
              }
            ]
          },
          "web": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/webOverrideObject"
              },
              {
                "$ref": "#/components/schemas/webOverrideWithTemplate"
              }
            ]
          },
          "wns": {
            "$ref": "#/components/schemas/wnsOverrideObject"
          }
        },
        "title": "Notification Object",
        "type": "object"
      },
      "npsSurveyAttributes": {
        "description": "Attributes automatically generated by Airship based on data from your NPS surveys.\n",
        "properties": {
          "ua_nps_category": {
            "description": "A category based on the score a user submits in an NPS survey. Scores of 9 and 10 are categorized as `promoter`, 7 and 8 are categorized as `passive`, and 0-6 are `detractor`.",
            "type": "string"
          },
          "ua_nps_score": {
            "description": "The score (0-10) a user submits in an NPS (Net Promoter Score) survey.",
            "type": "number"
          }
        },
        "title": "NPS Survey Attributes",
        "type": "object",
        "x-inline-component": false,
        "x-schema-tag": "Attributes"
      },
      "numberAttribute": {
        "description": "An attribute object with an `INTEGER` schema type. Performs value comparisons based on the number (integer) value for an attribute on a channel.",
        "properties": {
          "attribute": {
            "description": "The key for the number attribute that you previously defined in the Airship UI, e.g., `\"lifetime_value\"`.",
            "maxLength": 256,
            "minLength": 1,
            "type": "string"
          },
          "operator": {
            "description": "The operator used to evaluate the attribute expression.",
            "enum": [
              "equals",
              "contains",
              "less",
              "greater",
              "is_empty"
            ],
            "type": "string"
          },
          "value": {
            "description": "The integer value of the text attribute that you are targeting, e.g., `15000`.",
            "type": "integer"
          }
        },
        "required": [
          "attribute",
          "operator",
          "value"
        ],
        "title": "Number Attribute Selector",
        "type": "object",
        "x-schema-tag": "Attributes"
      },
      "okResponseObject": {
        "description": "Returned with 2xx Responses. At a minimum, successful calls return `true` for the `ok` key. If your call includes a verbose response (as with `GET` requests, etc), the `ok` key will appear in the top-most object, outside the verbose response.",
        "properties": {
          "ok": {
            "description": "Success.",
            "type": "boolean"
          },
          "operation_id": {
            "description": "A unique string identifying the operations that modify resources. Use the operation ID to locate and track grouped operations (i.e. a batch push operation may generate multiple `push_id` strings, but a single `operation_id`) or operations that change an existing resource.",
            "format": "uuid",
            "type": "string"
          }
        },
        "required": [
          "ok"
        ],
        "title": "Ok Response",
        "type": "object",
        "x-schema-tag": "Response Format"
      },
      "open": {
        "description": "When registering and sending to open channels, the `device_type` must be set to `open::<open_channel_name>`.",
        "properties": {
          "audience": {
            "description": "The open channels and opt-in information for the channels you want to register and send to.",
            "properties": {
              "create_and_send": {
                "description": "Each object in the array represents channel you want to register and push to. Channel registration fields are prefixed with `ua_` and have the same requirements as open channel registration.",
                "items": {
                  "additionalProperties": {
                    "description": "Like substitutions in the [template merge data object](#schemas-pushtemplatepayload), you can provide additional keys and values representing variables in your notification `template`. Variable keys can be any type of value, including arrays, objects, etc. Your variable keys **must not** be prefixed with `ua_`. See the [Push Template Payload](#schemas-pushtemplatepayload) for more information about template substitutions.\n",
                    "title": "Substitutions"
                  },
                  "properties": {
                    "ua_address": {
                      "description": "The address that you want to populate the channel's `address` field.  See the channel object for more information.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "ua_address"
                  ],
                  "type": "object"
                },
                "maxItems": 1000,
                "type": "array"
              }
            },
            "required": [
              "create_and_send"
            ],
            "title": "Open Audience for Create and Send Payloads",
            "type": "object"
          },
          "campaigns": {
            "$ref": "#/components/schemas/campaignsObject"
          },
          "device_types": {
            "description": "The platform you want to register channels for and send notifications to.",
            "items": {
              "enum": [
                "email",
                "mms",
                "sms",
                "open::<open_platform_name>"
              ],
              "maxItems": 1,
              "type": "string"
            },
            "type": "array"
          },
          "notification": {
            "description": "An `alert` notification or a platform override matching the valie in `device types`. A notification with a platform override that does not match your `device_types` will result in a 400 error.",
            "properties": {
              "open::open_platform_name": {
                "$ref": "#/components/schemas/openChannelOverrideWithTemplate"
              }
            },
            "type": "object"
          }
        },
        "required": [
          "audience",
          "device_types",
          "notification"
        ],
        "title": "Create and Send to Open Channels",
        "type": "object",
        "x-schema-tag": "Create and Send"
      },
      "openChannelOverrideObject": {
        "description": "The platform override section for open platforms uses the prefix attribute \"open::\" before the configured open platform name. The \"open::<open_platform_name>\" object will contain an object with the following attributes.",
        "properties": {
          "alert": {
            "description": "Override the alert value provided at the top level, if any.",
            "type": "string"
          },
          "extra": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "A JSON dictionary of string-to-string key-value pairs. If you wish to pass structured data in an extra key, it must be JSON-encoded as a string.",
            "example": {
              "en": "English",
              "fr": "French"
            },
            "title": "Extra",
            "type": "object"
          },
          "interactive": {
            "$ref": "#/components/schemas/interactiveObject"
          },
          "media_attachment": {
            "description": "A URI for an image or video somewhere on the internet.",
            "format": "uri",
            "type": "string"
          },
          "summary": {
            "description": "A string value for providing a content summary.",
            "type": "string"
          },
          "title": {
            "description": "A string representing the title of the notification.",
            "type": "string"
          }
        },
        "title": "Open Channel Override",
        "type": "object",
        "x-schema-tag": "Platform Overrides"
      },
      "openChannelOverrideWithTemplate": {
        "description": "Use a `template` with an open channel-specific message. You can reference a template by ID, or use `{{handlebars}}` directly in your message.\n",
        "properties": {
          "extra": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "A JSON dictionary of string-to-string key-value pairs. If you wish to pass structured data in an extra key, it must be JSON-encoded as a string.",
            "example": {
              "en": "English",
              "fr": "French"
            },
            "title": "Extra",
            "type": "object"
          },
          "interactive": {
            "$ref": "#/components/schemas/interactiveObject"
          },
          "template": {
            "oneOf": [
              {
                "properties": {
                  "template_id": {
                    "description": "The `ID` of a template that you created in the Airship UI. You can find template IDs in *Messages » Content » Templates* in the dashboard.",
                    "format": "uuid",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              {
                "properties": {
                  "fields": {
                    "properties": {
                      "alert": {
                        "description": "Override the alert value provided at the top level, if any.",
                        "type": "string"
                      },
                      "media_attachment": {
                        "description": "A URI for an image or video somewhere on the internet.",
                        "format": "uri",
                        "type": "string"
                      },
                      "summary": {
                        "description": "A string value for providing a content summary.",
                        "type": "string"
                      },
                      "title": {
                        "description": "A string representing the title of the notification.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            ]
          }
        },
        "required": [
          "template"
        ],
        "title": "Open Channel Override with Template",
        "type": "object",
        "x-schema-tag": "Platform Overrides with Templates"
      },
      "pipelineObject": {
        "description": "A pipeline object encapsulates the complete set of objects that define an Automation pipeline: Triggers, Outcomes, and metadata. At least one of `immediate_trigger` or `historical_trigger` must be supplied.",
        "properties": {
          "activation_time": {
            "description": "The date and time when the pipeline becomes active, and begins processing triggers and issuing push notifications.\n\n\nIf this value is in the future, the pipeline's `status` is `pending`.\n",
            "type": "string"
          },
          "cancellation_trigger": {
            "description": "Defines event conditions that will cancel the fulfillment of a pipeline. If a pipeline has multiple cancellation triggers, they’re combined via an implicit OR operation. Any one of the triggers will cancel the fulfillment of the pipeline. Cancellation triggers are only allowed when a pipeline has no historical triggers and it is possible for a pipeline’s fulfillment to be delayed using the Timing Object.\nThe `first_open` event identifier is not valid as a cancellation trigger.\n",
            "items": {
              "$ref": "#/components/schemas/eventIdentifier"
            },
            "type": "array"
          },
          "condition": {
            "description": "One or more conditions, combined by operators. A\n  condition set may contain a maximum of 20 conditions. Taken together, the\n  operator and set of conditions form a boolean expression which must evaluate\n  to true for a pipeline to be activated and its outcomes executed. Valid\n  operators for a condition set are `and` and  `or`. Nesting of operators\n  is not supported within a condition set, i.e., you may not combine `and`\n  logic with `or` logic.",
            "items": {
              "oneOf": [
                {
                  "properties": {
                    "and": {
                      "items": {
                        "description": "Evaluated when determining whether or not to execute the outcome(s) of a pipeline. Condition objects are JSON dictionaries with a key indicating the type of condition, and a value containing necessary parameters to that condition. The only valid condition type is `tag`.",
                        "properties": {
                          "tag": {
                            "description": "Tag conditions have three possible attributes: tag_name, group and negated.",
                            "properties": {
                              "group": {
                                "description": "A tag group. Defaults to `device`.",
                                "type": "string"
                              },
                              "negated": {
                                "description": "If true, the condition will match on the absence of a tag. If absent or false, the condition will match on presence of a tag.",
                                "type": "boolean"
                              },
                              "tag_name": {
                                "description": "The name of the tag the condition will match against.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "tag_name"
                            ],
                            "type": "object"
                          }
                        },
                        "title": "Condition Object",
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "title": "AND selector",
                  "type": "object"
                },
                {
                  "properties": {
                    "or": {
                      "items": {
                        "description": "Evaluated when determining whether or not to execute the outcome(s) of a pipeline. Condition objects are JSON dictionaries with a key indicating the type of condition, and a value containing necessary parameters to that condition. The only valid condition type is `tag`.",
                        "properties": {
                          "tag": {
                            "description": "Tag conditions have three possible attributes: tag_name, group and negated.",
                            "properties": {
                              "group": {
                                "description": "A tag group. Defaults to `device`.",
                                "type": "string"
                              },
                              "negated": {
                                "description": "If true, the condition will match on the absence of a tag. If absent or false, the condition will match on presence of a tag.",
                                "type": "boolean"
                              },
                              "tag_name": {
                                "description": "The name of the tag the condition will match against.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "tag_name"
                            ],
                            "type": "object"
                          }
                        },
                        "title": "Condition Object",
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "title": "OR selector",
                  "type": "object"
                }
              ],
              "type": "object"
            },
            "type": "array"
          },
          "constraint": {
            "description": "An array of rate objects determining the maximum number of messages each audience member can receive over a period of time.\nYou can set a `lifetimes` constraint as well, limiting a pipeline to an absolute maximum number of messages ever.",
            "items": {
              "properties": {
                "rate": {
                  "description": "A rate limit constraint describes a limit on the number of pushes that can be sent to an individual device per a specified time period.",
                  "oneOf": [
                    {
                      "description": "Limits the number of pushes any individual audience member will receive from the pipeline over a number of days.",
                      "properties": {
                        "days": {
                          "description": "An integer, specifying the time period in number of days.",
                          "maximum": 90,
                          "type": "integer"
                        },
                        "pushes": {
                          "description": "An integer, specifying the maximum number of pushes to any individual audience member per time period.",
                          "type": "integer"
                        }
                      },
                      "title": "Pushes/days constraint",
                      "type": "object"
                    },
                    {
                      "description": "Limits the number of pushes any individual audience member will receive from the pipeline over a number of hours.",
                      "properties": {
                        "hours": {
                          "description": "An integer, specifying the time period in number of hours.",
                          "maximum": 72,
                          "type": "integer"
                        },
                        "pushes": {
                          "description": "An integer, specifying the maximum number of pushes to any individual audience member per time period.",
                          "type": "integer"
                        }
                      },
                      "title": "Pushes/hours constraint",
                      "type": "object"
                    },
                    {
                      "description": "Limits the number of pushes any individual audience member will ever receive from the pipeline.",
                      "properties": {
                        "lifetimes": {
                          "description": "An integer specifying a lifetime.",
                          "maximum": 1,
                          "minimum": 1,
                          "type": "integer"
                        },
                        "pushes": {
                          "description": "An integer, specifying the maximum number of pushes to any individual audience member per time period.",
                          "type": "integer"
                        }
                      },
                      "title": "Pushes/lifetime constraint",
                      "type": "object"
                    }
                  ],
                  "type": "object"
                }
              },
              "type": "object"
            },
            "maxItems": 3,
            "type": "array",
            "uniqueItems": true
          },
          "creation_time": {
            "description": "Read-only timestamp. An ISO 8601 timestamp in UTC indicating the time that the pipeline was initially created. This is a read-only field which is present on GET responses. If it is included in a POST or PUT request it will be ignored.",
            "readOnly": true,
            "type": "string"
          },
          "deactivation_time": {
            "description": "The date and time when the pipeline becomes inactive, and quits processing triggers and issuing push notifications.\n\n\nIf this value is in the past, the pipeline's `status` is `completed`.\n",
            "type": "string"
          },
          "enabled": {
            "description": "A boolean value indicating whether or not the pipeline is active.",
            "type": "boolean"
          },
          "historical_trigger": {
            "description": "Defines a condition that matches against event data trended over time. Currently historical trigger objects are limited to inactivity triggers, which trigger on a user’s failure to open the app within a defined number of days.",
            "items": {
              "properties": {
                "creation_time": {
                  "description": "A timestamp returned when getting a pipeline with a `historical_trigger`. Include this field in a `PUT` request to ensure that the historical_trigger is not reset.",
                  "type": "string"
                },
                "days": {
                  "description": "A time period key. An integer indicating the length of the matching window, in days. Maximum 90 days.",
                  "maximum": 90,
                  "minimum": 1,
                  "type": "integer"
                },
                "equals": {
                  "description": "A matching operator. Since we are measuring inactivity with the historical trigger object, `0` is the only value supported with the equals operator, i.e., we are measuring number of events in a defined time window. Any number higher than zero would therefore represent activity.",
                  "type": "integer"
                },
                "event": {
                  "$ref": "#/components/schemas/eventIdentifier"
                },
                "greater_than": {
                  "description": "A matching operator. Specifies the number of events that must be targeted before the historic trigger will fire.",
                  "type": "integer"
                },
                "less_than": {
                  "description": "A matching operator. Specifies the number of events that must be targeted before the historic trigger will fire.",
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "immediate_trigger": {
            "description": "Defines a condition that activates a trigger immediately when an event matching it occurs. If a pipeline has multiple immediate triggers, they’re combined via an implicit OR operation. Any one of the triggers firing will activate the pipeline. Immediate triggers are all event identifiers. `first_open` is a valid Event Identifier for immediate triggers. However, events within the trigger support AND and OR compound selection.",
            "items": {
              "$ref": "#/components/schemas/eventIdentifier"
            },
            "type": "array"
          },
          "last_modified_time": {
            "description": "Read-only timestamp. An ISO 8601 timestamp in UTC indicating the time that the pipeline was last modified. This is a read-only field which is present on GET responses. If it is included in a POST or PUT request it will be ignored.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "A descriptive name for the pipeline.",
            "type": "string"
          },
          "outcome": {
            "description": "An outcome object contains a single push object where the `audience` field must be set to `triggered`.",
            "properties": {
              "delay": {
                "deprecated": true,
                "description": "Deprecated. An integer >= 60 in seconds to delay before processing the outcome. Only valid if the `push` attribute is present. The `delay` field in the Outcome Object is deprecated as of the June 2016 release of the timing object. Use a `delay object` in the `timing object` to specify a post-trigger delay.",
                "type": "integer"
              },
              "push": {
                "description": "A push object describes everything about a push notification, including the audience and push payload. A push object is composed of up to seven attributes.",
                "properties": {
                  "audience": {
                    "$ref": "#/components/schemas/audienceSelector"
                  },
                  "campaigns": {
                    "$ref": "#/components/schemas/campaignsObject"
                  },
                  "device_types": {
                    "description": "An array containing one or more strings identifying targeted platforms. Accepted platforms are\n    `ios`, `android`, `amazon`, `wns`, `web`, `sms`, `email`, and `open::<open_platform_name>` (using the `open_platform_name` value of your open channel).",
                    "items": {
                      "enum": [
                        "android",
                        "amazon",
                        "ios",
                        "web",
                        "wns",
                        "sms",
                        "email",
                        "open::open_platform_name"
                      ],
                      "type": "string"
                    },
                    "minItems": 1,
                    "title": "Device Types Selector",
                    "type": "array"
                  },
                  "in_app": {
                    "$ref": "#/components/schemas/inAppObject"
                  },
                  "message": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/messageObject"
                      },
                      {
                        "$ref": "#/components/schemas/messageObjectWithTemplate"
                      }
                    ]
                  },
                  "notification": {
                    "$ref": "#/components/schemas/notificationObject"
                  },
                  "options": {
                    "$ref": "#/components/schemas/pushOptions"
                  }
                },
                "required": [
                  "audience",
                  "device_types"
                ],
                "type": "object"
              }
            },
            "required": [
              "push"
            ],
            "type": "object"
          },
          "status": {
            "description": "Read-only field indicating whether or not the pipeline is currently issuing push notifications.\n\n* `pending`: The pipeline is not yet active. Occurs when the current time is less than or equal to the `activation_time`.\n* `live`: The pipeline is active.\n* `completed`: The pipeline has finished running. Occurs when the current time is greater than or equal to the `deactivation_time`.",
            "enum": [
              "pending",
              "live",
              "completed"
            ],
            "readOnly": true,
            "type": "string"
          },
          "timing": {
            "description": "Determines when pipelines will be sent in accordance with triggers.",
            "properties": {
              "delay": {
                "description": "Determines the time that Airship should wait after a triggering event before processing the pipeline outcome.",
                "properties": {
                  "seconds": {
                    "description": "An integer value greater than 0 seconds representing the number of seconds to delay.",
                    "minimum": 1,
                    "type": "integer"
                  }
                },
                "required": [
                  "seconds"
                ],
                "title": "Delay Object",
                "type": "object"
              },
              "schedule": {
                "description": "The time(s) when the pipeline can issue pushes and behavior for events occurring outside scheduled time(s).",
                "properties": {
                  "dayparts": {
                    "description": "A list of daypart objects that, when combined, are non-intersecting and form a nonempty group of time ranges on a nonzero number of days of the week. Daypart is a term borrowed from\n    [television/radio marketing](https://en.wikipedia.org/wiki/Dayparting).",
                    "items": {
                      "properties": {
                        "allowed_times": {
                          "description": "A list of allowed time objects. Time intervals specified by allowed time objects may not overlap.",
                          "items": {
                            "properties": {
                              "end": {
                                "description": "Start time in ISO 8601 format \"hh:mm:ss\". Optional, unless start is specified.",
                                "format": "time",
                                "type": "string"
                              },
                              "preferred": {
                                "description": "Optional, preferred time in ISO 8601 format \"hh:mm:ss\" to process an outcome. Must be between the start and end time. This time is used when an outcome is triggered or delayed until a disallowed time. If the subsequent allowed time object contains a preferred time, the outcome will be scheduled for that time instead of the next possible time.",
                                "format": "time",
                                "type": "string"
                              },
                              "start": {
                                "description": "Start time in ISO 8601 format \"hh:mm:ss\". Optional, unless end is specified.",
                                "format": "time",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "title": "Allowed Times",
                          "type": "array"
                        },
                        "days_of_week": {
                          "description": "A list of days of the week that the `allowed_times` field is applicable for.",
                          "example": [
                            "monday",
                            "tuesday",
                            "wednesday",
                            "thursday",
                            "friday",
                            "saturday",
                            "sunday"
                          ],
                          "items": {
                            "description": "Valid values in the list are `monday`, `tuesday`, `wednesday`, `thursday`, `friday`, `saturday` and `sunday`.",
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "miss_behavior": {
                    "description": "Behavior of the pipeline when a triggering event occurs outside the range of `daypart` objects and `allowed_times`. You can specify `cancel` (do not process the outcome) or `wait` (delay the outcome until the preferred time of the next allowed_times window or the beginning of that window). Defaults to `wait` if unspecified.",
                    "enum": [
                      "wait",
                      "cancel"
                    ],
                    "type": "string"
                  },
                  "type": {
                    "description": "The mode in which to interpret the times in this schedule. Default is `local`.",
                    "enum": [
                      "local",
                      "utc"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "dayparts"
                ],
                "title": "Timing Schedule Object",
                "type": "object"
              }
            },
            "type": "object"
          },
          "url": {
            "description": "Read-only string. The canonical identify of the pipeline. This is a read-only field present on responses from the API, but will be ignored if it is present on requests.",
            "format": "URL",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "enabled",
          "outcome"
        ],
        "title": "Pipeline Object",
        "type": "object",
        "x-schema-tag": "Pipeline Objects"
      },
      "pointObject": {
        "description": "A Point object is a simple JSON object corresponding to a point on the globe, consisting of only two keys: latitude and longitude.",
        "properties": {
          "latitude": {
            "description": "Decimal with maximum 6 digits of decimal precision in the range [-90,90].",
            "format": "float",
            "type": "number"
          },
          "longitude": {
            "description": "Decimal with maximum 6 digits of decimal precision in the range of [0, 180)",
            "format": "float",
            "type": "number"
          }
        },
        "required": [
          "latitude",
          "longitude"
        ],
        "title": "Point Object",
        "type": "object",
        "x-schema-tag": "Region Data Formats"
      },
      "pushObject": {
        "description": "A push object describes everything about a push notification, including the audience and push payload. A push object is composed of up to seven attributes.",
        "properties": {
          "audience": {
            "$ref": "#/components/schemas/audienceSelector"
          },
          "campaigns": {
            "$ref": "#/components/schemas/campaignsObject"
          },
          "device_types": {
            "description": "An array containing one or more strings identifying targeted platforms. Accepted platforms are\n    `ios`, `android`, `amazon`, `wns`, `web`, `sms`, `email`, and `open::<open_platform_name>` (using the `open_platform_name` value of your open channel).",
            "items": {
              "enum": [
                "android",
                "amazon",
                "ios",
                "web",
                "wns",
                "sms",
                "email",
                "open::open_platform_name"
              ],
              "type": "string"
            },
            "minItems": 1,
            "title": "Device Types Selector",
            "type": "array"
          },
          "feed_references": {
            "$ref": "#/components/schemas/feedReferences"
          },
          "global_attributes": {
            "description": "The global attributes object may contain an arbitrary set of keys and values, including arrays and nested objects, which will be added to the global attributes rendering namespace for this push. Top-level keys must start with a letter and cannot start with the reserved sequence ``ua_``. If the global attributes object is nonempty, it implies the ``personalization: true`` option.",
            "title": "Global Attributes",
            "type": "object"
          },
          "in_app": {
            "$ref": "#/components/schemas/inAppObject"
          },
          "localizations": {
            "description": "An array of localizations, available for your Android, iOS, Amazon, and Web audiences only.",
            "items": {
              "$ref": "#/components/schemas/localization"
            },
            "type": "array"
          },
          "message": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/messageObject"
              },
              {
                "$ref": "#/components/schemas/messageObjectWithTemplate"
              }
            ]
          },
          "notification": {
            "$ref": "#/components/schemas/notificationObject"
          },
          "options": {
            "$ref": "#/components/schemas/pushOptions"
          },
          "snippet_references": {
            "$ref": "#/components/schemas/snippetReferences"
          }
        },
        "required": [
          "audience",
          "device_types"
        ],
        "title": "Push Object",
        "type": "object"
      },
      "pushOptions": {
        "description": "A JSON dictionary for specifying non-payload options related to the delivery of the push.",
        "properties": {
          "bypass_frequency_limits": {
            "default": false,
            "description": "If true, the push ignores any [message limits](../../guides/messaging/user-guide/project/config/message-limits/) that would otherwise apply to your message.\n",
            "type": "boolean"
          },
          "expiry": {
            "description": "Delivery expiration, as either absolute ISO UTC timestamp, or number of seconds from now.",
            "oneOf": [
              {
                "description": "Number of seconds from now. When the delivery platform supports it, a value of zero (0) indicates that the message should be delivered immediately and never stored for later attempts.",
                "example": 3600,
                "type": "integer"
              },
              {
                "description": "An absolute ISO UTC timestamp.",
                "example": "2018-03-01T12:00:00",
                "type": "string"
              }
            ],
            "title": "Expiry",
            "type": "object"
          },
          "no_throttle": {
            "default": false,
            "description": "If true, the push will ignore global throttling rates that have been configured for the application, resulting in delivery as quickly as possible.",
            "type": "boolean"
          },
          "personalization": {
            "default": false,
            "description": "If true, enables Handlebars-style template syntax for eligible fields in a [notification](#schemas-notificationobject) or [message center](#schemas-messageobject) objects. You can do this to enable handlebars for all available fields without using individual `template` objects for different platform overrides.\n\nThis setting is implicitly true whenever your payload includes a [platform override](#schema-tag-platform-overrides) with a `template` object.\n",
            "type": "boolean"
          },
          "redact_payload": {
            "default": false,
            "description": "If true, the push payload will not appear in Airship's logs. You cannot use this option with Message Center, A/B Tests, Automation, or Scheduled pushes, which all require the payload to be stored separately by design.",
            "type": "boolean"
          }
        },
        "title": "Push Options",
        "type": "object",
        "x-inline-component": false
      },
      "pushTemplatePayload": {
        "description": "A push template payload defines a push by overriding the variables defined in a specific Template Object. Specifically, a push template object specifies push audience and device types, along with substitutions for the variables defined in a template.",
        "properties": {
          "audience": {
            "$ref": "#/components/schemas/audienceSelector",
            "description": "The audience for the template."
          },
          "campaigns": {
            "$ref": "#/components/schemas/campaignsObject"
          },
          "device_types": {
            "description": "An array containing one or more strings identifying targeted platforms. Accepted platforms are\n    `ios`, `android`, `amazon`, `wns`, `web`, `sms`, `email`, and `open::<open_platform_name>` (using the `open_platform_name` value of your open channel).",
            "items": {
              "enum": [
                "android",
                "amazon",
                "ios",
                "web",
                "wns",
                "sms",
                "email",
                "open::open_platform_name"
              ],
              "type": "string"
            },
            "minItems": 1,
            "title": "Device Types Selector",
            "type": "array"
          },
          "merge_data": {
            "description": "A template selector describing the template ID and variable substitutions to use with it.",
            "properties": {
              "substitutions": {
                "description": "An object containing overrides for your template's variables. The key-value pairs in this object are the value of the `key` items defined in your template, and the values you want to substitute for the `default_value` of those keys.",
                "type": "object"
              },
              "template_id": {
                "description": "Specifies the template to override; corresponds to the `id` in `/templates` responses.",
                "example": "ef34a8d9-0ad7-491c-86b0-aea74da15161",
                "format": "uuid",
                "type": "string"
              }
            },
            "required": [
              "template_id"
            ],
            "type": "object"
          }
        },
        "required": [
          "audience",
          "device_types",
          "merge_data"
        ],
        "title": "Push Template Payload",
        "type": "object",
        "x-schema-tag": "Personalization Template Objects"
      },
      "regionObject": {
        "description": "A Region object describes a geographical boundary or set of hardware identifiers and associated attributes that correspond to a physical location of relevance to the application or application owner.",
        "properties": {
          "attributes": {
            "description": "An attribute object is an object containing the customer-provided region attributes associated with a particular region.",
            "type": "object"
          },
          "beacons": {
            "description": "An array of beacon objects.",
            "items": {
              "properties": {
                "id": {
                  "description": "The hardware ID of the beacon.",
                  "example": "2034071230471204710",
                  "type": "string"
                },
                "name": {
                  "description": "The user-supplied name of the beacon.",
                  "example": "Exhibit A",
                  "type": "string"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "created_at": {
            "description": "ISO timestamp of creation time for the region.",
            "example": "2018-03-01T12:00:00",
            "type": "string"
          },
          "geofence": {
            "$ref": "#/components/schemas/geofenceObject"
          },
          "name": {
            "description": "A human-readable name for the region.",
            "example": "My Favorite Place",
            "type": "string"
          },
          "region_id": {
            "description": "A string containing a UUID that is the canonical identifier for this object, elsewhere referred to as \"region_id\".",
            "example": "abe5deb3-00d0-446e-8c5d-94b6421a01e0",
            "format": "uuid",
            "type": "string"
          },
          "source_info": {
            "description": "A Source Info object is a simple JSON object providing the details about the origin of the region data.",
            "properties": {
              "region_id": {
                "description": "Internal identifier used by source for this region.",
                "example": "4BPSFLKJSDFLKJSDFLKJ",
                "type": "string"
              },
              "source": {
                "description": "Name of the company who originated the region data.",
                "example": "GIMBAL",
                "type": "string"
              },
              "vendor_href": {
                "description": "URI indicating the location of the original source of this region data.",
                "example": "https://manager.gimbal.com/api/2/places/4BPSFLKJSDFLKJSDFLKJ",
                "type": "string"
              }
            },
            "required": [
              "source",
              "region_id"
            ],
            "type": "object"
          },
          "updated_at": {
            "description": "ISO timestamp of last updated time for the region.",
            "example": "2018-03-01T12:00:00",
            "type": "string"
          }
        },
        "required": [
          "region_id",
          "created_at",
          "updated_at"
        ],
        "title": "Region Object",
        "type": "object",
        "x-schema-tag": "Region Data Formats"
      },
      "relativeWindow": {
        "description": "A relative window of time is indicated by setting the `recent` attribute. The value is an object with a single integer-valued attribute set.",
        "properties": {
          "recent": {
            "description": "The `hours` valid range is `1-48` (Up to the last two days). The `days` valid range is `1-60` (Up to the last 60 days). The `weeks` valid range is `1-10` (Up to the last 10 weeks). The `months` valid range is `1-48` (Up to the last 4 years). The `years` valid range is `1-10` (Up to the last 10 years).",
            "type": "integer"
          }
        },
        "title": "Relative Window of Time",
        "type": "object",
        "x-schema-tag": "Automation Timing"
      },
      "scheduleObject": {
        "description": "A schedule object consists of a schedule, i.e., a future delivery time, an optional name, and a push object.",
        "properties": {
          "localization_ids": {
            "description": "An array of identifiers used for reporting. Each ID represents a localized message (push object with `localizations` array).",
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "description": "An optional string.",
            "type": "string"
          },
          "push": {
            "$ref": "#/components/schemas/pushObject"
          },
          "push_ids": {
            "description": "An array of the push IDs associated with the schedule. The `push_ids` key is set by the server, and so is present in responses but not in creation requests sent from the client. Requests that contain this key will return a `HTTP 400 Bad Request`.",
            "example": [
              "00256e0b-b02f-4f12-a77f-4c3d57078330",
              "f59970d3-3d42-4584-907e-f5c57f5d46a1"
            ],
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 1,
            "readOnly": true,
            "type": "array"
          },
          "schedule": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/scheduleSpec"
              },
              {
                "properties": {
                  "recurring": {
                    "properties": {
                      "cadence": {
                        "oneOf": [
                          {
                            "properties": {
                              "count": {
                                "description": "The frequency of messaging corresponding to the `type`. For example, a `count` of 2 results in a message every 2 hours, days, weeks, months, etc based on the `type` value.",
                                "minimum": 1,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The unit of measurement for the cadence.",
                                "enum": [
                                  "hourly",
                                  "daily",
                                  "monthly",
                                  "yearly"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "count"
                            ],
                            "title": "Standard Cadence",
                            "type": "object"
                          },
                          {
                            "properties": {
                              "count": {
                                "description": "The frequency of messaging on the weekly cadence. For example, a `count` of 2 results in a message every 2 weeks.",
                                "minimum": 1,
                                "type": "integer"
                              },
                              "days_of_week": {
                                "description": "The days of the week on which Airship can send your message.",
                                "enum": [
                                  "monday",
                                  "tuesday",
                                  "wednesday",
                                  "thursday",
                                  "friday",
                                  "saturday",
                                  "sunday"
                                ],
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "weekly"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "count"
                            ],
                            "title": "Weekly Cadence",
                            "type": "object"
                          }
                        ]
                      },
                      "end_time": {
                        "description": "The date-time when the schedule will end and stop sending messages.",
                        "type": "string"
                      },
                      "exclusions": {
                        "description": "Date-time ranges when messages are not sent.",
                        "items": {
                          "oneOf": [
                            {
                              "properties": {
                                "hour_range": {
                                  "description": "The hourly interval exclude from your cadence. Use 24-hour time separated by a dash, example: `\"12-14\"`. Times are inclusive.\n",
                                  "example": "12-14",
                                  "type": "string"
                                }
                              },
                              "title": "Hour range",
                              "type": "object"
                            },
                            {
                              "properties": {
                                "date_range": {
                                  "description": "The ISO 8601 date-time ranges to exclude from your cadence. Separate the start and end date-times with a forward slash (`/`). Date-times are inclusive.\n",
                                  "type": "string"
                                }
                              },
                              "title": "Date range",
                              "type": "object"
                            },
                            {
                              "properties": {
                                "days_of_week": {
                                  "description": "The days of the week that you want to exclude from your schedule cadence. Days are inclusive. Airship considers `monday` the beginning of a week.",
                                  "items": {
                                    "enum": [
                                      "monday",
                                      "tuesday",
                                      "wednesday",
                                      "thursday",
                                      "friday",
                                      "saturday",
                                      "sunday"
                                    ],
                                    "type": "string"
                                  },
                                  "minItems": 1,
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        },
                        "minItems": 1,
                        "type": "array"
                      },
                      "paused": {
                        "description": "If `true`, the schedule is paused, and will not result in sends at the regularly scheduled `cadence`.",
                        "readOnly": true,
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "cadence"
                    ],
                    "type": "object"
                  }
                },
                "title": "Recurring schedule",
                "type": "object"
              }
            ]
          },
          "url": {
            "description": "The `url` key is set by the server, and so is present in responses but not in creation requests sent from the client.",
            "format": "url",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "schedule",
          "push"
        ],
        "title": "Schedule Object",
        "type": "object"
      },
      "scheduleSpec": {
        "description": "The delivery time specified in UTC.",
        "oneOf": [
          {
            "description": "Scheduled push to be delivered globally at the same moment.",
            "properties": {
              "scheduled_time": {
                "description": "An absolute ISO UTC timestamp.",
                "type": "string"
              }
            },
            "title": "Scheduled Time",
            "type": "object"
          },
          {
            "description": "Deliver a message at each device's local time. This ensures that users receive your message at the same time of day across all time zones in your app's audience. This feature only works for channels that have a `timezone` tag (or named users containing at least one channel with a `timezone` tag). Devices in the audience that do not have a `timezone` tag will not receive your message.\n",
            "properties": {
              "local_scheduled_time": {
                "description": "Alternative to `scheduled_time`. The scheduled device local time to send the notification.\n",
                "example": "2018-03-01T12:00:00",
                "type": "string"
              }
            },
            "title": "Local Scheduled Time",
            "type": "object",
            "x-note": "To use Local Time Delivery for App audiences, you must have Analytic Events turned on and integrated into your application. See [iOS: Analytics and Reporting](../../platform/ios/#ios-reports) and Android: [Analytics and Reporting](../../platform/android/#android-analytics-reporting) for more information.\nA message delivered to local time includes a Delivery by Time Zone section in its message report. See: [Message Reports: Delivery by Time Zone.](../../guides/engage-message-reports/#delivery-by-time-zone)\n"
          },
          {
            "description": "Alternative to `scheduled_time`. Uses predictive analytics to send the notification at the optimal send time for each member of your audience. `best_time` is represented as \"Optimize\" in the dashboard and is an add-on feature in Airship's Predictive suite.\n",
            "properties": {
              "best_time": {
                "description": "Schedules the notification for the optimal send time.\n",
                "properties": {
                  "send_date": {
                    "description": "The date set by the user for when the push should go out, localized to the timezone for a given channel. Best-time pushes require activation of our predictive analytics toolset.\n\n",
                    "format": "date",
                    "type": "string"
                  }
                },
                "title": "Best Time Object",
                "type": "object"
              }
            },
            "title": "Best Time",
            "type": "object"
          }
        ],
        "title": "Schedule Specification",
        "type": "object"
      },
      "scopeChannelItem": {
        "description": "The channel types that these operations apply to. The `app` scope includes `iOS`, `Android` and `Amazon` channels.",
        "enum": [
          "app",
          "web",
          "email",
          "sms"
        ],
        "title": "Channel Type",
        "type": "string"
      },
      "scopedBatchItem": {
        "description": "Contains `scope` and `subscription_lists`.",
        "properties": {
          "scope": {
            "items": {
              "$ref": "#/components/schemas/scopeChannelItem"
            },
            "type": "array"
          },
          "subscription_lists": {
            "$ref": "#/components/schemas/namedUserSubscriptionListsObject"
          }
        },
        "required": [
          "scope",
          "subscription_lists"
        ],
        "title": "Scoped Batch Item",
        "type": "object"
      },
      "scopes": {
        "enum": [
          "app",
          "web",
          "email",
          "sms"
        ],
        "title": "Scopes",
        "type": "string"
      },
      "sms": {
        "description": "The payload for a create and send operation to SMS channels. When registering and sending to SMS channels, `device_types` must be set to `sms`.",
        "properties": {
          "audience": {
            "description": "The SMS information and opt in parameters for the channels you want to register and send to.",
            "properties": {
              "create_and_send": {
                "description": "Each object in the array represents channel you want to register and push to. Channel registration fields are prefixed with `ua_` and have the same requirements as the [SMS channel registration endpoint](/api/channels/sms/post).\n\n\nAll other fields represent variables if `notification` specifies a `template`.",
                "items": {
                  "additionalProperties": {
                    "description": "Like substitutions in the [template merge data object](#schemas-pushtemplatepayload), you can provide additional keys and values representing variables in your notification `template`. Variable keys can be any type of value, including arrays, objects, etc. Your variable keys **must not** be prefixed with `ua_`. See the [Push Template Payload](#schemas-pushtemplatepayload) for more information about template substitutions.\n",
                    "title": "Substitutions"
                  },
                  "properties": {
                    "ua_msisdn": {
                      "description": "The phone number of a mobile device. Entries with `ua_msisdn` values that are not reachable by `ua_sender` values will be **silenty dropped.**",
                      "type": "string"
                    },
                    "ua_opted_in": {
                      "description": "The date/time when the user (msisdn) opted in to messages from the sender. If this date-time is newer than an `opted_out` value on the channel, the channel will receive your message, but Airship will not update the channel's opt-in status or value.\n",
                      "format": "datetime",
                      "type": "string"
                    },
                    "ua_sender": {
                      "description": "The long or short code your SMS messages are sent from. You can prefix short codes with an ISO 3166 country code — `US:12345`.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "ua_msisdn",
                    "ua_sender",
                    "ua_opted_in"
                  ],
                  "type": "object"
                },
                "maxItems": 1000,
                "type": "array"
              }
            },
            "required": [
              "create_and_send"
            ],
            "title": "SMS Audience for Create and Send Payloads",
            "type": "object"
          },
          "campaigns": {
            "$ref": "#/components/schemas/campaignsObject"
          },
          "device_types": {
            "description": "The platform you want to register channels for and send notifications to.",
            "items": {
              "enum": [
                "email",
                "mms",
                "sms",
                "open::<open_platform_name>"
              ],
              "maxItems": 1,
              "type": "string"
            },
            "type": "array"
          },
          "notification": {
            "description": "An `alert` notification or a platform override matching the value in `device types`. A notification with a platform override that does not match your `device_types` will result in a 400 error.",
            "properties": {
              "sms": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/smsOverrideObject"
                  },
                  {
                    "$ref": "#/components/schemas/smsOverrideWithTemplate"
                  }
                ]
              }
            },
            "type": "object"
          }
        },
        "required": [
          "audience",
          "device_types",
          "notification"
        ],
        "title": "Create and Send to SMS Channels",
        "type": "object",
        "x-schema-tag": "Create and Send"
      },
      "smsOverrideObject": {
        "description": "Provides override options when `sms` is one of the `device_types` specified in the payload.",
        "properties": {
          "alert": {
            "description": "Overrides the alert provided at the top level of the notification for SMS channels. The maximum length of an SMS alert is 1600 characters.",
            "maxLength": 1600,
            "type": "string"
          },
          "expiry": {
            "description": "The time after which Airship will stop trying to deliver an SMS message. The maximum expiry period is 48 hours; this is also the default expiry period.\n",
            "oneOf": [
              {
                "description": "An absolute ISO UTC timestamp. The timestamp must be within the next 48 hours.",
                "example": "2018-03-01T12:00:00",
                "type": "string"
              },
              {
                "description": "Number of seconds from now.",
                "maximum": 172800,
                "type": "integer"
              }
            ]
          },
          "shorten_links": {
            "default": false,
            "description": "If true, Airship will shorten http/https links (space delimited) in the message text fields, producing unique, 25 character URLs for each member of your audience. Airship produces `short_link_click` events in the Real-Time Data Stream for each link that a user engages with.\n\nWhen this setting is enabled, you can add or remove tags from users who click your links by adding query strings to your URLs. You can serialize tag operations with `&`:\n* `?ua-tag-add=tag_group:tag&another_group:tag2` — adds a tag in `tag_group` to the `channel_id`.\n* `?ua-tag-remove=tag_group:tag&another_group:tag2` — removes a tag in `tag group` from the `channel_id`.\n",
            "type": "boolean"
          }
        },
        "title": "SMS Platform Overrides",
        "type": "object",
        "x-schema-tag": "Platform Overrides"
      },
      "smsOverrideWithTemplate": {
        "description": "Notification fields specific to SMS messages with an inline template for use in a `/api/create-and-send` payload. Using a template enables you to provide and populate variables in your notification. You can also add conditional statements based on those variables, determining message text that to send to each member of your audience. Conditionals begin with `{{#operator}}` and end with `{{/operator}}`. For more information, see [Dynamic Content](/guides/messaging/user-guide/personalization/dynamic-content).\n",
        "properties": {
          "expiry": {
            "description": "Delivery expiration, as either absolute ISO UTC timestamp, or number of seconds from now.",
            "oneOf": [
              {
                "description": "Number of seconds from now. When the delivery platform supports it, a value of zero (0) indicates that the message should be delivered immediately and never stored for later attempts.",
                "example": 3600,
                "type": "integer"
              },
              {
                "description": "An absolute ISO UTC timestamp.",
                "example": "2018-03-01T12:00:00",
                "type": "string"
              }
            ],
            "title": "Expiry",
            "type": "object"
          },
          "template": {
            "description": "Specify a `template_id` created in the Airship UI or use an inline template.",
            "oneOf": [
              {
                "properties": {
                  "template_id": {
                    "description": "The `ID` of a template that you created in the Airship UI. You can find template IDs in *Messages » Content » Templates* in the dashboard.",
                    "format": "uuid",
                    "type": "string"
                  }
                },
                "required": [
                  "template_id"
                ],
                "type": "object"
              },
              {
                "properties": {
                  "fields": {
                    "description": "The template you want to construct for the message. Provide variables in the template in double curly brackets — `{{variable_name}}`. The variable name must be a case-sensitive match of a key in your `create-and-send` objects to be replaced as a part of the template.",
                    "properties": {
                      "alert": {
                        "description": "The notification you want to send to an SMS audience.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            ]
          }
        },
        "required": [
          "template"
        ],
        "title": "SMS Notification with Template",
        "type": "object",
        "x-schema-tag": "Platform Overrides with Templates"
      },
      "snippetReferences": {
        "description": "An object used to indicate that a set of snippets should be loaded for use in message content. Use the following syntax in your payload: `{{> your_snippet_name }}` to reference the snippet content within a notification or rich message.\n\nSee our [Snippets Tutorial](../../guides/messaging/user-guide/personalization/snippets) to see how to create a snippet in the Airship dashboard.\n",
        "properties": {
          "snippets": {
            "description": "An array of snippets that you want to use to personalize your message.",
            "items": {
              "properties": {
                "name": {
                  "description": "The name of the snippet that you set up in the Airship dashboard.",
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "type": "object"
            },
            "type": "array"
          }
        },
        "title": "Snippet References Object",
        "type": "object"
      },
      "subscriptionListObject": {
        "properties": {
          "action": {
            "enum": [
              "subscribe",
              "unsubscribe"
            ],
            "example": "subscribe",
            "type": "string"
          },
          "list_id": {
            "description": "The subscription list identifier",
            "example": "90s_rap_videos",
            "maxLength": 32,
            "type": "string"
          },
          "timestamp": {
            "description": "An ISO 8601 timestamp when the attribute changed. Server time is used when not present.\n",
            "type": "string"
          }
        },
        "required": [
          "action",
          "list_id"
        ],
        "title": "Subscription List Object"
      },
      "subscriptionListResultObject": {
        "description": "Defines the subscription list result object.",
        "properties": {
          "description": {
            "description": "Description of the subscription list."
          },
          "list_id": {
            "description": "A list ID that contains only alphanumberic characters, underscores, or hypens.",
            "example": "example_listId-2",
            "type": "string"
          },
          "name": {
            "description": "Human readable name.",
            "example": "A nice name readable name 1",
            "type": "string"
          },
          "scopes": {
            "description": "An array of scopes applicable to the subscription list. Valid scopes are `app`, `web`, `email` and `sms`.",
            "items": {
              "$ref": "#/components/schemas/scopes"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "list_id",
          "scopes"
        ],
        "title": "Subscription List Result Object",
        "type": "object"
      },
      "tagGroupObject": {
        "additionalProperties": {
          "description": "An array of tags.",
          "example": [
            "Federer fan",
            "Messi fan"
          ],
          "items": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string"
          },
          "maxItems": 100,
          "minItems": 0,
          "title": "Tag Group Name",
          "type": "array"
        },
        "description": "Tags belong to tag groups. Tag groups appear within the `tags` object for a named user or the `tag_groups` object for a channel. See [Tags](../../guides/messaging/user-guide/audience/segmentation/tags/) and [Device Properties](../../reference/device-property-tags/) for more information about tags and tag groups.\n\n``ua_`` is a reserved prefix for Airship-specific tag groups.\n\nA Tag Group has two parts: a \"name\" string of 1-128 characters, and an array of tags, containing 0-100 tags. Each tag in the array is also a string consisting of 1-128 characters.",
        "example": [
          {
            "sports fan": [
              "Federer fan",
              "Messi fan"
            ]
          },
          {
            "loyalty_program": [
              "silver-member",
              "ten-plus-years"
            ]
          },
          {
            "ua_locale_country": [
              "US"
            ]
          },
          {
            "ua_locale_language": [
              "en"
            ]
          }
        ],
        "title": "Tag Group Object",
        "type": "object"
      },
      "templateObject": {
        "description": "A template object is a skeleton for a push. This is the object used for template creation, and returned by the template listing and lookup endpoints.",
        "properties": {
          "created_at": {
            "description": "The date and time when this template was created.",
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "description": "The description for the template.",
            "type": "string"
          },
          "id": {
            "description": "The unique ID assigned to this template. Used to retrieve or use the template in other endpoints.",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "last_used": {
            "description": "The time when this template's definition was last used. The timestamp will be an ISO formatted timestamp given in UTC. This attribute cannot template-based specified when the template is created and will only be present when template objects are provided by the template retrieval and template listing endpoints.",
            "readOnly": true,
            "type": "string"
          },
          "modified_at": {
            "description": "The date and time when this template was last modified.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "The name of the template.",
            "type": "string"
          },
          "push": {
            "$ref": "#/components/schemas/templatePushObject"
          },
          "variables": {
            "description": "An array of Variable Specifications. Variables can be customized when pushing based on the template.",
            "items": {
              "$ref": "#/components/schemas/templateVariableObject"
            },
            "type": "array"
          }
        },
        "required": [
          "name",
          "variables"
        ],
        "title": "Template Object",
        "type": "object",
        "x-schema-tag": "Personalization Template Objects"
      },
      "templatePushObject": {
        "description": "A partial push object describing everything about a push notification, except for the `audience` and `device_types` (which are defined in the pushTemplatePayload object).",
        "properties": {
          "campaigns": {
            "$ref": "#/components/schemas/campaignsObject"
          },
          "in_app": {
            "$ref": "#/components/schemas/inAppObject"
          },
          "notification": {
            "$ref": "#/components/schemas/notificationObject"
          },
          "options": {
            "description": "A JSON dictionary for specifying non-payload options related to the delivery of the push.",
            "properties": {
              "expiry": {
                "description": "Delivery expiration, as either absolute ISO UTC timestamp, or number of seconds from now.",
                "oneOf": [
                  {
                    "description": "Number of seconds from now. When the delivery platform supports it, a value of zero (0) indicates that the message should be delivered immediately and never stored for later attempts.",
                    "example": 3600,
                    "type": "integer"
                  },
                  {
                    "description": "An absolute ISO UTC timestamp.",
                    "example": "2018-03-01T12:00:00",
                    "type": "string"
                  }
                ],
                "title": "Expiry",
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "title": "Template Push Object",
        "type": "object",
        "x-schema-tag": "Personalization Template Objects"
      },
      "templateVariableObject": {
        "description": "A template variable object describes the pieces of your template to override when creating template-based pushes. These are the fields you want to customize when you send a push based on the template.",
        "properties": {
          "default_value": {
            "description": "A default value for the variable. If the key for this variable is not specified in a Template Selector (`substitutions`) when issuing push notifications baed on this template, the push will use this value.",
            "type": "string"
          },
          "description": {
            "description": "A description of the variable.",
            "type": "string"
          },
          "key": {
            "description": "The key used to reference the variable inside the template push. (32 chars, starting and ending with alphanumeric characters, and consisting of alphanumeric characters and underscores).",
            "type": "string"
          },
          "name": {
            "description": "A friendly name for the variable.",
            "type": "string"
          }
        },
        "required": [
          "key"
        ],
        "title": "Template Variables",
        "type": "object",
        "x-schema-tag": "Personalization Template Objects"
      },
      "textAttribute": {
        "description": "An attribute object with a `TEXT` schema type. Evaluates for the inclusion or exclusion of a text (string) attribute on a channel.",
        "properties": {
          "attribute": {
            "description": "The key for the text attribute that you previously defined in the Airship UI, e.g., `\"item_purchased\"`.",
            "maxLength": 256,
            "minLength": 1,
            "type": "string"
          },
          "operator": {
            "description": "The operator used to evaluate the attribute expression.",
            "enum": [
              "equals",
              "contains",
              "less",
              "greater",
              "is_empty"
            ],
            "type": "string"
          },
          "value": {
            "description": "The string you want to match when evaluating the attribute expression, e.g., `\"jeans\"`.",
            "type": "string"
          }
        },
        "required": [
          "attribute",
          "operator",
          "value"
        ],
        "title": "Text Attribute Selector",
        "type": "object",
        "x-schema-tag": "Attributes"
      },
      "webOverrideObject": {
        "description": "The 'web' platform overrides determine message behaviors\nfor web notifications.\n\nSafari behaves differently from other browsers and supports only the `alert` and `title` overrides. It ignores all other `web` overrides.\n",
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actionsObject"
          },
          "alert": {
            "description": "Override the alert value provided at the top level, if any.",
            "type": "string"
          },
          "buttons": {
            "description": "Contains one or two buttons that perform actions for the web notification. If you do not specify `actions` for a button, the button closes the notification without performing an action.",
            "items": {
              "properties": {
                "actions": {
                  "$ref": "#/components/schemas/actionsObject"
                },
                "id": {
                  "description": "The \"action\" id on the service worker notification event that fires when your audience clicks the button.",
                  "type": "string"
                },
                "label": {
                  "description": "The button label.",
                  "type": "string"
                }
              },
              "required": [
                "id",
                "label"
              ],
              "type": "object"
            },
            "maxItems": 2,
            "minItems": 1,
            "type": "array"
          },
          "extra": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "A JSON dictionary of string-to-string key-value pairs. If you wish to pass structured data in an extra key, it must be JSON-encoded as a string.",
            "example": {
              "en": "English",
              "fr": "French"
            },
            "title": "Extra",
            "type": "object"
          },
          "image": {
            "description": "A JSON object that describes an image to be used with the web alert.",
            "properties": {
              "url": {
                "description": "The URL to be used for the image.",
                "type": "string"
              }
            },
            "required": [
              "url"
            ],
            "type": "object"
          },
          "require_interaction": {
            "description": "If true, a feature that requires a user to interact with the notification in order to remove it from their computer screen.",
            "type": "boolean"
          },
          "time_to_live": {
            "description": "Delivery expiration, as either absolute ISO UTC timestamp, or number of seconds from now.",
            "oneOf": [
              {
                "description": "Number of seconds from now. When the delivery platform supports it, a value of zero (0) indicates that the message should be delivered immediately and never stored for later attempts.",
                "example": 3600,
                "type": "integer"
              },
              {
                "description": "An absolute ISO UTC timestamp.",
                "example": "2018-03-01T12:00:00",
                "type": "string"
              }
            ],
            "title": "Expiry",
            "type": "object"
          },
          "title": {
            "description": "A string representing the title of the notification.",
            "type": "string"
          }
        },
        "title": "Web Override",
        "type": "object",
        "x-note": "Safari supports the `alert` and `title` overrides. It ignores all\nother `web` overrides.",
        "x-schema-tag": "Platform Overrides"
      },
      "webOverrideWithTemplate": {
        "description": "Use a `template` with a Web-specific message. You can reference a template by ID, or use `{{handlebars}}` directly in your message.\n\nSafari behaves differently from other browsers and supports only the `alert` and `title` overrides. It ignores all other `web` overrides.\n",
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actionsObject"
          },
          "buttons": {
            "description": "Contains one or two buttons that perform actions for the web notification. If you do not specify `actions` for a button, the button closes the notification without performing an action.",
            "items": {
              "properties": {
                "actions": {
                  "$ref": "#/components/schemas/actionsObject"
                },
                "id": {
                  "description": "The \"action\" id on the service worker notification event that fires when your audience clicks the button.",
                  "type": "string"
                },
                "label": {
                  "description": "The button label.",
                  "type": "string"
                }
              },
              "required": [
                "id",
                "label"
              ],
              "type": "object"
            },
            "maxItems": 2,
            "minItems": 1,
            "type": "array"
          },
          "extra": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "A JSON dictionary of string-to-string key-value pairs. If you wish to pass structured data in an extra key, it must be JSON-encoded as a string.",
            "example": {
              "en": "English",
              "fr": "French"
            },
            "title": "Extra",
            "type": "object"
          },
          "image": {
            "description": "A JSON object that describes an image to be used with the web alert.",
            "properties": {
              "url": {
                "description": "The URL to be used for the image.",
                "type": "string"
              }
            },
            "required": [
              "url"
            ],
            "type": "object"
          },
          "require_interaction": {
            "description": "If true, a feature that requires a user to interact with the notification in order to remove it from their computer screen.",
            "type": "boolean"
          },
          "template": {
            "oneOf": [
              {
                "properties": {
                  "template_id": {
                    "description": "The `ID` of a template that you created in the Airship UI. You can find template IDs in *Messages » Content » Templates* in the dashboard.",
                    "format": "uuid",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              {
                "properties": {
                  "fields": {
                    "description": "Items in the field object are personalizable with handlebars.",
                    "properties": {
                      "alert": {
                        "description": "Override the alert value provided at the top level, if any.",
                        "type": "string"
                      },
                      "icon": {
                        "description": "A JSON object that describes a icon to be used with the web alert.",
                        "properties": {
                          "url": {
                            "description": "The URL to be used for the icon.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "url"
                        ],
                        "type": "object"
                      },
                      "title": {
                        "description": "A string representing the title of the notification.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            ]
          },
          "time_to_live": {
            "description": "Delivery expiration, as either absolute ISO UTC timestamp, or number of seconds from now.",
            "oneOf": [
              {
                "description": "Number of seconds from now. When the delivery platform supports it, a value of zero (0) indicates that the message should be delivered immediately and never stored for later attempts.",
                "example": 3600,
                "type": "integer"
              },
              {
                "description": "An absolute ISO UTC timestamp.",
                "example": "2018-03-01T12:00:00",
                "type": "string"
              }
            ],
            "title": "Expiry",
            "type": "object"
          }
        },
        "title": "Web Override with Template",
        "type": "object",
        "x-schema-tag": "Platform Overrides with Templates"
      },
      "whereObject": {
        "description": "`where` is an object that filters on the existence of prior user activity, specified by event properties that you provide.\n",
        "properties": {
          "compare_as": {
            "description": "Selects the property type for comparison.",
            "enum": [
              "text",
              "number",
              "date",
              "boolean"
            ],
            "type": "string"
          },
          "operator": {
            "description": "The operator in question",
            "enum": [
              "greater",
              "less",
              "equals",
              "greater_eq",
              "less_eq",
              "contains",
              "present",
              "range",
              "before",
              "after"
            ],
            "type": "string"
          },
          "precision": {
            "description": "Used only for date values.",
            "enum": [
              "minutes",
              "days",
              "months",
              "years"
            ],
            "type": "string"
          },
          "property": {
            "description": "The custom event property on which to filter for inclusion in the audience.  See [Event Segmentation Properties](../../guides/messaging/user-guide/data/events/#events-reference) for properties reference.\n",
            "type": "string"
          },
          "relative_to": {
            "description": "Used only for date values.",
            "enum": [
              "future",
              "past"
            ],
            "type": "string"
          },
          "value": {
            "description": "The value of the property you are filtering for in the `where` object. Use `compare_as` to select the type for comparison.\n",
            "oneOf": [
              {
                "description": "A string value or a date in ISO-8601 format, e.g., `2020-08-10T17:28:34+0000`",
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "boolean"
              }
            ]
          }
        },
        "required": [
          "property",
          "operator",
          "value"
        ],
        "title": "Where Object",
        "type": "object",
        "x-inline-component": false,
        "x-schema-tag": "Event Segmentation"
      },
      "wnsOverrideObject": {
        "description": "The platform override section for Windows. This `wns` object must have exactly one of the following attributes.",
        "properties": {
          "alert": {
            "description": "A simple string alert which will be rendered as a toast notification with the simplest template available.",
            "type": "string"
          },
          "badge": {
            "description": "An update to the badge on the application’s tile.",
            "properties": {
              "glyph": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "tile": {
            "description": "A persistent application tile content update.",
            "properties": {
              "binding": {
                "items": {
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "toast": {
            "description": "A toast notification, which displays a transient alert on the device.",
            "properties": {
              "duration": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "title": "Windows Override",
        "type": "object",
        "x-schema-tag": "Platform Overrides"
      }
    },
    "securitySchemes": {
      "basicAppAuth": {
        "description": "Authorization header containing the word `Basic` followed by a space and a Base64-encoded string generated from your _app key_ and _app secret_ in  `appKey:appSecret` format, e.g., `Basic YXBwX2tleTphcHBfc2VjcmV0`.",
        "scheme": "basic",
        "type": "http",
        "x-display-name": "Basic App Auth"
      },
      "basicAuth": {
        "description": "Authorization header containing the word `Basic` followed by a space and a Base64-encoded string generated from your _app key_ and _master secret_ in  `appKey:masterSecret` format, e.g., `Basic YXBwX2tleTptYXN0ZXJfc2VjcmV0`.",
        "scheme": "basic",
        "type": "http",
        "x-display-name": "Basic Auth"
      },
      "bearerAuth": {
        "description": "A bearer token generated from the Airship dashboard. You can generate tokens for different roles; if your role does not grant you access to a feature, the endpoint will respond with a 401. Tokens can be revoked at will.",
        "scheme": "bearer",
        "type": "http",
        "x-display-name": "Bearer Auth"
      }
    }
  },
  "title": "Days of the week",





  "info": {
    "description": "\nAirship provides a number of REST API endpoints collectively known as the Airship API\nVersion 3, in support of our messaging product lines and related features. Version 3 is the\ncurrent and only supported version of the Airship API.\n\n### API Request Format\n\nAll API requests are HTTP requests. For all requests with a body, the body may be in JSON\nformat or other formats like CSV as specified for the endpoint. The proper Content-Type for\nJSON is `application/json` and the proper content type for CSV is `text/csv`.\n\n### Version Syntax\n\nYou must specify the version of the API you are using with the Accept HTTP header.\nIf you do not specify an API version in the Accept header, a 406: is returned.\n\nThe content type used is a vendor-specific media type\n([see RFC 4288](https://tools.ietf.org/html/rfc4288)), and must be specified as follows: `application/vnd.urbanairship+json; version=3`.\n\n### Transport Layer Security\n\nAs of October 6, 2020, Airship supports only TLS (Transport Layer Security) version 1.2 and 1.3 in our APIs, in accordance with [PCI Security Standards Council](https://www.pcisecuritystandards.org/) recommendations.\n\nIf your API integration utilizes TLS 1.0 or 1.1, [contact our Support team](https://support.airship.com) for assistance migrating to TLS 1.2 or 1.3.\n\n### Delivery Speed Options\n\nThe Airship push API is designed for extremely high throughput to ensure\ndelivery to your entire audience as fast as possible. Depending on the size and/or\ncomplexity of your audience and the urgency of the message, you may find that you need to either\nslow down or speed up the delivery. To that end, we offer the following add-on\nservices: _Boost_ and _Throttling_.\n\n_If you are interested in enabling push boost or throttling for your app, please contact support@urbanairship.com._\n\n#### Boost\n\n_Boost_ optimizes your segmented messages through parallel processing. Consider adding\nBoost if your notifications are extremely time-sensitive. Boost is a paid add-on. Contact\nyour Account Manager for details.\n\n#### Throttling\n\nFor less time-sensitive messages, our standard delivery speed may cause undue pressure\non your internal systems or APIs, e.g., when millions of users open your app at the\nsame time. _Throttling_ allows you to tune\ndelivery to a level that doesn't put strain on those systems.\n",
    "title": "Airship API",
    "version": "V3"
  },
  "openapi": "3.0.0",
  "paths": {
    "/api/attachments": {
      "post": {
        "description": "Create attachments by `POST`ing to the attachments URI. The body of the request must be a JSON object describing and including the contents of a file to attach.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "content_type": "text/plain; charset=\"UTF-8\"",
                "data": "{{base64-encoded_data}}",
                "filename": "{{email_filename}}"
              },
              "schema": {
                "properties": {
                  "content_type": {
                    "description": "The mimetype of the uploaded file including the charset parameter, if needed. Example: `\"text/plain; charset=\\\"UTF-8\\\"\"`\n",
                    "maxLength": 100,
                    "type": "string"
                  },
                  "data": {
                    "description": "Base64-encoded bytes of the file contents representing a maximum of 2.5 MiB of data when decoded. Padding with `=` chars is optional.\n",
                    "type": "string"
                  },
                  "filename": {
                    "description": "The name of the uploaded file (max 255 UTF-8 bytes). Multiple files with the same name are allowed in separate requests.\n",
                    "type": "string"
                  }
                },
                "required": [
                  "filename",
                  "content_type",
                  "data"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "description": "The response body for an email attachment creation request.",
                  "properties": {
                    "attachment_id": {
                      "description": "The attachment ID for a newly-created attachment. Reference this ID in the `attachments` list in the [Email override](#schemas-emailoverrideobject).",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "ok": {
                      "description": "Either `true` or `false`. Represents if the operation completed successfully or not. If false, other properties defined here will not necessarily be present.",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "The email attachment was created. The response body will contain the IDs of the created attachments."
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "The application does not have the proper entitlement to create attachments."
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Create Email Attachment",
        "tags": [
          "Email"
        ],
        "x-important": "* Attachments can be used for `transactional` sends only, not `commercial`.\n\n* Attachments cannot be used in Automations.\n\n* Attachment size is limited to 2.5MB per attachment, with a 20MB content size limit on each message, including content body and all attachments.\n\n* Attachment count is limited to 10 per email.\n\n* Sending attachments with malicious content is strictly prohibited. This is enforced in part by blocking file types with .bat and .exe extensions.\n\n* Attachments have a TTL (Time To Live) of 60 days.\n"
      }
    },
    "/api/attribute-lists": {
      "get": {
        "description": "Retrieve information about all attributes lists. This call returns a list of metadata that will not contain the actual lists of users.",
        "responses": {
          "200": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "properties": {
                    "lists": {
                      "description": "An array of List Objects.",
                      "items": {
                        "$ref": "#/components/schemas/listObject"
                      },
                      "type": "array"
                    },
                    "ok": {
                      "description": "Success.",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Lists metadata retrieved successfully."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Retrieve Lists",
        "tags": [
          "Attribute Lists"
        ]
      },
      "post": {
        "description": "Create a new attributes list by defining it in the Airship system. The body of the request contains the name, description, and optional metadata for the list. After you define a list, you populate it with a call to the [Upload Attribute List](#operation-api-attribute-lists-list_name-csv-put) endpoint.",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "description": "First of many attributes lists!",
                "extra": {
                  "filename": "attributesList.csv",
                  "source": "CRM"
                },
                "name": "ua_attributes_my_new_list"
              },
              "schema": {
                "$ref": "#/components/schemas/listMetadataObject"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "$ref": "#/components/schemas/okResponseObject"
                }
              }
            },
            "description": "Returns OK for success.",
            "headers": {
              "Location": {
                "description": "The URI of the list, used for later updates.",
                "schema": {
                  "format": "uri",
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403",
            "description": "Forbidden. Authentication was correct, but the user does not have permission to access the requested API, e.g. the API may not be used to create or modify lists with `ua_` prefixed name."
          },
          "409": {
            "$ref": "#/components/responses/409",
            "description": "The app has reached the maximum number of allowed lists (error_code 40906). A list with that name already exists (error_code 40907). List is already processing recently uploaded CSV (error_code 40910)."
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Create Attributes List",
        "tags": [
          "Attribute Lists"
        ],
        "x-important": "You must prefix attribute list names with `ua_attributes_`."
      }
    },
    "/api/attribute-lists/{list_name}/csv": {
      "parameters": [
        {
          "description": "The `name` of the list you want to retrieve or update.",
          "in": "path",
          "name": "list_name",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "description": "Upload a CSV that will set attribute values on the specified channels or named users.\n\nThe first entry in the uploaded CSV must be a header row. The first field must be one of the following identifier types: `channel_id`, `msisdn`, `named_user`, `email_address`.\n\nOnly one identifier type is allowed per file unless the identifier type name matches a custom attribute schema for the associated app key.\n\nYou must include both `msisdn` and `sms_sender` columns when targeting SMS or MMS channel types. See example to the right.\n\n| Target Type      | Required Column Headers                                                                  |\n|------------------|------------------------------------------------------------------------------------------|\n| Web              | **channel_id**                                                                           |\n| Open Channel | **channel_id**                                                                           |\n| iOS              | **channel_id**                                                                           |\n| Android          | **channel_id**                                                                           |\n| Named User       | **named_user**                                                                               |\n| Email            | **email_address**                                                                            |\n| SMS             | - **msisdn** (numeric and no leading 0)  <br> - **sms_sender** (numeric or prefixed with country code and colon-separated, e.g. \"US:1234\") |\n| MMS             | - **msisdn** (numeric and no leading 0)  <br> - **sms_sender** (numeric or prefixed with country code and colon-separated, e.g. \"US:1234\") |\n",
        "requestBody": {
          "content": {
            "text/csv": {
              "schema": {
                "example": [
                  "C:/Users/someUser/Downloads/weekly_offers.csv"
                ],
                "format": "binary",
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "$ref": "#/components/responses/202"
          },
          "400": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Bad Request. Parsing or validating the request failed.\n\n| error_code | Description |\n|---|---|\n| 40002: | CSV contains too many identifiers. |\n| 40003: | CSV header contains too many columns. |\n| 40013: | CSV header’s first field must be an identifier. |\n| 40014: | CSV header contains an unknown attribute name. |\n| 40015: | CSV header contains duplicate attribute names. |\n| 40017: | CSV header contains duplicate column names. |\n| 40018: | CSV header does not contain required column for identifier type. |\n"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403",
            "description": "The API may only be used to create or modify lists with `ua_attributes_` prefixed name."
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Upload Attribute List",
        "tags": [
          "Attribute Lists"
        ],
        "x-note": "The maximum number of rows that may be uploaded to a list is 10 million, and the maximum number of columns is 101 (1 identifer column and 100 attribute or internal header columns) `Content-Encoding: gzip` is supported (and recommended) on this endpoint to reduce network traffic.",
        "x-warning": "If your upload times out due to a poor connection, you must re-upload the list from scratch. Because we want to ensure that the entirety of a given list is successfully uploaded, we do not support partial list uploads."
      }
    },
    "/api/attribute-lists/{list_name}/errors": {
      "get": {
        "description": "During processing, after a list is uploaded, errors can occur. Depending on the type of list processing, an error file may be created, showing a user exactly what went wrong.",
        "parameters": [
          {
            "description": "The name of the list.",
            "in": "path",
            "name": "list_name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "$ref": "#/components/schemas/listObject"
                }
              }
            },
            "description": "Returns OK for success."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Download list errors",
        "tags": [
          "Attribute Lists"
        ]
      }
    },
    "/api/channels": {
      "get": {
        "description": "List all channels registered to this app key, along with associated data and metadata.",
        "responses": {
          "200": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "properties": {
                    "channels": {
                      "description": "An array of Channel Objects.",
                      "items": {
                        "$ref": "#/components/schemas/channelObject"
                      },
                      "type": "array"
                    },
                    "next_page": {
                      "description": "If there is more than one page of results, use this link to get the next page of results.",
                      "example": "https://go.urbanairship.com/api/channels?limit=1000&start=535ec31e-4b07-4b26-bead-a1c0e94e133c",
                      "format": "url",
                      "type": "string"
                    },
                    "ok": {
                      "description": "Success.",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returns OK for success with the JSON response.",
            "headers": {
              "Link": {
                "schema": {
                  "description": "provides the URL to the current page of results. The query within the URL contains the `limit` (the number of results on the page) and `start` (the first `channel_id` in the result set) parameters.",
                  "example": "<https://go.urbanairship.com/api/channels?limit=1000&start=387ee142-25e6-4z34-8005-p91cocfb43e9>; rel=\"next\"",
                  "type": "string"
                }
              }
            },
            "x-note": "Tags added to a channel using `/named_users/tags` are not returned from this endpoint. To view those tags, you must lookup the named user associated with the channel."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Channel Listing",
        "tags": [
          "Channels"
        ]
      }
    },
    "/api/channels/attributes": {
      "post": {
        "description": "Set or remove attributes on a channel. Aside from Airship's [default attributes](/guides/messaging/user-guide/audience/segmentation/attributes/reference/#default-attributes), you must [define attributes in the Airship dashboard](/guides/messaging/user-guide/audience/segmentation/attributes/project/#adding-attributes) before you can set them on channels.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "attributes": [
                  {
                    "action": "set",
                    "key": "major_league",
                    "value": "sf_giants"
                  },
                  {
                    "action": "remove",
                    "key": "minor_league"
                  },
                  {
                    "action": "set",
                    "key": "position",
                    "value": "LF"
                  }
                ],
                "audience": {
                  "android_channel": "{{android_channel}}"
                }
              },
              "schema": {
                "description": "Include an audience object and an array of attributes objects in your request.",
                "properties": {
                  "attributes": {
                    "$ref": "#/components/schemas/attributesObject"
                  },
                  "audience": {
                    "description": "The channel(s) you want to set or remove attributes for.",
                    "properties": {
                      "amazon_channel": {
                        "description": "The unique channel identifier used to target an Amazon device.",
                        "properties": {
                          "amazon_channel": {
                            "oneOf": [
                              {
                                "format": "uuid",
                                "type": "string"
                              },
                              {
                                "example": [
                                  "00256e0b-b02f-4f12-a77f-4c3d57078330",
                                  "f59970d3-3d42-4584-907e-f5c57f5d46a1"
                                ],
                                "items": {
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "maxItems": 100,
                                "minItems": 1,
                                "type": "array"
                              }
                            ]
                          }
                        },
                        "required": [
                          "amazon_channel"
                        ],
                        "title": "Amazon Channel Selector",
                        "type": "object"
                      },
                      "android_channel": {
                        "description": "The unique channel identifier used to target an Android device.",
                        "properties": {
                          "android_channel": {
                            "oneOf": [
                              {
                                "format": "uuid",
                                "type": "string"
                              },
                              {
                                "example": [
                                  "00256e0b-b02f-4f12-a77f-4c3d57078330",
                                  "f59970d3-3d42-4584-907e-f5c57f5d46a1"
                                ],
                                "items": {
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "maxItems": 100,
                                "minItems": 1,
                                "type": "array"
                              }
                            ]
                          }
                        },
                        "required": [
                          "android_channel"
                        ],
                        "title": "Android Channel Selector",
                        "type": "object"
                      },
                      "channel": {
                        "description": "The unique channel identifier used to target a web device, i.e., web browser.",
                        "properties": {
                          "channel": {
                            "oneOf": [
                              {
                                "format": "uuid",
                                "type": "string"
                              },
                              {
                                "example": [
                                  "00256e0b-b02f-4f12-a77f-4c3d57078330",
                                  "f59970d3-3d42-4584-907e-f5c57f5d46a1"
                                ],
                                "items": {
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "maxItems": 100,
                                "minItems": 1,
                                "type": "array"
                              }
                            ]
                          }
                        },
                        "required": [
                          "channel"
                        ],
                        "title": "Channel Selector",
                        "type": "object"
                      },
                      "email_address": {
                        "description": "The unique channel identifier used to target an email address.",
                        "example": [
                          "00256e0b-b02f-4f12-a77f-4c3d57078330",
                          "f59970d3-3d42-4584-907e-f5c57f5d46a1"
                        ],
                        "items": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "maxItems": 100,
                        "minItems": 1,
                        "type": "array"
                      },
                      "ios_channel": {
                        "description": "The unique channel identifier used to target an iOS device.",
                        "properties": {
                          "ios_channel": {
                            "oneOf": [
                              {
                                "format": "uuid",
                                "type": "string"
                              },
                              {
                                "example": [
                                  "00256e0b-b02f-4f12-a77f-4c3d57078330",
                                  "f59970d3-3d42-4584-907e-f5c57f5d46a1"
                                ],
                                "items": {
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "maxItems": 100,
                                "minItems": 1,
                                "type": "array"
                              }
                            ]
                          }
                        },
                        "required": [
                          "ios_channel"
                        ],
                        "title": "iOS Channel Selector",
                        "type": "object"
                      },
                      "sms_id": {
                        "description": "Selects a single SMS device. The `msisdn` must be `opted_in` to receive notifications.",
                        "properties": {
                          "msisdn": {
                            "description": "The recipient phone number.",
                            "maxLength": 128,
                            "minLength": 1,
                            "type": "string"
                          },
                          "sender": {
                            "description": "The sender that the app is configured to send SMS messages from.",
                            "maxLength": 128,
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "sender",
                          "msisdn"
                        ],
                        "title": "SMS ID Selector",
                        "type": "object"
                      },
                      "web_channel": {
                        "description": "The unique channel identifier used to target a web device.",
                        "example": [
                          "00256e0b-b02f-4f12-a77f-4c3d57078330",
                          "f59970d3-3d42-4584-907e-f5c57f5d46a1"
                        ],
                        "items": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "maxItems": 100,
                        "minItems": 1,
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "required": [
                  "audience",
                  "attributes"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "properties": {
                    "ok": {
                      "description": "If true, your request was successful.",
                      "type": "boolean"
                    },
                    "warning": {
                      "description": "Alerts you if your request could not be processed. You may receive a 200 with a warning if you provide a `value` that does not match your attribute type. For example, an attribute that expects a numeric value will allow a value of \"25\", but fail if you input \"twenty-five\".\n",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "The operation was successful."
          },
          "400": {
            "$ref": "#/components/responses/400",
            "description": "Parsing or validating the request failed."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "security": [
          {
            "basicAppAuth": [
            ]
          },
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Set or Remove Attributes on Channels",
        "tags": [
          "Channels"
        ],
        "x-important": "Use the [Named Users endpoint]( #operation-api-named_users-named_user_id-attributes-post) to set or remove attributes on Named Users.\n"
      }
    },
    "/api/channels/email": {
      "post": {
        "description": "Create a new email channel or update an existing channel. If you provide the email address of an existing channel, the call is treated as a PUT.\n\nIf you want to update the address of an existing channel, see the [Update email channel](#operation-api-channels-email-id-put) endpoint.",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "channel": {
                  "address": "{{email_address}}",
                  "commercial_opted_in": "{{today_date_time}}",
                  "locale_country": "US",
                  "locale_language": "en",
                  "timezone": "America/Los_Angeles",
                  "type": "email"
                }
              },
              "schema": {
                "description": "An email channel object is the object used to create channels.\n\nThere are two types of emails: commercial and transactional. Commercial emails are promotional. Transactional emails are functional responses to interactions with a your app or website, like receipts, legal notices, and password reset requests. Users must explicitly opt-in to receive commercial emails; users do not need to opt-in to receive transactional emails (though they can explicitly opt-out).\n\nEach channel uses `opted_in` and `opted_out` keys for both commercial and transactional emails. The value of each key is the date-time when the user subscribed to or unsubscribed from emails of either type — commercial or transactional. If a user has opted out of a particular email type (or the user never opted into commercial emails), and the user is a part of your audience for a message of that type, the email designated for the opted-out user is dropped at delivery time. These values are all optional. However, an email channel with no `opted_in` or `opted_out` values can only receive transactional emails.\n\nIf a channel has both opt_in and opt_out values for a particular email type, Airship respects the most recent date-time. So, if a user opted into commercial emails after previously opting out, that user can receive commercial emails from you even though that user's channel possesses both `commercial_opted_in` and `commercial_opted_out` values; if the opt-in date is prior to the opt-out date, the user will not receive commercial emails from you.",
                "properties": {
                  "channel": {
                    "properties": {
                      "address": {
                        "description": "The email address being registered.",
                        "example": "name@example.com",
                        "type": "string"
                      },
                      "commercial_opted_in": {
                        "description": "The date-time when a user gave explicit permission to receive commercial\nemails.\n",
                        "type": "string"
                      },
                      "commercial_opted_out": {
                        "description": "The date-time when a user explicitly denied permission to receive\ncommercial emails.\n",
                        "type": "string"
                      },
                      "locale_country": {
                        "description": "The device property tag related to locale country setting.",
                        "example": "US",
                        "type": "string"
                      },
                      "locale_language": {
                        "description": "The device property tag related to locale language setting.",
                        "example": "en",
                        "type": "string"
                      },
                      "timezone": {
                        "description": "The device property tag related to timezone setting.",
                        "example": "America/Los_Angeles",
                        "type": "string"
                      },
                      "transactional_opted_in": {
                        "description": "The date-time when a user gave explicit permission to receive transactional\nemails. Users do not need to opt-in to receive transactional\nemails unless they have previously opted out.\n",
                        "type": "string"
                      },
                      "transactional_opted_out": {
                        "description": "The date-time when a user explicitly denied permission to receive\ntransactional emails.\n",
                        "type": "string"
                      },
                      "type": {
                        "description": "The type of channel you are registering. For email channels, this value must be `email`.",
                        "enum": [
                          "email"
                        ],
                        "example": "email",
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "address"
                    ],
                    "type": "object"
                  },
                  "opt_in_mode": {
                    "description": "The opt-in mode for registering the channel. `classic` is the default when unspecified, `double` creates a `double_opt_in` event.",
                    "enum": [
                      "classic",
                      "double"
                    ],
                    "example": "double",
                    "type": "string"
                  },
                  "properties": {
                    "additionalProperties": true,
                    "description": "An object containing event properties. You can use these properties to filter the double opt-in event and reference them in your message content by using handlebars. Items in the `properties` object are limited to a 255-character maximum string length.",
                    "example": {
                      "interests": "newsletter"
                    },
                    "type": "object"
                  }
                },
                "required": [
                  "channel"
                ],
                "title": "Email Channel Object",
                "type": "object"
              }
            }
          },
          "description": "A single email channel object."
        },
        "responses": {
          "201": {
            "content": {
              "text/plain": {
                "schema": {
                  "description": "The response body for an email channel request.",
                  "properties": {
                    "channel_id": {
                      "description": "A unique string identifying the email channel.",
                      "example": "ef625038-70a3-41f1-826f-57bc11dd625a",
                      "format": "uuid",
                      "type": "string"
                    },
                    "ok": {
                      "description": "Either `true` or `false`. Represents if the operation completed successfully or not. If false, other properties defined here will not necessarily be present.",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "The email channel was created.",
            "headers": {
              "Location": {
                "description": "The newly created email channel.",
                "schema": {
                  "format": "uri",
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Register Email Channel",
        "tags": [
          "Email"
        ]
      }
    },
    "/api/channels/email/tags": {
      "post": {
        "description": "Add, remove, or set tags for a single email channel.",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "add": {
                  "{{tag_group_1}}": [
                    "tag1",
                    "tag2",
                    "tag3"
                  ],
                  "{{tag_group_2}}": [
                    "tag1",
                    "tag2",
                    "tag3"
                  ],
                  "{{tag_group_3}}": [
                    "tag1",
                    "tag2",
                    "tag3"
                  ]
                },
                "audience": {
                  "email_address": "{{email_address}}"
                }
              },
              "schema": {
                "properties": {
                  "add": {
                    "$ref": "#/components/schemas/tagGroupObject",
                    "description": "Adds the specified tags to the channel. Tags that are already present are not modified/removed as a result of this operation."
                  },
                  "audience": {
                    "description": "Specifies the email address you want to perform tag operations against. Must contain a single `email_address` key.",
                    "maxProperties": 1,
                    "properties": {
                      "email_address": {
                        "description": "The email address you want to modify tags for. Accepts a single string value representing an email address.",
                        "example": "name@example.com",
                        "type": "string"
                      }
                    },
                    "required": [
                      "email_address"
                    ],
                    "type": "object"
                  },
                  "remove": {
                    "$ref": "#/components/schemas/tagGroupObject",
                    "description": "Removes the specified tags from the channel."
                  },
                  "set": {
                    "$ref": "#/components/schemas/tagGroupObject",
                    "description": "Assigns a list of tags exactly; any previously set tags that are not in this current list are removed."
                  }
                },
                "required": [
                  "audience"
                ],
                "type": "object"
              }
            }
          },
          "description": "A single request body can contain an `add` and/or `remove` field, or a single `set` field. One or more of the `add`, `remove`, or `set` keys must be present in the request.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "$ref": "#/components/schemas/okResponseObject"
                }
              }
            },
            "description": "Returns OK for success. If a tag request is partially valid, i.e. at least one tag group exists and is active, a 200 will be returned with a warning in the response about the tag groups that failed to update. The tag groups listed in the warning will be csv format."
          },
          "400": {
            "$ref": "#/components/responses/400",
            "description": "Bad Request. Parsing or validating the request failed. If a tag is present in both the add and remove fields, a HTTP 400 response will be returned."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403",
            "description": "Forbidden. Authentication was correct, but the user does not have permission to access the requested API, e.g. the app does not permit associations from the device. Secure tag groups require master secret to modify tags, otherwise a 403 Forbidden response is returned."
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Email Tags",
        "tags": [
          "Email",
          "Tags"
        ],
        "x-important": "A tag must be < 128 characters. A request with one or more tags longer than 128 characters will return a 400 response.\nWe support up to 1000 tags per channel. Adding more than 1000 tags per channel can cause latency and service interruptions. We strongly recommend removing unused tags whenever possible, and using [Custom Events](../../guides/messaging/user-guide/data/custom-events) when appropriate. Please contact Support if you believe your use case requires more than 1000 tags per channel, and they will help you find an alternative."
      }
    },
    "/api/channels/email/uninstall": {
      "post": {
        "description": "**Removes an email address from Airship. Use with caution.** If the uninstalled email address opts-in again, it might generate a new channel_id. If a user generates a new `channel_id` when they opt-in again, the new `channel_id` cannot be reassociated with any opt-in information, tags, named users, Performance Analytics reports, or other information from the that belonged to the previously-uninstalled email channel.",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "email_address": "{{email_address}}"
              },
              "schema": {
                "properties": {
                  "email_address": {
                    "description": "The email address of the channel to uninstall.",
                    "example": "name@example.com",
                    "type": "string"
                  }
                },
                "required": [
                  "email_address"
                ],
                "type": "object"
              }
            }
          },
          "description": "An email address of the channel to uninstall."
        },
        "responses": {
          "202": {
            "content": {
              "application/vnd.urbanairship+json; version=3;": {
                "schema": {
                  "$ref": "#/components/schemas/okResponseObject"
                }
              }
            },
            "description": "Returns OK for success."
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Uninstall Email Channel",
        "tags": [
          "Email"
        ]
      }
    },
    "/api/channels/email/{email}": {
      "get": {
        "description": "Returns a channel by email address. For security, email addresses are one-way hashed and aren't returned when you look up a channel by ID. Use this endpoint to find a channel belonging to a particular email address.\n\n\nYou may need to escape the \"@\" character in URLs using`%40`.\n",
        "parameters": [
          {
            "description": "The email address of the channel you want to look up.",
            "in": "path",
            "name": "email",
            "required": true,
            "schema": {
              "example": "name@domain.com",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "$ref": "#/components/schemas/channelObject"
                }
              }
            },
            "description": "A channel exists for the email address"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Lookup an Email Address",
        "tags": [
          "Email"
        ]
      },
      "put": {
        "description": "Update an email channel. You can use this endpoint to update the subscription/unsubscription values.\n",
        "parameters": [
          {
            "description": "The email `channel_id` you want to modify.",
            "in": "path",
            "name": "email",
            "required": true,
            "schema": {
              "example": "251d3318-b3cb-4e9f-876a-ea3bfa6e47bd",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "channel": {
                  "address": "{{email_address}}",
                  "commercial_opted_out": "{{today_date_time}}",
                  "type": "email"
                }
              },
              "schema": {
                "description": "An email channel object is the object used to update channels.\n\nThere are two types of emails: commercial and transactional. Commercial emails are promotional. Transactional emails are functional responses to interactions with a your app or website, like receipts, legal notices, and password reset requests. Users must explicitly opt-in to receive commercial emails; users do not need to opt-in to receive transactional emails (though they can explicitly opt-out).\n\nEach channel uses `opted_in` and `opted_out` keys for both commercial and transactional emails. The value of each key is the date-time when the user subscribed to or unsubscribed from emails of either type — commercial or transactional. If a user has opted out of a particular email type (or the user never opted into commercial emails), and the user is a part of your audience for a message of that type, the email designated for the opted-out user is dropped at delivery time. These values are all optional. However, an email channel with no `opted_in` or `opted_out` values can only receive transactional emails.\n\nIf a channel has both opt_in and opt_out values for a particular email type, Airship respects the most recent date-time. So, if a user opted into commercial emails after previously opting out, that user can receive commercial emails from you even though that user's channel possesses both `commercial_opted_in` and `commercial_opted_out` values; if the opt-in date is prior to the opt-out date, the user will not receive commercial emails from you.",
                "properties": {
                  "channel": {
                    "properties": {
                      "address": {
                        "description": "The email address associated with the email channel.",
                        "example": "tommy@example.com",
                        "type": "string"
                      },
                      "commercial_opted_in": {
                        "description": "The date-time when a user gave explicit permission to receive commercial\nemails.\n",
                        "type": "string"
                      },
                      "commercial_opted_out": {
                        "description": "The date-time when a user explicitly denied permission to receive\ncommercial emails.\n",
                        "type": "string"
                      },
                      "locale_country": {
                        "description": "The device property tag related to locale country setting.",
                        "example": "US",
                        "type": "string"
                      },
                      "locale_language": {
                        "description": "The device property tag related to locale language setting.",
                        "example": "en",
                        "type": "string"
                      },
                      "timezone": {
                        "description": "The device property tag related to timezone setting.",
                        "example": "America/Los_Angeles",
                        "type": "string"
                      },
                      "transactional_opted_in": {
                        "description": "The date-time when a user gave explicit permission to receive transactional\nemails. Users do not need to opt-in to receive transactional\nemails unless they have previously opted out.\n",
                        "type": "string"
                      },
                      "transactional_opted_out": {
                        "description": "The date-time when a user explicitly denied permission to receive\ntransactional emails.\n",
                        "type": "string"
                      },
                      "type": {
                        "description": "The type of channel you are updating. For email channels, this value must be `email`.",
                        "enum": [
                          "email"
                        ],
                        "example": "email",
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "address"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "channel"
                ],
                "title": "Email Channel Update Object",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "schema": {
                  "description": "The response body for an email channel request.",
                  "properties": {
                    "channel_id": {
                      "description": "A unique string identifying the email channel.",
                      "example": "ef625038-70a3-41f1-826f-57bc11dd625a",
                      "format": "uuid",
                      "type": "string"
                    },
                    "ok": {
                      "description": "Either `true` or `false`. Represents if the operation completed successfully or not. If false, other properties defined here will not necessarily be present.",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "The email channel was updated.",
            "headers": {
              "Location": {
                "description": "The updated email channel.",
                "schema": {
                  "format": "uri",
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Update an Email Channel",
        "tags": [
          "Email"
        ],
        "x-important": "The `address` you provide in this request must be the one that is associated with the channel you are updating. You may not update the user's email address with this endpoint."
      }
    },
    "/api/channels/open": {
      "post": {
        "description": "Create a new open channel, or update an existing open channel.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "channel": {
                  "address": "Number Four",
                  "locale_country": "US",
                  "locale_language": "en",
                  "open": {
                    "identifiers": {
                      "model": "4"
                    },
                    "open_platform_name": "cylon"
                  },
                  "opt_in": true,
                  "tags": [
                    "toaster",
                    "caprica"
                  ],
                  "timezone": "America/Los_Angeles",
                  "type": "open"
                }
              },
              "schema": {
                "properties": {
                  "channel": {
                    "description": "Properties of the open channel object.",
                    "properties": {
                      "address": {
                        "description": "Where notifications sent to this `channel_id` will be sent. Examples: email address, phone number. If missing, channel_id must be present. The `address` is one-to-one with the `channel id`. New addresses on existing channels will overwrite old associations.",
                        "example": "+1 5558675309",
                        "type": "string"
                      },
                      "locale_country": {
                        "description": "The two-letter country locale short code. Will set the `ua_locale_country` tag group to the specified value.",
                        "example": "US",
                        "type": "string"
                      },
                      "locale_language": {
                        "description": "The two-letter language locale short code. Will set the `ua_locale_language` tag group to the specified value.",
                        "type": "string"
                      },
                      "open": {
                        "description": "Open channel-specific properties.",
                        "properties": {
                          "identifiers": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "Optional object with string-to-string key:value pairs that represent non-segmentable identifiers for the channel in your delivery systems. Delivered as part of webhook payloads. If present, the value will overwrite (not union with) existing identifier records.",
                            "example": {
                              "baz": "lurhmann",
                              "foo": "bar"
                            },
                            "maxItems": 100,
                            "type": "object"
                          },
                          "open_platform_name": {
                            "description": "The name of the open platform to which you are registering this channel.",
                            "example": [
                              "slack"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "open_platform_name"
                        ],
                        "type": "object"
                      },
                      "opt_in": {
                        "description": "If false, no payloads will be delivered for the channel.",
                        "type": "boolean"
                      },
                      "tags": {
                        "description": "A list of strings used for audience targeting. When used for this endpoint, operates like the `tags { set {}}` operation; specified tags are applied, and all other tags are removed.",
                        "example": [
                          "one_tag",
                          "two_tag",
                          "red_tag",
                          "blue_tag"
                        ],
                        "items": {
                          "maxLength": 128,
                          "minLength": 1,
                          "type": "string"
                        },
                        "maxItems": 1000,
                        "minItems": 1,
                        "type": "array"
                      },
                      "timezone": {
                        "description": "An IANA tzdata identifier for the timezone as a string, e.g., `\"America/Los_Angeles\"`. Will set the timezone tag group tag with the specified value.",
                        "example": "America/Los_Angeles",
                        "type": "string"
                      },
                      "type": {
                        "description": "Required string. The only acceptable value for an open channel is `open`.",
                        "enum": [
                          "open"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "opt_in",
                      "open",
                      "address"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "channel"
                ],
                "type": "object"
              }
            }
          },
          "description": "An open channel object."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "channel_id": {
                      "description": "Identifies the new open channel or the open channel you successfully updated.",
                      "example": "ef625038-70a3-41f1-826f-57bc11dd625a",
                      "format": "uuid",
                      "type": "string"
                    },
                    "ok": {
                      "description": "Success.",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned if the new channel is created successfully or if an existing channel was found for the specified open_platform_name and address.",
            "headers": {
              "Location": {
                "description": "Used for later API calls for this channel.",
                "schema": {
                  "format": "uri",
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "429": {
            "$ref": "#/components/responses/429"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Register New / Update Channel",
        "tags": [
          "Open Channels"
        ],
        "x-important": "The master secret is required to update an open channel, otherwise a 401 Unauthorized response is returned.",
        "x-note": "A 200 status will be returned if an existing channel was found for the specified `open_platform_name` and address. Otherwise a new channel will be created, also returning a 200 status.\n"
      }
    },
    "/api/channels/open/tags": {
      "post": {
        "description": "Manipulate a single open channel’s tags. Open channels are identified by `address`, not by thier `channel_id`.",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "add": {
                  "my_fav_tag_group1": [
                    "tag1",
                    "tag2",
                    "tag3"
                  ],
                  "my_fav_tag_group2": [
                    "tag1",
                    "tag2",
                    "tag3"
                  ],
                  "my_fav_tag_group3": [
                    "tag1",
                    "tag2",
                    "tag3"
                  ]
                },
                "audience": {
                  "address": "Number Four",
                  "open_platform_name": "cylon"
                }
              },
              "schema": {
                "description": "Add, remove, or set tags on a channel. A single request body may contain add and/or remove objects, or a single set field. At least one of the add, remove, or set objects must be present in a request.",
                "properties": {
                  "add": {
                    "$ref": "#/components/schemas/tagGroupObject",
                    "description": "Adds the specified tags to the channel. Tags that are already present are not modified/removed as a result of this operation."
                  },
                  "audience": {
                    "description": "The request body containing an address and open_platform_name.",
                    "properties": {
                      "address": {
                        "description": "Where notifications sent to this `channel_id` will be sent. Examples: email address, phone number. If missing, channel_id must be present. The `address` is one-to-one with the `channel id`. New addresses on existing channels will overwrite old associations.",
                        "example": [
                          "new_email@example.com"
                        ],
                        "type": "string"
                      },
                      "open_platform_name": {
                        "description": "An alphanumeric string that must be the name of a pre-created open platform object.",
                        "example": [
                          "twitter"
                        ],
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "address",
                      "open_platform_name"
                    ],
                    "title": "Open Channel Identifier",
                    "type": "object"
                  },
                  "remove": {
                    "$ref": "#/components/schemas/tagGroupObject",
                    "description": "Removes the specified tags from the channel."
                  },
                  "set": {
                    "$ref": "#/components/schemas/tagGroupObject",
                    "description": "Assigns a list of tags exactly; any previously set tags that are not in this current list will be removed."
                  }
                },
                "required": [
                  "audience"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "$ref": "#/components/schemas/okResponseObject"
                }
              }
            },
            "description": "Returns OK for success. If a tag request is partially valid, i.e. at least one tag group exists and is active, a 200 is returned with a warning in the response about the tag groups that failed to update. The tag groups listed in the warning will be CSV-formatted."
          },
          "400": {
            "$ref": "#/components/responses/400",
            "description": "Parsing or validating the request failed. You will see this error if the same tag is present in both the add and remove fields."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403",
            "description": "Returned in cases when the app does not permit associations from the device. Secure tag groups require master secret to modify tags."
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Open Channel Tags",
        "tags": [
          "Open Channels",
          "Tags"
        ],
        "x-important": "A tag must be < 128 characters. A request with one or more tags longer than 128 characters will return a 400 response.\nWe support up to 1000 tags per channel. Adding more than 1000 tags per channel can cause latency and service interruptions. We strongly recommend removing unused tags whenever possible, and using [Custom Events](../../guides/messaging/user-guide/data/custom-events) when appropriate. Please contact Support if you believe your use case requires more than 1000 tags per channel, and they will help you find an alternative."
      }
    },
    "/api/channels/open/uninstall": {
      "post": {
        "description": "Uninstall a channel needing to know its channel ID. You cannot send notifications to, or get channel information for, an uninstalled channel.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "address": "Number Four",
                "open_platform_name": "cylon"
              },
              "schema": {
                "description": "The request body containing an address and open_platform_name.",
                "properties": {
                  "address": {
                    "description": "Where notifications sent to this `channel_id` will be sent. Examples: email address, phone number. If missing, channel_id must be present. The `address` is one-to-one with the `channel id`. New addresses on existing channels will overwrite old associations.",
                    "example": [
                      "new_email@example.com"
                    ],
                    "type": "string"
                  },
                  "open_platform_name": {
                    "description": "An alphanumeric string that must be the name of a pre-created open platform object.",
                    "example": [
                      "twitter"
                    ],
                    "maxLength": 128,
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "address",
                  "open_platform_name"
                ],
                "title": "Open Channel Identifier",
                "type": "object"
              }
            }
          },
          "description": "An `address` and the `open_platform_name` you want to uninstall the address from."
        },
        "responses": {
          "202": {
            "$ref": "#/components/responses/202"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Uninstall Open Channels",
        "tags": [
          "Open Channels"
        ]
      }
    },
    "/api/channels/sms": {
      "post": {
        "description": "Create an SMS channel. If the channel has not opted in yet (the request did not contain `opted_in`), Airship creates the channel with `opt_in` set to `false` and the user receives a message prompting them to complete the opt-in flow; you can assign assign tags and organize `pending` channels before the user has finished the opt-in process, but you cannot send messages to channels until they opt in to your audience.\n\nSMS notifications require a `sender` - a number that recipients will receive SMS notifications from. Contact Airship Support or your Account Manager to provision your project for SMS notifications and complete the configuration.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "locale_country": "US",
                "locale_language": "en",
                "msisdn": "{{sms_msisdn}}",
                "opted_in": "2020-02-13T11:58:59",
                "sender": "{{sms_sender}}",
                "timezone": "America/Los_Angeles"
              },
              "schema": {
                "properties": {
                  "locale_country": {
                    "description": "The ISO 3166 two-character country code. The value for this field becomes a tag in the `ua_locale_country` tag group.",
                    "type": "string"
                  },
                  "locale_language": {
                    "description": "The ISO 639-1 two-character language code. The value for this field becomes a tag in the `ua_locale_language` tag group.",
                    "type": "string"
                  },
                  "msisdn": {
                    "description": "The mobile phone number you want to register as an SMS channel (or send a request to opt-in). Must be numeric characters only, without leading zeros. 15 digits maximum.",
                    "maxLength": 15,
                    "pattern": "^[0-9]*$",
                    "type": "string"
                  },
                  "opted_in": {
                    "description": "The UTC datetime in ISO 8601 format that represents the date and time when explicit permission was received from the user to receive messages.",
                    "type": "string"
                  },
                  "sender": {
                    "description": "A long or short code the app is configured to send from. When using a short code, prepend the ISO 3166-1 alpha-2 formatted country code to the short code with a colon, e.g.: `US:12345`. Failing to provide the country code will only cause an error if your app contains multiple short code senders for different countries. See the [ISO 3166 browsing tool](https://www.iso.org/obp/ui/#search) to locate the proper alpha-2 country code.",
                    "properties": {
                      "sms_sender": {
                        "oneOf": [
                          {
                            "maxLength": 16,
                            "minLength": 1,
                            "type": "string"
                          },
                          {
                            "items": {
                              "maxLength": 16,
                              "minLength": 1,
                              "type": "string"
                            },
                            "maxItems": 100,
                            "minItems": 1,
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "required": [
                      "sms_sender"
                    ],
                    "title": "SMS Sender Selector",
                    "type": "string"
                  },
                  "timezone": {
                    "description": "The IANA identifier for a timezone, e.g. \"America/Los_Angeles\". The value in this field becomes a tag in the `timezone` tag group.",
                    "type": "string"
                  }
                },
                "required": [
                  "msisdn",
                  "sender"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "oneOf": [
                    {
                      "description": "The request included a valid `opted_in` value. Airship creates a channel that is opted in to your audience.",
                      "properties": {
                        "channel_id": {
                          "description": "Unique Channel ID for the SMS channel.",
                          "format": "uuid",
                          "type": "string"
                        },
                        "ok": {
                          "description": "If true, Airship creates a channel value with `opt_in` set to `true`.",
                          "type": "boolean"
                        },
                        "operation_id": {
                          "description": "A unique identifier for an operation; you can use this identifier to find the operation for troubleshooting purposes.",
                          "format": "uuid",
                          "title": "Operation ID",
                          "type": "string"
                        }
                      },
                      "title": "New channel with opt-in",
                      "type": "object"
                    },
                    {
                      "description": "Response to a request that does not include an `opted_in` value. Airship creates a channel with `opt_in` set to `false` and sends the user a message prompting them to opt in.",
                      "properties": {
                        "channel_id": {
                          "description": "Unique Channel ID for the SMS channel. This channel is created with `opt_in` set to `false`, as the user has not yet opted in to your audience.",
                          "format": "uuid",
                          "type": "string"
                        },
                        "ok": {
                          "description": "If true, Airship creates a channel with `opt_in` set to `false` and Airship sends a message prompting the user to opt in to your audience.",
                          "type": "boolean"
                        },
                        "operation_id": {
                          "description": "A unique identifier for an operation; you can use this identifier to find the operation for troubleshooting purposes.",
                          "format": "uuid",
                          "title": "Operation ID",
                          "type": "string"
                        },
                        "push_id": {
                          "description": "Identifies the message prompting the user to opt in to your audience, sent as a result of a request without an `opted_in` value.",
                          "format": "uuid",
                          "type": "string"
                        },
                        "status": {
                          "description": "The channel has been created but has not yet opted-in.",
                          "enum": [
                            "pending"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "ok",
                        "operation_id",
                        "channel_id",
                        "status",
                        "push_id"
                      ],
                      "title": "New channel without opt-in",
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "A channel with this msisdn/sender combination already exists."
          },
          "201": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "oneOf": [
                    {
                      "description": "The request included a valid `opted_in` value. Airship creates a channel that is opted in to your audience.",
                      "properties": {
                        "channel_id": {
                          "description": "Unique Channel ID for the SMS channel.",
                          "format": "uuid",
                          "type": "string"
                        },
                        "ok": {
                          "description": "If true, Airship creates a channel value with `opt_in` set to `true`.",
                          "type": "boolean"
                        },
                        "operation_id": {
                          "description": "A unique identifier for an operation; you can use this identifier to find the operation for troubleshooting purposes.",
                          "format": "uuid",
                          "title": "Operation ID",
                          "type": "string"
                        }
                      },
                      "title": "New channel with opt-in",
                      "type": "object"
                    },
                    {
                      "description": "Response to a request that does not include an `opted_in` value. Airship creates a channel with `opt_in` set to `false` and sends the user a message prompting them to opt in.",
                      "properties": {
                        "channel_id": {
                          "description": "Unique Channel ID for the SMS channel. This channel is created with `opt_in` set to `false`, as the user has not yet opted in to your audience.",
                          "format": "uuid",
                          "type": "string"
                        },
                        "ok": {
                          "description": "If true, Airship creates a channel with `opt_in` set to `false` and Airship sends a message prompting the user to opt in to your audience.",
                          "type": "boolean"
                        },
                        "operation_id": {
                          "description": "A unique identifier for an operation; you can use this identifier to find the operation for troubleshooting purposes.",
                          "format": "uuid",
                          "title": "Operation ID",
                          "type": "string"
                        },
                        "push_id": {
                          "description": "Identifies the message prompting the user to opt in to your audience, sent as a result of a request without an `opted_in` value.",
                          "format": "uuid",
                          "type": "string"
                        },
                        "status": {
                          "description": "The channel has been created but has not yet opted-in.",
                          "enum": [
                            "pending"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "ok",
                        "operation_id",
                        "channel_id",
                        "status",
                        "push_id"
                      ],
                      "title": "New channel without opt-in",
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "The channel was created. If the request did not contain an `opted_in` value, the channel is created with a `pending` status and the channel's `opt_in` value is set to `false`; you can assign assign tags and organize `pending` channels before the user has finished the opt-in process, but you cannot send messages to channels until they complete the opt-in flow.",
            "headers": {
              "location": {
                "description": "URI of the channel, used for later registrations.",
                "schema": {
                  "format": "url",
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "properties": {
                    "errors": {
                      "description": "Returned with 40x responses; explains reason for the unsuccessful request.",
                      "example": "Unable to retrieve details for sender 12345 with app_key <application key>",
                      "type": "string"
                    },
                    "ok": {
                      "description": "If false, the request was unsuccessful.",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "The channel could not be created. This error occurs when the project is not configured with a valid sender, the request was missing required fields, or the msisdn does not meet the E.164 international standard."
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Register SMS Channel",
        "tags": [
          "SMS"
        ],
        "x-note": "Avoid repeated registration attempts. Repeated registrations of the same msisdn and sender without an `opted_in` value will result in multiple opt-in instruction messages being sent to the msisdn."
      }
    },
    "/api/channels/sms/opt-out": {
      "post": {
        "description": "This will mark an SMS channel as opted-out (inactive) and it will not receive alerts even when they are addressed in the future. To opt the user back in, call the registration function again with a valid `opted_in` value.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "msisdn": "{{sms_msisdn}}",
                "sender": "{{sms_sender}}"
              },
              "schema": {
                "properties": {
                  "msisdn": {
                    "description": "The mobile phone number you want to opt-out of SMS messages. Must be numeric characters only, without leading zeros. 15 digits maximum.",
                    "maxLength": 15,
                    "pattern": "^[0-9]*$",
                    "type": "string"
                  },
                  "sender": {
                    "description": "A long or short code the app is configured to send from. When using a short code, prepend the ISO 3166-1 alpha-2 formatted country code to the short code with a colon, e.g.: `US:12345`. Failing to provide the country code will only cause an error if your app contains multiple short code senders for different countries. See the [ISO 3166 browsing tool](https://www.iso.org/obp/ui/#search) to locate the proper alpha-2 country code.",
                    "properties": {
                      "sms_sender": {
                        "oneOf": [
                          {
                            "maxLength": 16,
                            "minLength": 1,
                            "type": "string"
                          },
                          {
                            "items": {
                              "maxLength": 16,
                              "minLength": 1,
                              "type": "string"
                            },
                            "maxItems": 100,
                            "minItems": 1,
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "required": [
                      "sms_sender"
                    ],
                    "title": "SMS Sender Selector",
                    "type": "string"
                  }
                },
                "required": [
                  "msisdn",
                  "sender"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "202": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "properties": {
                    "ok": {
                      "description": "If true, the operation completed successfully.",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "The msisdn/channel is opted-out of SMS notifications."
          },
          "400": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "properties": {
                    "details": {
                      "properties": {
                        "error": {
                          "description": "Specific error message that explains why the request was unsuccessful.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "error": {
                      "description": "Returned with 40x responses; explains why the request was unsuccessful.",
                      "type": "string"
                    },
                    "error_code": {
                      "description": "The 5-digit Airship error code, pointing to a more specific error than the HTTP Status.",
                      "type": "integer"
                    },
                    "ok": {
                      "description": "If false, the request was unsuccessful.",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "The request body is not valid."
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Opt-out of SMS messages",
        "tags": [
          "SMS"
        ]
      }
    },
    "/api/channels/sms/uninstall": {
      "post": {
        "description": "**Removes phone numbers and accompanying data from Airship. Use with caution.** Uninstalling an SMS channel will prevent you from retrieving opt-in and opt-out history for the corresponding msisdn. If the uninstalled msisdn opts-in again, it will generate a new channel_id. The new channel_id cannot be reassociated with any opt-in information, tags, named users, Performance Analytics reports, or other information from the uninstalled SMS channel.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "msisdn": "{{sms_msisdn}}",
                "sender": "{{sms_sender}}"
              },
              "schema": {
                "properties": {
                  "msisdn": {
                    "description": "The mobile phone number you want to remove from the Airship system. Must be numeric characters only, without leading zeros. 15 digits maximum.",
                    "maxLength": 15,
                    "pattern": "^[0-9]*$",
                    "type": "string"
                  },
                  "sender": {
                    "description": "A long or short code the app is configured to send from. When using a short code, prepend the ISO 3166-1 alpha-2 formatted country code to the short code with a colon, e.g.: `US:12345`. Failing to provide the country code will only cause an error if your app contains multiple short code senders for different countries. See the [ISO 3166 browsing tool](https://www.iso.org/obp/ui/#search) to locate the proper alpha-2 country code.",
                    "properties": {
                      "sms_sender": {
                        "oneOf": [
                          {
                            "maxLength": 16,
                            "minLength": 1,
                            "type": "string"
                          },
                          {
                            "items": {
                              "maxLength": 16,
                              "minLength": 1,
                              "type": "string"
                            },
                            "maxItems": 100,
                            "minItems": 1,
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "required": [
                      "sms_sender"
                    ],
                    "title": "SMS Sender Selector",
                    "type": "string"
                  }
                },
                "required": [
                  "msisdn",
                  "sender"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "202": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "properties": {
                    "ok": {
                      "description": "If true, the operation was successful.",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "The SMS channel and all information associated with the msisdn is uninstalled."
          },
          "400": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "properties": {
                    "details": {
                      "properties": {
                        "error": {
                          "description": "Specific error message that explains why the request was unsuccessful.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "error": {
                      "description": "Returned with 40x responses; explains why the request was unsuccessful.",
                      "type": "string"
                    },
                    "error_code": {
                      "description": "The 5-digit Airship error code, pointing to a more specific error than the HTTP Status.",
                      "type": "integer"
                    },
                    "ok": {
                      "description": "If false, the request was unsuccessful.",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "The request body is not valid."
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Uninstall SMS Channel",
        "tags": [
          "SMS"
        ]
      }
    },
    "/api/channels/sms/{channel_id}": {
      "parameters": [
        {
          "description": "The identifier for the SMS channel you want to update.",
          "in": "path",
          "name": "channel_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "description": "Update an existing SMS channel to reflect opt-in date, timezone and/or locale changes. The `msisdn` and `sender` in the request must match the existing channel or the request will 404.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "locale_country": "US",
                "locale_language": "en",
                "msisdn": "{{sms_msisdn}}",
                "opted_in": "2020-02-13T11:58:59",
                "sender": "{{sms_sender}}",
                "timezone": "America/Los_Angeles"
              },
              "schema": {
                "properties": {
                  "locale_country": {
                    "description": "The ISO 3166 two-character country code. The value for this field becomes a tag in the `ua_locale_country` tag group.",
                    "type": "string"
                  },
                  "locale_language": {
                    "description": "The ISO 639-1 two-character language code. The value for this field becomes a tag in the `ua_locale_language` tag group.",
                    "type": "string"
                  },
                  "msisdn": {
                    "description": "The phone number corresponding to the `channel_id` in the request. You cannot change this value for the existing channel.",
                    "maxLength": 15,
                    "pattern": "^[0-9]*$",
                    "type": "string"
                  },
                  "opted_in": {
                    "description": "The UTC datetime in ISO 8601 format that represents the date and time when explicit permission was received from the user to receive messages.",
                    "type": "string"
                  },
                  "sender": {
                    "description": "The sender corresponding to the `channel_id` in the request. You cannot change this value for an existing channel.",
                    "type": "string"
                  },
                  "timezone": {
                    "description": "The IANA identifier for a timezone, e.g. \"America/Los_Angeles\". The value in this field becomes a tag in the `timezone` tag group.",
                    "type": "string"
                  }
                },
                "required": [
                  "msisdn",
                  "sender"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "properties": {
                    "ok": {
                      "description": "True if the request was successful.",
                      "type": "boolean"
                    },
                    "operation_id": {
                      "description": "A unique identifier for an operation; you can use this identifier to find the operation for troubleshooting purposes.",
                      "format": "uuid",
                      "title": "Operation ID",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "A channel with this msisdn/sender combination already exists."
          },
          "400": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "properties": {
                    "errors": {
                      "description": "Returned with 40x responses; explains reason for the unsuccessful request.",
                      "example": "Unable to retrieve details for sender 12345 with app_key <application key>",
                      "type": "string"
                    },
                    "ok": {
                      "description": "If false, the request was unsuccessful.",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "The request to update the channel failed. This error occurs when the `msisdn` or `sender` don't match the `channel_id` in the request."
          },
          "404": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "properties": {
                    "errors": {
                      "description": "A plain-text explanation of the error.",
                      "type": "string"
                    },
                    "ok": {
                      "description": "If false, your request was unsuccessful.",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Occurs when the `msisdn` and/or `sender` don't match any existing `channel_id`."
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Update SMS Channel",
        "tags": [
          "SMS"
        ]
      }
    },
    "/api/channels/sms/{msisdn}/{sender}": {
      "get": {
        "description": "Lookup an SMS channel by `msisdn` and `sender`.",
        "parameters": [
          {
            "description": "The mobile phone number you want to lookup a channel for. 15 digits maximum; may not contain leading zeroes.",
            "in": "path",
            "name": "msisdn",
            "required": true,
            "schema": {
              "maxLength": 15,
              "pattern": "^[0-9]*$",
              "type": "integer"
            }
          },
          {
            "description": "A long or short code the app is configured to send from. If your app uses the same shortcode for audiences in different countries, prepend the country code to the short code with a colon — `US:12345`.",
            "in": "path",
            "name": "sender",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "properties": {
                    "channel": {
                      "$ref": "#/components/schemas/channelObject"
                    },
                    "ok": {
                      "description": "Success.",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returns an SMS channel object. An SMS channel object includes tag groups for `ua_channel_type`,\n`ua_sender_id`, and `ua_opt_in`.\n"
          },
          "404": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "properties": {
                    "error": {
                      "description": "Returned with 40x responses; explains why the request was unsuccessful.",
                      "type": "string"
                    },
                    "error_code": {
                      "description": "The 5-digit Airship error code, pointing to a more specific error than the HTTP Status.",
                      "type": "integer"
                    },
                    "ok": {
                      "description": "If false, the request was unsuccessful.",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "A `channel_id` does not exist for the `msisdn` and `sender`."
          }
        },
        "summary": "SMS Channel Lookup",
        "tags": [
          "SMS"
        ]
      }
    },
    "/api/channels/subscription_lists": {
      "post": {
        "description": "Subscribe or unsubscribe channels to/from [Subscription lists](/guides/messaging/user-guide/audience/segmentation/audience-lists/subscription/).\n",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "audience": {
                  "channel": [
                    "{{ios_channel}}"
                  ],
                  "email_address": [
                    "tommy@example.com",
                    "nick@example.com"
                  ]
                },
                "subscription_lists": [
                  {
                    "action": "subscribe",
                    "list_id": "exciting_news"
                  },
                  {
                    "action": "unsubscribe",
                    "list_id": "animal_facts"
                  }
                ]
              },
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/audienceSelector"
                  },
                  {
                    "description": "An array of Subscription List Objects.",
                    "items": {
                      "$ref": "#/components/schemas/subscriptionListObject"
                    },
                    "title": "Subscription Lists",
                    "type": "array"
                  }
                ],
                "description": "The request payload must be a JSON object with the following fields."
              }
            }
          }
        },
        "responses": {
          "202": {
            "content": {
              "application/vnd.urbanairship+json; version=3;": {
                "schema": {
                  "$ref": "#/components/schemas/okResponseObject"
                }
              }
            },
            "description": "Returns OK for success."
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Subscribe or Unsubscribe Channels to/from Subscription Lists",
        "tags": [
          "Channels"
        ],
        "x-important": "You must first [create a Subscription list in the dashboard](/guides/messaging/user-guide/audience/segmentation/audience-lists/subscription/#creating-your-list), then refer to its ID when subscribing users. When subscribing users, if the list has not already been created in the dashboard, then the list will be created at the same time but will not be accessible from the dashboard; the list will available for API use only."
      }
    },
    "/api/channels/tags": {
      "post": {
        "description": "Add, remove, or set tags on a channel.",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "add": {
                  "{{tag_group_1}}": [
                    "tag1",
                    "tag2",
                    "tag3"
                  ],
                  "{{tag_group_2}}": [
                    "tag1",
                    "tag2",
                    "tag3"
                  ],
                  "{{tag_group_3}}": [
                    "tag1",
                    "tag2",
                    "tag3"
                  ]
                },
                "audience": {
                  "android_channel": "{{android_channel}}",
                  "ios_channel": "{{ios_channel}}"
                }
              },
              "schema": {
                "description": "A single request body may contain add and/or remove objects, or a single set object. At least one of the add, remove, or set objects must be present in a request.",
                "properties": {
                  "add": {
                    "$ref": "#/components/schemas/tagGroupObject",
                    "description": "Adds the specified tags to the channel. Tags that are already present are not modified/removed as a result of this operation."
                  },
                  "audience": {
                    "description": "Specifies one or more channels that you want to apply tag operations to.",
                    "properties": {
                      "amazon_channel": {
                        "description": "The unique channel identifier for an Amazon device.",
                        "example": [
                          "00256e0b-b02f-4f12-a77f-4c3d57078330",
                          "f59970d3-3d42-4584-907e-f5c57f5d46a1"
                        ],
                        "items": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "maxItems": 1000,
                        "minItems": 1,
                        "type": "array"
                      },
                      "android_channel": {
                        "description": "The unique channel identifier for an Android device.",
                        "example": [
                          "00256e0b-b02f-4f12-a77f-4c3d57078330",
                          "f59970d3-3d42-4584-907e-f5c57f5d46a1"
                        ],
                        "items": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "maxItems": 1000,
                        "minItems": 1,
                        "type": "array"
                      },
                      "channel": {
                        "description": "The unique channel identifier for `email`, `sms`, `open`, or `web` device types.",
                        "example": [
                          "00256e0b-b02f-4f12-a77f-4c3d57078330",
                          "f59970d3-3d42-4584-907e-f5c57f5d46a1"
                        ],
                        "items": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "maxItems": 1000,
                        "minItems": 1,
                        "type": "array"
                      },
                      "ios_channel": {
                        "description": "The unique channel identifier for an iOS device.",
                        "example": [
                          "00256e0b-b02f-4f12-a77f-4c3d57078330",
                          "f59970d3-3d42-4584-907e-f5c57f5d46a1"
                        ],
                        "items": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "maxItems": 1000,
                        "minItems": 1,
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "remove": {
                    "$ref": "#/components/schemas/tagGroupObject",
                    "description": "Removes the specified tags from the channel."
                  },
                  "set": {
                    "$ref": "#/components/schemas/tagGroupObject",
                    "description": "Assigns a list of tags exactly; any previously set tags that are not in this current list will be removed."
                  }
                },
                "required": [
                  "audience"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "properties": {
                    "ok": {
                      "description": "If true, your request was processed normally.",
                      "type": "boolean"
                    },
                    "warnings": {
                      "description": "Returned when some tag groups could not be updated. Contains a string indicating each tag group that could not be updated and the reason the update failed.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returns OK for success. If a tag request is partially valid, i.e. at least one tag group exists and is active, a 200 is returned with a warning in the response about the tag groups that failed to update. The tag groups listed in the warning will be CSV-formatted."
          },
          "400": {
            "$ref": "#/components/responses/400",
            "description": "Bad Request. Parsing or validating the request failed. You will get this error if a tag is present in both the add and remove fields."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403",
            "description": "Returned in cases when the app does not permit associations from the device. Secure tag groups require master secret to modify tags."
          }
        },
        "security": [
          {
            "basicAppAuth": [
            ]
          },
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Channel Tags",
        "tags": [
          "Channels",
          "Tags"
        ],
        "x-important": "A tag must be < 128 characters. A request with one or more tags longer than 128 characters will return a 400 response.\nWe support up to 1000 tags per channel. Adding more than 1000 tags per channel can cause latency and service interruptions. We strongly recommend removing unused tags whenever possible, and using [Custom Events](../../guides/messaging/user-guide/data/custom-events) when appropriate. Please contact Support if you believe your use case requires more than 1000 tags per channel, and they will help you find an alternative."
      }
    },
    "/api/channels/uninstall": {
      "post": {
        "description": "Uninstalls a channel, removing it and all accompanying analytic data (including Performance Analytics) from Airship systems in accordance with data privacy law compliance.\n\nUninstallation is handled automatically by the Airship SDK and push systems. If a user decides to opt in to communications again (either by using your app or other user preferences), they will create a new channel and a new set of analytic data.\nThe value of a channel ID may be the same as before however none of the associated metadata will persist when a user opts in again. A new channel ID will be created if the user clears their browser’s cookies and data, deletes and reinstalls the app, etc.\n\nSee [Individual Data Privacy Rights Under Data Privacy Laws](../../reference/privacy/individual-data-privacy/) for more information about data privacy law compliance.",
        "requestBody": {
          "content": {
            "application/json": {
              "example": [
                {
                  "channel_id": "{{ios_channel}}",
                  "device_type": "ios"
                },
                {
                  "channel_id": "{{android_channel}}",
                  "device_type": "android"
                }
              ],
              "schema": {
                "items": {
                  "description": "specifies the channel ID and device type you want to uninstall.",
                  "properties": {
                    "channel_id": {
                      "description": "The channel ID.",
                      "example": "bd36e8c7-5a73-47c0-9716-99fd3d4197d5",
                      "type": "string"
                    },
                    "device_type": {
                      "description": "The device type of the channel. Valid values are 'ios', 'amazon', 'android', 'web', 'open'.",
                      "enum": [
                        "ios",
                        "android",
                        "amazon",
                        "web",
                        "open"
                      ],
                      "example": "ios",
                      "type": "string"
                    }
                  },
                  "required": [
                    "channel_id",
                    "device_type"
                  ],
                  "type": "object"
                },
                "maxItems": 1000,
                "minItems": 1,
                "type": "array"
              }
            }
          }
        },
        "responses": {
          "202": {
            "content": {
              "application/vnd.urbanairship+json; version=3;": {
                "schema": {
                  "$ref": "#/components/schemas/okResponseObject"
                }
              }
            },
            "description": "Returns OK for success."
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Uninstall Channels",
        "tags": [
          "Channels",
          "Data Privacy Laws Compliance"
        ],
        "x-note": "Channel uninstallation, like channel creation, is an asynchronous operation, and may take some time to complete."
      }
    },
    "/api/channels/{channel_id}": {
      "get": {
        "description": "Fetch an individual channel registered to the app key, along with associated data and metadata.",
        "responses": {
          "200": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "properties": {
                    "channel": {
                      "$ref": "#/components/schemas/channelObject",
                      "description": "A channel object."
                    },
                    "ok": {
                      "description": "Success.",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Tags added to a channel using `/named_users/tags` are not returned from this endpoint. To view those tags, you must lookup the named user associated with the channel."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "security": [
          {
            "basicAppAuth": [
            ]
          },
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Channel Lookup",
        "tags": [
          "Channels"
        ],
        "x-note": "Tags added to a channel via the [Named Users tag endpoint](#operation-api-named_users-tags-post) will not appear with a request to this endpoint. To view those tags, you must [look up the Named User](#operation-api-named_users-get) associated with the channel.\n"
      },
      "parameters": [
        {
          "description": "The channel you want to look up.",
          "in": "path",
          "name": "channel_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/create-and-send": {
      "post": {
        "description": "Send a notification to an audience of SMS, email, or open channel addresses and simultaneously register new addresses in the `audience` as new channels. Addresses that are not yet associated with channels are registered as new channels. Addresses in the payload that are already registered to a `channel_id` and are either `opted_in` or have an `opted_in` value in the payload that is newer than the `opted_out` value associated with a channel will receive the notification, but are not re-registered as new channels.\nYou cannot update `opted_in` values for existing channels through this endpoint.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "audience": {
                  "create_and_send": [
                    {
                      "ua_address": "{{email_address}}",
                      "ua_commercial_opted_in": "2020-11-29T10:34:22"
                    }
                  ]
                },
                "campaigns": {
                  "categories": [
                    "winter sale",
                    "west coast"
                  ]
                },
                "device_types": [
                  "email"
                ],
                "notification": {
                  "email": {
                    "html_body": "<h1>Seasons Greetings</h1><p>Check out our winter deals!</p><p><a data-ua-unsubscribe=\"1\" title=\"unsubscribe\" href=\"http://unsubscribe.urbanairship.com/email/success.html\">Unsubscribe</a></p>",
                    "message_type": "commercial",
                    "plaintext_body": "Greetings! Check out our latest winter deals! [[ua-unsubscribe href=\"http://unsubscribe.urbanairship.com/email/success.html\"]]",
                    "reply_to": "no-reply@airship.com",
                    "sender_address": "{{sender_email_address}}",
                    "sender_name": "Airship",
                    "subject": "Welcome to the Winter Sale! "
                  }
                }
              },
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/email"
                  },
                  {
                    "$ref": "#/components/schemas/sms"
                  },
                  {
                    "$ref": "#/components/schemas/mms"
                  },
                  {
                    "$ref": "#/components/schemas/open"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "202": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "description": "A push response contains a list of identifiers for the notifications sent in the request.",
                  "properties": {
                    "content_urls": {
                      "description": "An array of URLs where the push payload contains a landing page action.",
                      "items": {
                        "format": "uri",
                        "pattern": "^https.*:\\/\\/.+",
                        "type": "string"
                      },
                      "maxItems": 100,
                      "minItems": 0,
                      "type": "array"
                    },
                    "localized_ids": {
                      "description": "An array of identifiers used for reporting. Each ID represents a localized message (push object with `localizations` array).",
                      "items": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message_ids": {
                      "description": "An array of message IDs, each uniquely identifying a Message Center message.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "ok": {
                      "description": "Success.",
                      "type": "boolean"
                    },
                    "operation_id": {
                      "description": "A unique string identifying the operation, useful for reporting and troubleshooting.",
                      "example": "ef625038-70a3-41f1-826f-57bc11dd625a",
                      "format": "uuid",
                      "type": "string"
                    },
                    "push_ids": {
                      "description": "An array of push IDs, each uniquely indentifying a push.",
                      "example": [
                        "00256e0b-b02f-4f12-a77f-4c3d57078330",
                        "f59970d3-3d42-4584-907e-f5c57f5d46a1"
                      ],
                      "items": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "maxItems": 100,
                      "minItems": 1,
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Because this operation sends messages, a successful response is nearly identical to a `/api/push` response."
          },
          "400": {
            "$ref": "#/components/responses/400",
            "description": "You can only create-and-send to a single platform per request. Attempting to register channels and send notifications for multiple `device_types` in the same request will cause a 400 response."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "413": {
            "$ref": "#/components/responses/413",
            "description": "The request included a payload larger than the maximum size of 5MiB."
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Create and Send",
        "tags": [
          "Create and Send"
        ],
        "x-warning": "Duplicate addresses in the `create-and-send` array might receive redundant notifications, or fewer notifications than expected. You should remove duplicate addresses from your request before sending a create-and-send notification."
      }
    },
    "/api/create-and-send/validate": {
      "post": {
        "description": "Validate a create-and-send payload. This endpoint will not create channels or send notifications; it only parses and validates your payload.",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "audience": {
                  "create_and_send": [
                    {
                      "ua_address": "{{email_address}}",
                      "ua_commercial_opted_in": "2020-11-29T10:34:22"
                    }
                  ]
                },
                "campaigns": {
                  "categories": [
                    "winter sale",
                    "west coast"
                  ]
                },
                "device_types": [
                  "email"
                ],
                "notification": {
                  "email": {
                    "html_body": "<h1>Seasons Greetings</h1><p>Check out our winter deals!</p><p><a data-ua-unsubscribe=\"1\" title=\"unsubscribe\" href=\"http://unsubscribe.urbanairship.com/email/success.html\">Unsubscribe</a></p>",
                    "message_type": "commercial",
                    "plaintext_body": "Greetings! Check out our latest winter deals! [[ua-unsubscribe href=\"http://unsubscribe.urbanairship.com/email/success.html\"]]",
                    "reply_to": "no-reply@airship.com",
                    "sender_address": "{{sender_email_address}}",
                    "sender_name": "Airship",
                    "subject": "Welcome to the Winter Sale! "
                  }
                }
              },
              "schema": {
                "discriminator": {
                  "propertyName": "device_types"
                },
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/email"
                  },
                  {
                    "$ref": "#/components/schemas/sms"
                  },
                  {
                    "$ref": "#/components/schemas/mms"
                  },
                  {
                    "$ref": "#/components/schemas/open"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "413": {
            "$ref": "#/components/responses/413",
            "description": "The request included a payload larger than the maximum size of 5MiB."
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Validate Create and Send Payload",
        "tags": [
          "Create and Send"
        ]
      }
    },
    "/api/custom-events": {
      "parameters": [
        {
          "$ref": "#/components/parameters/appKeyHeader"
        }
      ],
      "post": {
        "description": "Submit an externally-generated custom event, associated with a channel ID or named user, to Airship. You can use these events as custom event triggers for Automation or Journeys and can use handlebars to personalize messages using custom event properties (information in the `body.properties` object).\n",
        "requestBody": {
          "content": {
            "application/json": {
              "example": [
                {
                  "body": {
                    "interaction_id": "your.store/us/en_us/pd/shoe/pid-11046546/pgid-10978234",
                    "interaction_type": "url",
                    "name": "purchased",
                    "properties": {
                      "brand": "Victory Sneakers",
                      "colors": [
                        "red",
                        "blue"
                      ],
                      "description": "Sneaker purchase",
                      "items": [
                        {
                          "price": "$ 79.95",
                          "text": "New Line Sneakers"
                        },
                        {
                          "price": "$ 79.95",
                          "text": "Old Line Sneakers"
                        },
                        {
                          "price": "$ 79.95",
                          "text": "Blue Line Sneakers"
                        }
                      ],
                      "name": "Hugh Manbeing",
                      "userLocation": {
                        "state": "CO",
                        "zip": "80202"
                      }
                    },
                    "session_id": "22404b07-3f8f-4e42-a4ff-a996c18fa9f1",
                    "transaction": "886f53d4-3e0f-46d7-930e-c2792dac6e0a",
                    "value": 239.85
                  },
                  "occurred": "{{yesterday_date_time}}",
                  "user": {
                    "named_user_id": "{{named_user_id}}"
                  }
                }
              ],
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/customEventObject"
                },
                "maxItems": 100,
                "minItems": 1,
                "type": "array"
              }
            }
          },
          "description": "An array of custom event objects."
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "properties": {
                    "ok": {
                      "description": "Success.",
                      "type": "boolean"
                    },
                    "operation_id": {
                      "description": "A unique string identifying the API interaction. You can use the `operation_id` in support requests if something goes wrong.",
                      "example": "ef625038-70a3-41f1-826f-57bc11dd625a",
                      "format": "uuid",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned on success."
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "security": [
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Add Custom Events",
        "tags": [
          "Custom Events"
        ],
        "x-note": "* Requests complete validation before returning a response.\n* Requests are authenticated with a bearer token which can provide access to this resource alone, or to this resource and others.\n* Requests are rate limited to 500 events per second per app.\n* The `name` value inside `body` must not contain any uppercase characters, or the event will be rejected with a 400 status code.\n"
      }
    },
    "/api/experiments": {
      "get": {
        "description": "List experiments, sorted by `created_at` date/time from newest to oldest. Responses are paginated. Use optional `limit` and `offset` parameters to navigate results.",
        "parameters": [
          {
            "description": "Positive maximum number of elements to return per page. The default `limit` is 10 entries with a maximum of 100 entries.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "example": 10,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "A zero-based integer offset into the result set. If you do not use an offset, results will begin with the most recently sent experiment. If `offset` is greater than the number of queryable experiments, an empty result will be returned.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "description": "The number of items returned in this page of results.",
                      "type": "integer"
                    },
                    "experiments": {
                      "description": "Experiment objects sorted by either `created_at` from newest to oldest. The number of objects will never exceed the limit specified in the request.",
                      "items": {
                        "$ref": "#/components/schemas/experimentObject"
                      },
                      "type": "array"
                    },
                    "next_page": {
                      "description": "A relative URL leading to the next page of results. If there are no more results, next_page is absent.",
                      "nullable": false,
                      "type": "string"
                    },
                    "ok": {
                      "description": "If true, the call was successful.",
                      "type": "boolean"
                    },
                    "total_count": {
                      "description": "The total number of results.",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned on success, with the JSON representation of the experiments in the body of the response."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          }
        ],
        "summary": "Experiment Listing",
        "tags": [
          "A/B Tests"
        ]
      },
      "post": {
        "description": "Create an experiment. The body of the request should consist of a single experiment object. The experiment is processed and sent immediately unless a schedule is present.",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "audience": {
                  "tag": "earlyBirds"
                },
                "device_types": [
                  "ios",
                  "android"
                ],
                "name": "Experiment 1",
                "variants": [
                  {
                    "push": {
                      "notification": {
                        "alert": "message 1"
                      }
                    },
                    "schedule": {
                      "scheduled_time": "{{sched_5m}}"
                    }
                  },
                  {
                    "push": {
                      "notification": {
                        "alert": "message 2"
                      }
                    },
                    "schedule": {
                      "scheduled_time": "{{sched_5m}}"
                    }
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/experimentObject"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "The response body for an experiment request.",
                  "properties": {
                    "experiment_id": {
                      "description": "Unique identifier for an experiment.",
                      "example": "0f7704e9-5dc0-4f7d-9964-e89055701b0a",
                      "format": "uuid",
                      "type": "string"
                    },
                    "ok": {
                      "description": "If true, the expeiment was successfully created. If false, the expriment was not created.",
                      "type": "boolean"
                    },
                    "operation_id": {
                      "description": "A unique string that represents a single API call, used to identify the operation or side-effects in reporting and troubleshooting logs.",
                      "example": "ef625038-70a3-41f1-826f-57bc11dd625a",
                      "format": "uuid",
                      "type": "string"
                    },
                    "push_id": {
                      "description": "Unique identifier for a push.",
                      "example": "7e13f060-594c-11e4-8ed6-0800200c9a66",
                      "format": "uuid",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "The experiment was created.",
            "headers": {
              "Location": {
                "description": "The newly created experiment.",
                "schema": {
                  "format": "uri",
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          }
        ],
        "summary": "Create Experiment (A/B Test)",
        "tags": [
          "A/B Tests"
        ]
      }
    },
    "/api/experiments/scheduled": {
      "get": {
        "description": "List scheduled experiments in order, from closest to the current date-time to farthest (i.e. the experiments scheduled to occur soonest will appear at the top of the list). Responses are paginated, using optional `limit` and `offset` parameters.",
        "parameters": [
          {
            "description": "Positive maximum number of elements to return per page. The default `limit` is 10 entries with a maximum of 100 entries.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "example": 10,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "A zero-based integer offset into the result set. If you do not use an offset, results will begin with experiment scheduled to begin at the soonest date-time. If the `offset` is greater than the number of queryable experiments, the result set will be empty.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "description": "The number of items in this page of results.",
                      "type": "integer"
                    },
                    "experiments": {
                      "description": "Experiments listed by `scheduled_time` in ascending time order. The number of objects will never exceed the `limit` specified in the request.",
                      "items": {
                        "$ref": "#/components/schemas/experimentObject"
                      },
                      "type": "array"
                    },
                    "next_page": {
                      "description": "A relative URL leading to the next page of results. If there are no more results, next_page is absent.",
                      "nullable": false,
                      "type": "string"
                    },
                    "ok": {
                      "description": "If true, the operation completed successfully and returns an expected result set.",
                      "type": "boolean"
                    },
                    "total_count": {
                      "description": "The total number of results.",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned on success, with the JSON representation of the experiments in the body of the response."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          }
        ],
        "summary": "Scheduled Experiment Listing",
        "tags": [
          "A/B Tests"
        ]
      }
    },
    "/api/experiments/scheduled/{experiment_id}": {
      "delete": {
        "description": "Delete a scheduled experiment. You can only delete experiments before they start; attempting to delete an experiment that has already started or completed will return an HTTP 405 response (\"Method not allowed\").",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "The response body for a pipelines deletion request.",
                  "properties": {
                    "ok": {
                      "description": "Success.",
                      "type": "boolean"
                    },
                    "operation_id": {
                      "description": "A unique string that represents a single API call, used to identify the operation or side-effects in reporting and troubleshooting logs.",
                      "example": "ef625038-70a3-41f1-826f-57bc11dd625a",
                      "format": "uuid",
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Returned if the experiment has been succesfully deleted."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405",
            "description": "Experiments can only be deleted before they start; afterwards, a HTTP 405 is returned."
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          }
        ],
        "summary": "Delete Experiment",
        "tags": [
          "A/B Tests"
        ]
      },
      "parameters": [
        {
          "description": "The unique identifier of the experiment.",
          "in": "path",
          "name": "experiment_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/experiments/validate": {
      "post": {
        "description": "Accepts the same range of payloads as `/api/experiments`, but only parses and validates the payload without creating the experiment. This does the same amount of validation as the creation endpoint, including platform-specific validation, e.g., APNS byte limit checks. While this operation ensures the experiment is technically valid, it does not guarantee that a resulting push will succeed. An experiment may validate and still fail to be delivered. For example, you may have a valid experiment with no devices in your audience.",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "audience": {
                  "tag": "earlyBirds"
                },
                "device_types": [
                  "ios",
                  "android"
                ],
                "name": "Experiment 1",
                "variants": [
                  {
                    "push": {
                      "notification": {
                        "alert": "message 1"
                      }
                    }
                  },
                  {
                    "push": {
                      "notification": {
                        "alert": "message 2"
                      }
                    }
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/experimentObject"
              }
            }
          },
          "description": "A single experiment object.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "ok": {
                      "description": "If true, the operation completed successfully and returns an expected response.",
                      "type": "boolean"
                    },
                    "operation_id": {
                      "description": "A unique string that represents a single API call, used to identify the operation or side-effects in reporting and troubleshooting logs.",
                      "example": "ef625038-70a3-41f1-826f-57bc11dd625a",
                      "format": "uuid",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "The experiment is valid."
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          }
        ],
        "summary": "Validate Experiment",
        "tags": [
          "A/B Tests"
        ]
      }
    },
    "/api/experiments/{experiment_id}": {
      "get": {
        "description": "Look up an experiment (A/B Test).",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "experiment": {
                      "$ref": "#/components/schemas/experimentObject"
                    },
                    "ok": {
                      "description": "If true, the operation completed successfully and returns a result set.",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned on success, with the JSON representation of the experiment in the body of the response."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          }
        ],
        "summary": "Experiment Lookup",
        "tags": [
          "A/B Tests"
        ]
      },
      "parameters": [
        {
          "description": "The ID of the experiment you want to look up.",
          "in": "path",
          "name": "experiment_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/feeds": {
      "post": {
        "description": "Create a new feed.",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "feed_url": "http://example.com/atom.xml",
                "template": {
                  "audience": {
                    "named_user": "{{named_user_id}}"
                  },
                  "device_types": [
                    "ios",
                    "android"
                  ],
                  "notification": {
                    "alert": "Check this out! - {{ title }}",
                    "ios": {
                      "alert": "New item! - {{ title }}"
                    }
                  }
                }
              },
              "schema": {
                "properties": {
                  "feed_url": {
                    "description": "The full URL to the RSS or Atom feed.",
                    "example": "http://example.com/atom.xml",
                    "type": "string"
                  },
                  "template": {
                    "description": "A template for the API v3 push object.",
                    "properties": {
                      "audience": {
                        "$ref": "#/components/schemas/audienceSelector"
                      },
                      "device_types": {
                        "description": "An array containing one or more strings identifying targeted platforms. Accepted platforms are\n    `ios`, `android`, `amazon`, `wns`, `web`, `sms`, `email`, and `open::<open_platform_name>` (using the `open_platform_name` value of your open channel).",
                        "items": {
                          "enum": [
                            "android",
                            "amazon",
                            "ios",
                            "web",
                            "wns",
                            "sms",
                            "email",
                            "open::open_platform_name"
                          ],
                          "type": "string"
                        },
                        "minItems": 1,
                        "title": "Device Types Selector",
                        "type": "array"
                      },
                      "notification": {
                        "$ref": "#/components/schemas/notificationObject"
                      }
                    },
                    "title": "Feed Template",
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "An object containing the `feed_url` and template to create a new feed.",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "properties": {
                    "api_version": {
                      "description": "The API version.",
                      "example": "v3",
                      "type": "string"
                    },
                    "feed_url": {
                      "description": "The full URL to the RSS or Atom feed.",
                      "example": "http://example.com/atom.xml",
                      "type": "string"
                    },
                    "id": {
                      "description": "The newly created feed ID.",
                      "example": "SL_QBv8nT2yw5W9m_kDhQA",
                      "type": "string"
                    },
                    "last_checked": {
                      "description": "The last time we saw a new entry for this feed.",
                      "example": "2018-05-11T16:20:15.523",
                      "type": "string"
                    },
                    "template": {
                      "description": "A template for the API v3 push object.",
                      "properties": {
                        "audience": {
                          "$ref": "#/components/schemas/audienceSelector"
                        },
                        "device_types": {
                          "description": "An array containing one or more strings identifying targeted platforms. Accepted platforms are\n    `ios`, `android`, `amazon`, `wns`, `web`, `sms`, `email`, and `open::<open_platform_name>` (using the `open_platform_name` value of your open channel).",
                          "items": {
                            "enum": [
                              "android",
                              "amazon",
                              "ios",
                              "web",
                              "wns",
                              "sms",
                              "email",
                              "open::open_platform_name"
                            ],
                            "type": "string"
                          },
                          "minItems": 1,
                          "title": "Device Types Selector",
                          "type": "array"
                        },
                        "notification": {
                          "$ref": "#/components/schemas/notificationObject"
                        }
                      },
                      "title": "Feed Template",
                      "type": "object"
                    },
                    "url": {
                      "description": "The location of the feed entry. Can be used for altering or removing the feed later.",
                      "example": "https://go.urbanairship.com/api/feeds/SL_QBv8nT2yw5W9m_kDhQA",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "The feed was created.",
            "headers": {
              "Location": {
                "description": "The newly created feed.",
                "schema": {
                  "format": "uri",
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          }
        ],
        "summary": "Create a New Feed",
        "tags": [
          "Feeds"
        ]
      }
    },
    "/api/feeds/{feed_id}": {
      "delete": {
        "description": "Removes a feed from the monitoring service, and stops new pushes from being sent.",
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          }
        ],
        "summary": "Delete a Feed",
        "tags": [
          "Feeds"
        ]
      },
      "get": {
        "description": "Returns information about a particular feed.",
        "responses": {
          "200": {
            "content": {
              "application/json;": {
                "schema": {
                  "properties": {
                    "api_version": {
                      "description": "The API version.",
                      "example": "v3",
                      "type": "string"
                    },
                    "feed_url": {
                      "description": "The full URL to the RSS or Atom feed.",
                      "example": "http://example.com/atom.xml",
                      "type": "string"
                    },
                    "id": {
                      "description": "The newly created feed ID.",
                      "example": "SL_QBv8nT2yw5W9m_kDhQA",
                      "type": "string"
                    },
                    "last_checked": {
                      "description": "The last time we saw a new entry for this feed.",
                      "example": "2018-05-11T16:20:15.523",
                      "type": "string"
                    },
                    "template": {
                      "description": "A template for the API v3 push object.",
                      "properties": {
                        "audience": {
                          "$ref": "#/components/schemas/audienceSelector"
                        },
                        "device_types": {
                          "description": "An array containing one or more strings identifying targeted platforms. Accepted platforms are\n    `ios`, `android`, `amazon`, `wns`, `web`, `sms`, `email`, and `open::<open_platform_name>` (using the `open_platform_name` value of your open channel).",
                          "items": {
                            "enum": [
                              "android",
                              "amazon",
                              "ios",
                              "web",
                              "wns",
                              "sms",
                              "email",
                              "open::open_platform_name"
                            ],
                            "type": "string"
                          },
                          "minItems": 1,
                          "title": "Device Types Selector",
                          "type": "array"
                        },
                        "notification": {
                          "$ref": "#/components/schemas/notificationObject"
                        }
                      },
                      "title": "Feed Template",
                      "type": "object"
                    },
                    "url": {
                      "description": "The location of the feed entry. Can be used for altering or removing the feed later.",
                      "example": "https://go.urbanairship.com/api/feeds/SL_QBv8nT2yw5W9m_kDhQA",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned on success, with the JSON representation of the feed in the body of the response."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          }
        ],
        "summary": "Feed Details",
        "tags": [
          "Feeds"
        ]
      },
      "parameters": [
        {
          "description": "A required string ID of the feed.",
          "in": "path",
          "name": "feed_id",
          "required": true,
          "schema": {
            "example": "SL_QBv8nT2yw5W9m_kDhQA",
            "type": "string"
          }
        }
      ],
      "put": {
        "description": "Updates a feed with a new template.",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "feed_url": "http://example.com/atom.xml",
                "template": {
                  "audience": {
                    "named_user": "{{named_user_id}}"
                  },
                  "device_types": [
                    "ios",
                    "android"
                  ],
                  "notification": {
                    "alert": "Check out this update! - {{ title }}",
                    "ios": {
                      "alert": "Updated item! - {{ title }}"
                    }
                  }
                }
              },
              "schema": {
                "description": "A template for the API v3 push object.",
                "properties": {
                  "audience": {
                    "$ref": "#/components/schemas/audienceSelector"
                  },
                  "device_types": {
                    "description": "An array containing one or more strings identifying targeted platforms. Accepted platforms are\n    `ios`, `android`, `amazon`, `wns`, `web`, `sms`, `email`, and `open::<open_platform_name>` (using the `open_platform_name` value of your open channel).",
                    "items": {
                      "enum": [
                        "android",
                        "amazon",
                        "ios",
                        "web",
                        "wns",
                        "sms",
                        "email",
                        "open::open_platform_name"
                      ],
                      "type": "string"
                    },
                    "minItems": 1,
                    "title": "Device Types Selector",
                    "type": "array"
                  },
                  "notification": {
                    "$ref": "#/components/schemas/notificationObject"
                  }
                },
                "title": "Feed Template",
                "type": "object"
              }
            }
          },
          "description": "A single feed template."
        },
        "responses": {
          "200": {
            "content": {
              "application/json;": {
                "schema": {
                  "properties": {
                    "api_version": {
                      "description": "The API version.",
                      "example": "v3",
                      "type": "string"
                    },
                    "feed_url": {
                      "description": "The full URL to the RSS or Atom feed.",
                      "example": "http://example.com/atom.xml",
                      "type": "string"
                    },
                    "id": {
                      "description": "The newly created feed ID.",
                      "example": "SL_QBv8nT2yw5W9m_kDhQA",
                      "type": "string"
                    },
                    "last_checked": {
                      "description": "The last time we saw a new entry for this feed.",
                      "example": "2018-05-11T16:20:15.523",
                      "type": "string"
                    },
                    "template": {
                      "description": "A template for the API v3 push object.",
                      "properties": {
                        "audience": {
                          "$ref": "#/components/schemas/audienceSelector"
                        },
                        "device_types": {
                          "description": "An array containing one or more strings identifying targeted platforms. Accepted platforms are\n    `ios`, `android`, `amazon`, `wns`, `web`, `sms`, `email`, and `open::<open_platform_name>` (using the `open_platform_name` value of your open channel).",
                          "items": {
                            "enum": [
                              "android",
                              "amazon",
                              "ios",
                              "web",
                              "wns",
                              "sms",
                              "email",
                              "open::open_platform_name"
                            ],
                            "type": "string"
                          },
                          "minItems": 1,
                          "title": "Device Types Selector",
                          "type": "array"
                        },
                        "notification": {
                          "$ref": "#/components/schemas/notificationObject"
                        }
                      },
                      "title": "Feed Template",
                      "type": "object"
                    },
                    "url": {
                      "description": "The location of the feed entry. Can be used for altering or removing the feed later.",
                      "example": "https://go.urbanairship.com/api/feeds/SL_QBv8nT2yw5W9m_kDhQA",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned if the feed has been succesfully updated."
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          }
        ],
        "summary": "Update a Feed",
        "tags": [
          "Feeds"
        ]
      }
    },
    "/api/lists": {
      "get": {
        "description": "Retrieve information about all static lists. This call returns a list of metadata that will not contain the actual lists of users.",
        "responses": {
          "200": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "properties": {
                    "lists": {
                      "description": "An array of List Objects.",
                      "items": {
                        "$ref": "#/components/schemas/listObject"
                      },
                      "type": "array"
                    },
                    "ok": {
                      "description": "Success.",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Lists metadata retrieved successfully."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "All Lists",
        "tags": [
          "Static Lists"
        ]
      },
      "post": {
        "description": "Create a static list. The body of the request will contain several of the list object parameters, but the actual list content will be provided by a second call to the upload endpoint.",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "description": "loyalty program platinum members",
                "extra": {
                  "key": "value"
                },
                "name": "platinum_members"
              },
              "schema": {
                "$ref": "#/components/schemas/listObject"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "$ref": "#/components/schemas/okResponseObject"
                }
              }
            },
            "description": "Returns OK for success.",
            "headers": {
              "Location": {
                "description": "The URI of the list, used for later updates.",
                "schema": {
                  "format": "uri",
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403",
            "description": "Forbidden. Authentication was correct, but the user does not have permission to access the requested API, e.g. the API may not be used to create or modify lists with `ua_` prefixed name."
          },
          "409": {
            "$ref": "#/components/responses/409",
            "description": "The app has reached the maximum number of allowed lists (error_code 40906). A list with that name already exists (error_code 40907). List is already processing recently uploaded CSV (error_code 40910)."
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Create List",
        "tags": [
          "Static Lists"
        ],
        "x-note": "`Content-Encoding: gzip` is supported (and recommended) on this endpoint to reduce network traffic."
      }
    },
    "/api/lists/{list_name}": {
      "delete": {
        "description": "Delete a list. If you are attempting to update a current list by deleting it and then recreating it with new data, stop and go to the upload endpoint. There is no need to delete a list before uploading a new CSV file. Moreover, once you delete a list, you will be unable to create a list with the same name as the deleted list.",
        "parameters": [
          {
            "description": "The name of the list.",
            "in": "path",
            "name": "list_name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "You cannot delete or modify lists with a \"ua_\" prefixed `name`."
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Delete a List",
        "tags": [
          "Static Lists"
        ],
        "x-warning": "If you are attempting to update a current list by deleting it and then recreating it with new data, stop and go to the [upload endpoint](#operation-api-lists-name-csv-put). There is no need to delete a list before uploading a new CSV file. Moreover, once you delete a list, you will be unable to create a list with the same name as the deleted list."
      },
      "get": {
        "description": "Retrieve information about one static list, specified in the URL. When looking up lists, the returned information may actually be a combination of values from both the last uploaded list and the last successfully processed list. If you create a list successfully, and then you update it and the processing step fails, then the list `status` will read `failed`, but the `channel_count` and `last_modified` fields will contain information on the last successfully processed list.",
        "parameters": [
          {
            "description": "The name of the list.",
            "in": "path",
            "name": "list_name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "$ref": "#/components/schemas/listObject"
                }
              }
            },
            "description": "Returns OK for success."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Get a Single List",
        "tags": [
          "Static Lists"
        ]
      },
      "put": {
        "description": "Update the metadata (`description`, `extras`, etc.) of a static list.",
        "parameters": [
          {
            "description": "The name of the list.",
            "in": "path",
            "name": "list_name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "description": "VIP loyalty program platinum members",
                "extra": {
                  "key": "value"
                },
                "name": "platinum_members"
              },
              "schema": {
                "$ref": "#/components/schemas/listMetadataObject"
              }
            }
          },
          "description": "The body of the request will contain a list metadata object, though you can omit the `name` attribute. If present, it must match the name provided in the URL. You cannot change the name of a list; it is the primary identifier for the list.",
          "required": true
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200"
          },
          "400": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Bad Request. Parsing or validating the request failed. error_code 40001: Attempted list rename. List renaming is not allowed."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Forbidden. Authentication was correct, but the user does not have permission to access the requested API, e.g. the API may not be used to create or modify lists with `ua_` prefixed name."
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Update list metadata",
        "tags": [
          "Static Lists"
        ],
        "x-note": "If you are trying to update the list contents, please see the [list upload](#operation-api-lists-name-csv-put) endpoint. The update endpoint is used to update a list's metadata rather than the actual list of device identifiers."
      }
    },
    "/api/lists/{list_name}/csv": {
      "get": {
        "description": "Allows you to download the contents of a static list (as opposed to a `GET` `/api/lists/{list_name}` which will return metadata about the list). When you upload a list, `alias` and `named_user` entries are resolved to channels. Therefore, the CSV output from this endpoint will be in the same format as the uploaded list, but will only contain `ios_channel`, `android_channel` and `amazon_channel` entries.\n",
        "responses": {
          "200": {
            "content": {
              "text/csv": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Returns a CSV list of channels."
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          }
        ],
        "summary": "Download a list of channels",
        "tags": [
          "Static Lists"
        ]
      },
      "parameters": [
        {
          "description": "The `name` of the list you want to retrieve or update.",
          "in": "path",
          "name": "list_name",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "description": "\nReplace the contents of an existing static list via CSV file upload. Uploads must be newline delimited\nidentifiers (text/CSV) with commas as the delimiter.\n\nThe CSV format is two columns: `identifier_type` and `identifier`. The `identifier` is the associated identifier you wish to send to. The `identifier_type`\nmust be one of:\n\n  * `named_user`\n  * `ios_channel`\n  * `android_channel`\n  * `amazon_channel`\n  * `sms_channel`\n  * `email_channel`\n  * `open_channel`\n  * `web_channel`\n",
        "requestBody": {
          "content": {
            "text/csv": {
              "schema": {
                "example": [
                  "C:/Users/someUser/Downloads/weekly_offers.csv"
                ],
                "format": "binary",
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "$ref": "#/components/responses/202"
          },
          "400": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Bad Request. Parsing or validating the request failed.\n\n| error_code | Description |\n|---|---|\n| 40002: | CSV contains too many identifiers. |\n| 40003: | CSV contains an entry with a column count other than 2. |\n| 40004: | CSV contains an invalid `identifier_type`. |\n| 40005: | CSV contains a channel `identifier` that is not a valid UUID. |\n"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403",
            "description": "Forbidden. Authentication was correct, but the user does not have permission to access the requested API, e.g. the API may not be used to create or modify lists with `ua_` prefixed name."
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Update list contents",
        "tags": [
          "Static Lists"
        ],
        "x-note": "The maximum number of `identifier_type,identifier` pairs that may be uploaded to a list is 10 million. `Content-Encoding: gzip` is supported (and recommended) on this endpoint to reduce network traffic.",
        "x-warning": "If an attempt to upload a list times out due to a poor connection, you must re-upload the list from scratch. Because we want to ensure that the entirety of a given list is successfully uploaded, we do not support partial list uploads."
      }
    },
    "/api/named_users": {
      "get": {
        "description": "Return a list of named users or lookup a single named user by `named_user_id`.",
        "responses": {
          "200": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "oneOf": [
                    {
                      "description": "Response for a single `named_user_id` query.",
                      "properties": {
                        "named_user": {
                          "$ref": "#/components/schemas/namedUserResponseBody"
                        },
                        "ok": {
                          "description": "Success.",
                          "type": "boolean"
                        }
                      },
                      "title": "Named User Lookup Response Object"
                    },
                    {
                      "description": "Response returned when performing this operation without a query.",
                      "properties": {
                        "named_users": {
                          "items": {
                            "$ref": "#/components/schemas/namedUserResponseBody"
                          },
                          "type": "array"
                        },
                        "next_page": {
                          "description": "There might be more than one page of results for this listing. Follow this URL if it is present to the next page of results.",
                          "example": "https://go.urbanairship.com/api/named_users?start=john_doe",
                          "format": "url",
                          "type": "string"
                        },
                        "ok": {
                          "description": "Success.",
                          "type": "boolean"
                        }
                      },
                      "title": "Named User Listing Response Body"
                    }
                  ]
                }
              }
            },
            "description": "Returns OK for success."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Named User Listing or Lookup",
        "tags": [
          "Named Users"
        ]
      },
      "parameters": [
        {
          "description": "The `named_user_id` you want to look up. When querying a `named_user_id`, the response contains a single `named_user` object.  If you do not query a specific `named_user_id`, the response returns an array of `named_users`, in which each object represents an individual named user.",
          "in": "query",
          "name": "id",
          "required": false,
          "schema": {
            "example": "{{named_user_id}}",
            "type": "string"
          }
        }
      ]
    },
    "/api/named_users/associate": {
      "post": {
        "description": "Associate a channel or email address with a named user (`named_user_id`). If the named_user_id does not already exist, this operation will create it. If the `channel_id` or `email address` is already associated with the `named_user_id`, this operation will do nothing.",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "channel_id": "{{ios_channel}}",
                "device_type": "ios",
                "named_user_id": "{{named_user_id}}"
              },
              "schema": {
                "oneOf": [
                  {
                    "properties": {
                      "channel_id": {
                        "description": "The channel ID you want to associate with a named user.",
                        "example": "9c36e8c7-5a73-47c0-9716-99fd3d4197d5",
                        "format": "uuid",
                        "type": "string"
                      },
                      "device_type": {
                        "description": "The device type of the channel, e.g., `ios`, `android`, `amazon`. Do not specify `device_type` for web, email, sms, or open channels.",
                        "enum": [
                          "ios",
                          "android",
                          "amazon"
                        ],
                        "example": "ios",
                        "type": "string"
                      },
                      "named_user_id": {
                        "description": "A string value identifying the new user with no leading or trailing whitespace.  If the named_user_id does not already exist, this operation will create a new named user and associate the `channel_id` with it.",
                        "example": "john_doe",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "^[^\\s].{1,125}\\S$",
                        "type": "string"
                      }
                    },
                    "required": [
                      "named_user_id",
                      "channel_id"
                    ],
                    "title": "Associate channel_id with named user",
                    "type": "object"
                  },
                  {
                    "properties": {
                      "email_address": {
                        "description": "The email address you want to associate with a named user.",
                        "example": "user@company.com",
                        "format": "email",
                        "type": "string"
                      },
                      "named_user_id": {
                        "description": "A string value identifying the new user with no leading or trailing whitespace.  If the named_user_id does not already exist, this operation will create a new named user and associate the `channel_id` with it.",
                        "example": "john_doe",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "^[^\\s].{1,125}\\S$",
                        "type": "string"
                      }
                    },
                    "required": [
                      "named_user_id",
                      "email_address"
                    ],
                    "title": "Associate email with named user",
                    "type": "object"
                  }
                ]
              }
            }
          },
          "description": "Named user association requires a `channel_id` or `email_address`. Do not provide both in the same request.",
          "required": true
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "security": [
          {
            "basicAppAuth": [
            ]
          },
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Named Users Association",
        "tags": [
          "Named Users"
        ],
        "x-warning": "If a channel has an assigned named user and you make an additional call to associate that same channel with a new named user, the original named user association will be removed and the new named user and associated data will take its place. Additionally, all tags associated to the original named user cannot be used to address this channel unless they are also associated with the new named user."
      }
    },
    "/api/named_users/disassociate": {
      "post": {
        "description": "Disassociate a channel or an email address from a `named_user_id`.",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "channel_id": "{{ios_channel}}",
                "device_type": "ios",
                "named_user_id": "{{named_user_id}}"
              },
              "schema": {
                "properties": {
                  "channel_id": {
                    "description": "The channel or email address you want to disassociate from the `named_user_id`. The schema should include one of `email_address` or `channel_id`, but not both.",
                    "example": "9c36e8c7-5a73-47c0-9716-99fd3d4197d5",
                    "format": "uuid",
                    "type": "string"
                  },
                  "email_address": {
                    "description": "The email address you want to disassociate from the `named_user_id`.",
                    "example": "user@company.com",
                    "format": "email",
                    "type": "string"
                  },
                  "named_user_id": {
                    "description": "The named user that you want to remove the channel from.",
                    "example": "john_doe",
                    "maxLength": 128,
                    "minLength": 1,
                    "pattern": "^[^\\s].{1,125}\\S$",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "security": [
          {
            "basicAppAuth": [
            ]
          },
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Named Users Disassociation",
        "tags": [
          "Named Users"
        ]
      }
    },
    "/api/named_users/scoped/{named_user_id}": {
      "post": {
        "description": "Supports multiple operations on a named user within a single request for a specified `scope`. The supported operation is\n`subscription_lists`. The behavior of each of these operations are the same as their individual request counterpart.\n",
        "parameters": [
          {
            "description": "A string value identifying the user with no leading or trailing whitespace.\nIf this value contains reserved or special characters they must be URL encoded.\n",
            "in": "path",
            "name": "named_user_id",
            "required": true,
            "schema": {
              "example": "john_doe",
              "maxLength": 128,
              "minLength": 1,
              "pattern": "^[^\\s].{1,125}\\S$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "scoped": {
                    "description": "An array of scopes and subscription lists.",
                    "items": {
                      "$ref": "#/components/schemas/scopedBatchItem"
                    },
                    "type": "array"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "security": [
          {
            "basicAppAuth": [
            ]
          },
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Named User Scoped Batch Operations",
        "tags": [
          "Named Users"
        ],
        "x-important": "The path parameter `named_user_id` should be url encoded to ensure it is handled correctly.\nRequirements of `named_user_id` can be found [here](#operation-api-named_users-associate-post-associate-channel_id-with-named-user-named_user_id).\n"
      }
    },
    "/api/named_users/tags": {
      "post": {
        "description": "Add, remove, or set tags on a named user. A single request body may contain add and/or remove objects, or a single set field. At least one of the add, remove, or set objects must be present in a request.",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "add": {
                  "{{tag_group_1}}": [
                    "tag1",
                    "tag2",
                    "tag3"
                  ],
                  "{{tag_group_2}}": [
                    "tag1",
                    "tag4",
                    "tag5"
                  ]
                },
                "audience": {
                  "named_user_id": [
                    "user-1",
                    "user-2",
                    "{{named_user_id}}"
                  ]
                },
                "remove": {
                  "{{tag_group_2}}": [
                    "tag6",
                    "tag7"
                  ]
                }
              },
              "schema": {
                "properties": {
                  "add": {
                    "$ref": "#/components/schemas/tagGroupObject",
                    "description": "Add the list of tags to the named user(s), but do not remove any. If the tags are already present, they are not modified."
                  },
                  "audience": {
                    "description": "The named user(s) you want to associate/disassociate tags with.",
                    "properties": {
                      "named_user_id": {
                        "items": {
                          "description": "The named_user_id(s) you want add tags to or remove tags from.",
                          "example": [
                            "namedUser1",
                            "namedUser2"
                          ],
                          "maxLength": 128,
                          "minLength": 1,
                          "pattern": "^[^\\s].{1,125}\\S$",
                          "type": "string",
                          "uniqueItems": true
                        },
                        "maxItems": 1000,
                        "minItems": 1,
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "remove": {
                    "$ref": "#/components/schemas/tagGroupObject",
                    "description": "Remove the list of tags from the named user(s), but do not remove any others. If the tags are not currently present, nothing happens."
                  },
                  "set": {
                    "$ref": "#/components/schemas/tagGroupObject",
                    "description": "Set these tags for the audience; any tags previously associated with the audience tags that are not in this current list are removed."
                  }
                },
                "required": [
                  "audience"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Body may contain warnings about portions of the request which\nwere not processed.\n",
                  "properties": {
                    "ok": {
                      "description": "Set to `true` when status code is `200`.\n",
                      "type": "boolean"
                    },
                    "tag_warnings": {
                      "description": "Warnings encountered when processing tags for this named user.\n",
                      "type": "string"
                    }
                  },
                  "title": "Named User Response",
                  "type": "object"
                }
              }
            },
            "description": "If a tag request is partially valid, i.e. at least one tag group exists and is active, a 200 will be returned with a\nwarning in the response about the tag groups that failed to update. The tag groups listed in the warning will be csv format.\n"
          },
          "400": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Parsing or validating the request failed. You will see this error if the same tag is present in both the add and remove fields."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403",
            "description": "Secure tag groups require master secret to modify tags, otherwise a 403 Forbidden response is returned.\n"
          }
        },
        "security": [
          {
            "basicAppAuth": [
            ]
          },
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Named Users Tags",
        "tags": [
          "Named Users",
          "Tags"
        ],
        "x-important": "A tag must be < 128 characters. A request with one or more tags longer than 128 characters will return a 400 response.\nWe support up to 1000 tags per named user. Adding more than 1000 tags per named user can cause latency and service interruptions. We strongly recommend removing unused tags whenever possible, and using [Custom Events](../../guides/messaging/user-guide/data/custom-events) when appropriate. Please contact Support if you believe your use case requires more than 1000 tags per named user, and they will help you find an alternative."
      }
    },
    "/api/named_users/uninstall": {
      "post": {
        "description": "Disassociate and delete all channels associated with the named_user_id(s) and also delete the named_user_id(s). This call removes all channels associated with a named user from Airship systems in compliance with data privacy laws.\n\nUninstalling channels also removes accompanying analytic data (including Performance Analytics) from the system.\n\nSee [Individual Data Privacy Rights Under Data Privacy Laws](../../reference/privacy/individual-data-privacy/) for more information about data privacy law compliance.",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "named_user_id": [
                  "user-id-1234",
                  "{{named_user_id}}"
                ]
              },
              "schema": {
                "properties": {
                  "named_user_id": {
                    "description": "Array of strings representing the named_user_id(s) you wish to be uninstalled. Must have between 1 to 100 items in the array with a 128 character/byte maximum per item.",
                    "items": {
                      "example": [
                        "namedUser1",
                        "namedUser2"
                      ],
                      "maxLength": 128,
                      "minLength": 1,
                      "pattern": "^[^\\s].{1,125}\\S$",
                      "type": "string",
                      "uniqueItems": true
                    },
                    "maxItems": 100,
                    "minItems": 1,
                    "type": "array"
                  }
                },
                "required": [
                  "named_user_id"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          }
        ],
        "summary": "Named Users Uninstall",
        "tags": [
          "Named Users",
          "Data Privacy Laws Compliance"
        ],
        "x-note": "Channel uninstallation, like channel creation, is an asynchronous operation, and may take some time to complete."
      }
    },
    "/api/named_users/{named_user_id}": {
      "post": {
        "description": "Create or update a named user by associating/disassociating channels and\nadding/removing tags and attributes in a single request.\n",
        "parameters": [
          {
            "description": "A string value identifying the user with no leading or trailing whitespace.\nIf this value contains reserved or special characters they must be URL encoded.\n",
            "in": "path",
            "name": "named_user_id",
            "required": true,
            "schema": {
              "example": "john_doe",
              "maxLength": 128,
              "minLength": 1,
              "pattern": "^[^\\s].{1,125}\\S$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "associate": [
                  {
                    "email_address": "{{email_address}}"
                  },
                  {
                    "channel_id": "{{sms_channel_id}}",
                    "device_type": "sms"
                  }
                ],
                "attributes": [
                  {
                    "action": "set",
                    "key": "name",
                    "value": "John"
                  }
                ],
                "tags": {
                  "set": {
                    "{{tag_group_1}}": [
                      "gold"
                    ],
                    "{{tag_group_2}}": [
                      "sports",
                      "stocks"
                    ]
                  }
                }
              },
              "schema": {
                "$ref": "#/components/schemas/namedUserUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Body may contain warnings about portions of the request which\nwere not processed.\n",
                  "properties": {
                    "attribute_warnings": {
                      "description": "Warnings encountered when processing attributes for this named user.\n",
                      "type": "string"
                    },
                    "ok": {
                      "description": "Set to `true` when status code is `200`.\n",
                      "type": "boolean"
                    },
                    "tag_warnings": {
                      "description": "Warnings encountered when processing tags for this named user.\n",
                      "type": "string"
                    }
                  },
                  "title": "Create/Update Named User Response",
                  "type": "object"
                }
              }
            },
            "description": "Request was accepted\n"
          },
          "400": {
            "$ref": "#/components/responses/400"
          }
        },
        "security": [
          {
            "basicAppAuth": [
            ]
          },
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Named User Update",
        "tags": [
          "Named Users"
        ],
        "x-important": "We support up to 1000 tags per named user. Adding more than 1000 tags per named user can cause latency and service interruptions.\nWe strongly recommend removing unused tags whenever possible, and using [Custom Events](../../guides/custom-events) when appropriate.\nPlease contact Support if you believe your use case requires more than 1000 tags per named user, and they will help you find an alternative.\n",
        "x-warning": "If a channel has an assigned named user and you make an additional\ncall to associate that same channel with a new named user, the\noriginal named user association will be removed and the new named user\nand associated data will take its place. Additionally, all tags\nassociated to the original named user cannot be used to address this\nchannel unless they are also associated with the new named user.\n"
      }
    },
    "/api/named_users/{named_user_id}/attributes": {
      "post": {
        "description": "Set or remove attributes on a named user.\n\nA single request body may contain a `set` or `remove` field, or both, or a single `set` field. If both `set` and `remove` fields are present and the intersection of the attributes in these fields is not empty, then a 400 will be returned.\n\nIf an attribute request is partially valid, i.e. at least one attribute exists, Airship returns a 200 with a warning in containing a CSV list of attributes that failed to update.\n",
        "parameters": [
          {
            "description": "The named user you are setting the attributes for.",
            "in": "path",
            "name": "named_user_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "attributes": [
                  {
                    "action": "set",
                    "key": "firstName",
                    "timestamp": "2020-09-19 12:00:00",
                    "value": "Gyuri"
                  },
                  {
                    "action": "remove",
                    "key": "birthDate",
                    "timestamp": "2020-09-19 12:00:00"
                  },
                  {
                    "action": "set",
                    "key": "lastName",
                    "timestamp": "2020-09-19 12:00:00",
                    "value": "Pataki"
                  }
                ]
              },
              "schema": {
                "description": "Include an array of attributes objects in your request.",
                "items": {
                  "$ref": "#/components/schemas/attributesObject"
                },
                "type": "array"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200",
            "description": "Success. If an attribute request is partially valid, i.e. at least one attribute exists,\nAirship returns a 200 with a warning in containing a CSV list of attributes that failed to update. Airship returns a `200` if you attempt to set attributes on a `named_user`, even if the `named_user` does not exist.\n"
          },
          "400": {
            "$ref": "#/components/responses/400"
          }
        },
        "security": [
          {
            "basicAppAuth": [
            ]
          },
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Set or Remove Attributes on Named Users",
        "tags": [
          "Named Users"
        ],
        "x-note": "Airship returns a `200` if you attempt to set attributes on a named user that does not exist.\n",
        "x-tip": "If you wish to set attributes on multiple named users at once, we recommend\nusing [/api/channels/attributes](#operation-api-channels-attributes-post) which\nsupports an `audience` object in the request body.\n"
      }
    },
    "/api/pipelines": {
      "get": {
        "description": "List existing pipelines. Pipelines are ordered by `creation_date` from newest to oldest.",
        "parameters": [
          {
            "description": "The maximum number of results to return; this is effectively the page size for the response.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "example": 20,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "If true, limits the listing to enabled pipelines (`\"enabled\": true`). If false or ommitted, lists all pipelines, whether `enabled` is `true` or `false`.",
            "in": "query",
            "name": "enabled",
            "required": false,
            "schema": {
              "example": true,
              "type": "boolean"
            }
          },
          {
            "description": "The first result you want to return. This parameter assists in pagination.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "description": "The response body for a pipelines request.",
                  "properties": {
                    "next_page": {
                      "description": "An URI that points to the next page of pipelines. The page size is specified by the `limit` parameter and the start point by the `start` parameter. If there are no more pipelines for a next page we omit the next page link.",
                      "type": "string"
                    },
                    "ok": {
                      "description": "Success.",
                      "type": "boolean"
                    },
                    "operation_id": {
                      "description": "A unique string identifying a single API call, and can be used to group multiple entities or side-effects as related, in reporting and troubleshooting logs.",
                      "example": "ef625038-70a3-41f1-826f-57bc11dd625a",
                      "format": "uuid",
                      "type": "string"
                    },
                    "pipeline_ids": {
                      "description": "An array of pipeline IDs.",
                      "items": {
                        "description": "A string uniquely identifying a pipeline.",
                        "example": [
                          "4d3ff1fd-9ce6-5ea4-5dc9-5ccbd38597f4",
                          "08c806fe-6b2b-403f-be05-68aa5513ef71"
                        ],
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "pipeline_urls": {
                      "description": "An array of of pipeline URIs. If more than one entity was included in the request, the URIs will be in the same order as the objects in the request.",
                      "items": {
                        "description": "A string URL of the newly created pipeline.",
                        "example": [
                          "https://go.urbanairship/api/pipelines/4d3ff1fd-9ce6-5ea4-5dc9-5ccbd38597f4"
                        ],
                        "format": "uri",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "pipelines": {
                      "description": "A list of pipeline objects.",
                      "items": {
                        "$ref": "#/components/schemas/pipelineObject"
                      },
                      "type": "array"
                    },
                    "prev_page": {
                      "description": "An URI that points to the previous page of pipelines. The page size is specified by the `limit` parameter and the start point by the `start` parameter. If there are no more pipelines for a previous page we omit the previous page link.",
                      "type": "string"
                    },
                    "total_count": {
                      "description": "The total count of pipelines.",
                      "type": "integer"
                    }
                  },
                  "title": "Pipeline Response Body",
                  "x-schema-tag": "Pipeline Objects"
                }
              }
            },
            "description": "Returned on success, with a JSON representation of pipelines matching your query parameters."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "List Existing Pipelines",
        "tags": [
          "Automation"
        ]
      },
      "post": {
        "description": "Create one or more pipelines. You can provide a single [pipeline object](#schemas-pipelineobject) or an array of [pipeline objects](#schemas-pipelineobject).",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "enabled": true,
                "immediate_trigger": {
                  "tag_added": {
                    "tag": "earlyBirds"
                  }
                },
                "name": "The Early Bird Pipeline",
                "outcome": {
                  "push": {
                    "audience": "triggered",
                    "device_types": [
                      "ios",
                      "android"
                    ],
                    "notification": {
                      "alert": "Hello Early Bird"
                    }
                  }
                },
                "timing": {
                  "delay": {
                    "seconds": 60
                  }
                }
              },
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/pipelineObject"
                  },
                  {
                    "items": {
                      "$ref": "#/components/schemas/pipelineObject"
                    },
                    "type": "array"
                  }
                ]
              }
            }
          },
          "description": "A single [pipeline object](#schemas-pipelineobject) or an array of pipeline objects."
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "description": "The response body for a pipelines request.",
                  "properties": {
                    "next_page": {
                      "description": "An URI that points to the next page of pipelines. The page size is specified by the `limit` parameter and the start point by the `start` parameter. If there are no more pipelines for a next page we omit the next page link.",
                      "type": "string"
                    },
                    "ok": {
                      "description": "Success.",
                      "type": "boolean"
                    },
                    "operation_id": {
                      "description": "A unique string identifying a single API call, and can be used to group multiple entities or side-effects as related, in reporting and troubleshooting logs.",
                      "example": "ef625038-70a3-41f1-826f-57bc11dd625a",
                      "format": "uuid",
                      "type": "string"
                    },
                    "pipeline_ids": {
                      "description": "An array of pipeline IDs.",
                      "items": {
                        "description": "A string uniquely identifying a pipeline.",
                        "example": [
                          "4d3ff1fd-9ce6-5ea4-5dc9-5ccbd38597f4",
                          "08c806fe-6b2b-403f-be05-68aa5513ef71"
                        ],
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "pipeline_urls": {
                      "description": "An array of of pipeline URIs. If more than one entity was included in the request, the URIs will be in the same order as the objects in the request.",
                      "items": {
                        "description": "A string URL of the newly created pipeline.",
                        "example": [
                          "https://go.urbanairship/api/pipelines/4d3ff1fd-9ce6-5ea4-5dc9-5ccbd38597f4"
                        ],
                        "format": "uri",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "pipelines": {
                      "description": "A list of pipeline objects.",
                      "items": {
                        "$ref": "#/components/schemas/pipelineObject"
                      },
                      "type": "array"
                    },
                    "prev_page": {
                      "description": "An URI that points to the previous page of pipelines. The page size is specified by the `limit` parameter and the start point by the `start` parameter. If there are no more pipelines for a previous page we omit the previous page link.",
                      "type": "string"
                    },
                    "total_count": {
                      "description": "The total count of pipelines.",
                      "type": "integer"
                    }
                  },
                  "title": "Pipeline Response Body",
                  "x-schema-tag": "Pipeline Objects"
                }
              }
            },
            "description": "If creating more than one pipeline, pipeline URIs are returned in the same order as the pipeline objects in the request."
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "409": {
            "$ref": "#/components/responses/409",
            "description": "The application has exceeded the maximum number of active or total pipelines. In order to increase pipeline maximum, contact Airship Support."
          },
          "413": {
            "$ref": "#/components/responses/413",
            "description": "The request included a payload larger than the maximum size of 5MiB."
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Create Pipeline (Automated Message)",
        "tags": [
          "Automation"
        ]
      }
    },
    "/api/pipelines/deleted": {
      "get": {
        "description": "Produces a list of all deleted pipelines starting with the most recently deleted entry.",
        "parameters": [
          {
            "description": "Timestamp of the starting element for paginating results.",
            "in": "query",
            "name": "start",
            "required": false,
            "schema": {
              "example": "2021-01-01T12:00:00",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "properties": {
                    "ok": {
                      "description": "Success.",
                      "type": "boolean"
                    },
                    "pipelines": {
                      "items": {
                        "properties": {
                          "deletion_time": {
                            "description": "An ISO 8601 UTC timestamp indicating the date and time that the pipeline was deleted.",
                            "example": "2017-03-31T20:54:45",
                            "type": "string"
                          },
                          "pipeline_id": {
                            "description": "The unique identifier for a pipeline.",
                            "example": "ef625038-70a3-41f1-826f-57bc11dd625a",
                            "format": "uuid",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returns an array of deleted pipeline objects."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "List Deleted Pipelines",
        "tags": [
          "Automation"
        ]
      }
    },
    "/api/pipelines/validate": {
      "post": {
        "description": "This endpoint accepts the same range of payloads as a `POST` to `/api/pipelines`, but only parses and validates the payload, without creating the pipeline. The body of the request must be a single pipeline object or an array of pipeline objects.",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "enabled": true,
                "immediate_trigger": {
                  "tag_added": {
                    "tag": "earlyBirds"
                  }
                },
                "name": "The Early Bird Pipeline",
                "outcome": {
                  "push": {
                    "audience": "triggered",
                    "device_types": [
                      "ios",
                      "android"
                    ],
                    "notification": {
                      "alert": "Hello Early Bird"
                    }
                  }
                },
                "timing": {
                  "delay": {
                    "seconds": 60
                  }
                }
              },
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/pipelineObject"
                  },
                  {
                    "items": {
                      "$ref": "#/components/schemas/pipelineObject"
                    },
                    "title": "Array of Push Templates",
                    "type": "array"
                  }
                ]
              }
            }
          },
          "description": "A single pipeline object or an array of pipeline objects."
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "406": {
            "$ref": "#/components/responses/406"
          },
          "413": {
            "$ref": "#/components/responses/413",
            "description": "The request included a payload larger than the maximum size of 5MiB."
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Validate Pipeline",
        "tags": [
          "Automation"
        ]
      }
    },
    "/api/pipelines/{pipeline_id}": {
      "delete": {
        "description": "Delete a pipeline.",
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Delete Pipeline",
        "tags": [
          "Automation"
        ]
      },
      "get": {
        "description": "Fetch a single pipeline resource. Returns an array containing a single pipeline object in the `pipelines` attribute.",
        "responses": {
          "200": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "description": "The response body for a pipelines request.",
                  "properties": {
                    "next_page": {
                      "description": "An URI that points to the next page of pipelines. The page size is specified by the `limit` parameter and the start point by the `start` parameter. If there are no more pipelines for a next page we omit the next page link.",
                      "type": "string"
                    },
                    "ok": {
                      "description": "Success.",
                      "type": "boolean"
                    },
                    "operation_id": {
                      "description": "A unique string identifying a single API call, and can be used to group multiple entities or side-effects as related, in reporting and troubleshooting logs.",
                      "example": "ef625038-70a3-41f1-826f-57bc11dd625a",
                      "format": "uuid",
                      "type": "string"
                    },
                    "pipeline_ids": {
                      "description": "An array of pipeline IDs.",
                      "items": {
                        "description": "A string uniquely identifying a pipeline.",
                        "example": [
                          "4d3ff1fd-9ce6-5ea4-5dc9-5ccbd38597f4",
                          "08c806fe-6b2b-403f-be05-68aa5513ef71"
                        ],
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "pipeline_urls": {
                      "description": "An array of of pipeline URIs. If more than one entity was included in the request, the URIs will be in the same order as the objects in the request.",
                      "items": {
                        "description": "A string URL of the newly created pipeline.",
                        "example": [
                          "https://go.urbanairship/api/pipelines/4d3ff1fd-9ce6-5ea4-5dc9-5ccbd38597f4"
                        ],
                        "format": "uri",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "pipelines": {
                      "description": "A list of pipeline objects.",
                      "items": {
                        "$ref": "#/components/schemas/pipelineObject"
                      },
                      "type": "array"
                    },
                    "prev_page": {
                      "description": "An URI that points to the previous page of pipelines. The page size is specified by the `limit` parameter and the start point by the `start` parameter. If there are no more pipelines for a previous page we omit the previous page link.",
                      "type": "string"
                    },
                    "total_count": {
                      "description": "The total count of pipelines.",
                      "type": "integer"
                    }
                  },
                  "title": "Pipeline Response Body",
                  "x-schema-tag": "Pipeline Objects"
                }
              }
            },
            "description": "Returned on success, with the JSON representation of the pipeline in the body of the response."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Individual Pipeline Lookup",
        "tags": [
          "Automation"
        ]
      },
      "parameters": [
        {
          "description": "The pipeline you want to return or modify.",
          "in": "path",
          "name": "pipeline_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "description": "Update the state of a single pipeline resource. You must include the complete payload from a POST response, with changes you want to make to the resource. You cannot provide a partial payload. If you omit optional fields during this operation that were already set for the pipeline, they will be nullified.",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "enabled": true,
                "immediate_trigger": {
                  "tag_added": {
                    "tag": "earlyBirds"
                  }
                },
                "name": "The Early Bird Pipeline",
                "outcome": {
                  "push": {
                    "audience": "triggered",
                    "device_types": [
                      "ios",
                      "android"
                    ],
                    "notification": {
                      "alert": "Greetings Early Bird"
                    }
                  }
                },
                "timing": {
                  "delay": {
                    "seconds": 60
                  }
                }
              },
              "schema": {
                "$ref": "#/components/schemas/pipelineObject"
              }
            }
          },
          "description": "A single pipeline object or an array of pipeline objects."
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "409": {
            "$ref": "#/components/responses/409",
            "description": "The application has exceeded the maximum number of active or total pipelines. In order to increase pipeline maximum, contact Airship Support."
          },
          "413": {
            "$ref": "#/components/responses/413",
            "description": "The request included a payload larger than the maximum size of 5MiB."
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Update Pipeline",
        "tags": [
          "Automation"
        ]
      }
    },
    "/api/push": {
      "post": {
        "description": "Send a push notification to a specified audience. The body of the\nrequest must be a [Push Object](#schemas-pushobject) or an array of Push Objects.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "audience": {
                  "ios_channel": "{{ios_channel}}"
                },
                "device_types": [
                  "ios",
                  "web"
                ],
                "message": {
                  "body": "Hello",
                  "content_type": "text/html",
                  "title": "Title"
                },
                "notification": {
                  "alert": "Hello!"
                }
              },
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/pushObject"
                  },
                  {
                    "items": {
                      "$ref": "#/components/schemas/pushObject"
                    },
                    "maxItems": 100,
                    "minItems": 1,
                    "title": "Array of Push Objects.",
                    "type": "array"
                  }
                ]
              }
            }
          },
          "description": "A single push object or an array of push objects."
        },
        "responses": {
          "202": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "description": "A push response contains a list of identifiers for the notifications sent in the request.",
                  "properties": {
                    "content_urls": {
                      "description": "An array of URLs where the push payload contains a landing page action.",
                      "items": {
                        "format": "uri",
                        "pattern": "^https.*:\\/\\/.+",
                        "type": "string"
                      },
                      "maxItems": 100,
                      "minItems": 0,
                      "type": "array"
                    },
                    "localized_ids": {
                      "description": "An array of identifiers used for reporting. Each ID represents a localized message (push object with `localizations` array).",
                      "items": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message_ids": {
                      "description": "An array of message IDs, each uniquely identifying a Message Center message.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "ok": {
                      "description": "Success.",
                      "type": "boolean"
                    },
                    "operation_id": {
                      "description": "A unique string identifying the operation, useful for reporting and troubleshooting.",
                      "example": "ef625038-70a3-41f1-826f-57bc11dd625a",
                      "format": "uuid",
                      "type": "string"
                    },
                    "push_ids": {
                      "description": "An array of push IDs, each uniquely indentifying a push.",
                      "example": [
                        "00256e0b-b02f-4f12-a77f-4c3d57078330",
                        "f59970d3-3d42-4584-907e-f5c57f5d46a1"
                      ],
                      "items": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "maxItems": 100,
                      "minItems": 1,
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "The push notification has been accepted for processing. The response contains `push_id`, `message_id`, and/or `content_url` arrays based on the type of push."
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "406": {
            "$ref": "#/components/responses/406"
          },
          "413": {
            "$ref": "#/components/responses/413",
            "description": "The request included a payload larger than the maximum size of 5MiB."
          },
          "429": {
            "$ref": "#/components/responses/429",
            "description": "There were too many similar requests in a short amount of time."
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Send a Push",
        "tags": [
          "Push"
        ]
      }
    },
    "/api/push/validate": {
      "post": {
        "description": "Accept the same range of payloads as POSTing to `/api/push`, but parse and validate only, without sending any pushes. The body of the request must be a [Push Object](#schemas-pushobject) or an array of Push Objects.",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "audience": {
                  "ios_channel": "{{ios_channel}}"
                },
                "device_types": [
                  "ios",
                  "android"
                ],
                "localizations": [
                  {
                    "country": "AT",
                    "language": "de",
                    "notification": {
                      "alert": "Grüss Gott"
                    }
                  },
                  {
                    "country": "DE",
                    "language": "de",
                    "notification": {
                      "alert": "Guten Tag"
                    }
                  }
                ],
                "notification": {
                  "alert": "Hi!"
                }
              },
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/pushObject"
                  },
                  {
                    "items": {
                      "$ref": "#/components/schemas/pushObject"
                    },
                    "maxItems": 100,
                    "minItems": 1,
                    "title": "Array of Push Objects.",
                    "type": "array"
                  }
                ]
              }
            }
          },
          "description": "A single push object or an array of push objects."
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "406": {
            "$ref": "#/components/responses/406"
          },
          "413": {
            "$ref": "#/components/responses/413",
            "description": "The request included a payload larger than the maximum size of 5MiB."
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Validate Push",
        "tags": [
          "Push"
        ]
      }
    },
    "/api/regions": {
      "get": {
        "description": "Get a paginated list regions. The result is an array of Region Objects under the \"regions\" key.",
        "parameters": [
          {
            "description": "Determines the number of results per page. Defaults to 100 with a maximum of 1000 regions per page. Setting a `limit` greater than 1000returns a 400 response.",
            "in": "query",
            "name": "limit",
            "schema": {
              "example": 100,
              "maximum": 1000,
              "type": "integer"
            }
          },
          {
            "description": "A zero-based integer offset into the ordered list of regions, useful for addressing pages directly.",
            "in": "query",
            "name": "start",
            "schema": {
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "properties": {
                    "count": {
                      "description": "The total number of regions returned.",
                      "type": "integer"
                    },
                    "next_page": {
                      "description": "There might be more than one page of results for this listing. Follow this URL if it is present to the next batch of results.",
                      "example": "https://go.urbanairship.com/api/regions?limit=100&start=100",
                      "format": "url",
                      "type": "string"
                    },
                    "ok": {
                      "description": "Success.",
                      "type": "boolean"
                    },
                    "regions": {
                      "description": "An array of Region Objects.",
                      "items": {
                        "$ref": "#/components/schemas/regionObject"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returns OK for success."
          },
          "400": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "returned when `limit` is greater than 1000."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          }
        ],
        "summary": "Region Listing",
        "tags": [
          "Regions"
        ]
      }
    },
    "/api/regions/{region_id}": {
      "get": {
        "description": "Get details for a specific region.",
        "parameters": [
          {
            "description": "The region you want to lookup.",
            "in": "path",
            "name": "region_id",
            "required": true,
            "schema": {
              "example": "7d4d9a5c-eff5-40f2-b648-4352c166e878",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "properties": {
                    "ok": {
                      "description": "if true, indicates success.",
                      "example": true,
                      "type": "boolean"
                    },
                    "region": {
                      "$ref": "#/components/schemas/regionObject"
                    }
                  }
                }
              }
            },
            "description": "Returns OK for success."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          }
        ],
        "summary": "Region Lookup",
        "tags": [
          "Regions"
        ]
      }
    },
    "/api/reports/devices": {
      "get": {
        "description": "Get an app's opted-in and installed device counts by device type.",
        "parameters": [
          {
            "description": "All device events counted occurred before this ISO formatted timestamp.",
            "in": "query",
            "name": "date",
            "required": false,
            "schema": {
              "example": "2021-02-28T00:00:00",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json;": {
                "schema": {
                  "description": "The response body for the device report.",
                  "properties": {
                    "counts": {
                      "description": "The counts for each device type.",
                      "properties": {
                        "amazon": {
                          "description": "The count object for a device type.",
                          "properties": {
                            "opted_in": {
                              "description": "Opted in to receiving push notifications.",
                              "example": 140,
                              "type": "integer"
                            },
                            "opted_out": {
                              "description": "Opted out of receiving push notifications.",
                              "example": 89,
                              "type": "integer"
                            },
                            "uninstalled": {
                              "description": "Devices for which Reports has seen an uninstall event.",
                              "example": 9,
                              "type": "integer"
                            },
                            "unique_devices": {
                              "description": "Devices considered by Airship Reports to have the app installed.",
                              "example": 229,
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "android": {
                          "description": "The count object for a device type.",
                          "properties": {
                            "opted_in": {
                              "description": "Opted in to receiving push notifications.",
                              "example": 140,
                              "type": "integer"
                            },
                            "opted_out": {
                              "description": "Opted out of receiving push notifications.",
                              "example": 89,
                              "type": "integer"
                            },
                            "uninstalled": {
                              "description": "Devices for which Reports has seen an uninstall event.",
                              "example": 9,
                              "type": "integer"
                            },
                            "unique_devices": {
                              "description": "Devices considered by Airship Reports to have the app installed.",
                              "example": 229,
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "ios": {
                          "description": "The count object for a device type.",
                          "properties": {
                            "opted_in": {
                              "description": "Opted in to receiving push notifications.",
                              "example": 140,
                              "type": "integer"
                            },
                            "opted_out": {
                              "description": "Opted out of receiving push notifications.",
                              "example": 89,
                              "type": "integer"
                            },
                            "uninstalled": {
                              "description": "Devices for which Reports has seen an uninstall event.",
                              "example": 9,
                              "type": "integer"
                            },
                            "unique_devices": {
                              "description": "Devices considered by Airship Reports to have the app installed.",
                              "example": 229,
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "date_closed": {
                      "description": "All  device events counted occurred before this date and time.",
                      "example": "2018-06-06 11:47:51",
                      "type": "string"
                    },
                    "date_computed": {
                      "description": "The date and time the device event data was tallied and stored.",
                      "example": "2018-06-07 11:47:51",
                      "type": "string"
                    },
                    "total_unique_devices": {
                      "description": "Sum of the unique devices for every device type.",
                      "example": 12545,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned on success, with the JSON representation of the device counts in the body of the response."
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Devices Report",
        "tags": [
          "Reports"
        ]
      }
    },
    "/api/reports/events": {
      "get": {
        "description": "Get a summary of custom event counts and values, by custom event, within the specified time period.",
        "parameters": [
          {
            "description": "An ISO formatted timestamp for start of report.",
            "in": "query",
            "name": "start",
            "required": true,
            "schema": {
              "example": "2021-02-01T00:00:00",
              "type": "string"
            }
          },
          {
            "description": "An ISO formatted timestamp for end of report.",
            "in": "query",
            "name": "end",
            "required": true,
            "schema": {
              "example": "2021-02-28T00:00:00",
              "type": "string"
            }
          },
          {
            "description": "Granularity of results to return; defaults to DAILY.",
            "in": "query",
            "name": "precision",
            "required": false,
            "schema": {
              "default": "DAILY",
              "enum": [
                "HOURLY",
                "DAILY",
                "MONTHLY"
              ],
              "type": "string"
            }
          },
          {
            "description": "Identifies the desired page number. Defaults to 1. If page is given a negative or out of bounds value, the default value will be used.",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "example": 5,
              "type": "integer"
            }
          },
          {
            "description": "Specifies how many results to return per page. Has a default value of 25 and a maximum value of 100.",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "example": 25,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "description": "The response body for custom events detail listing.",
                  "properties": {
                    "events": {
                      "description": "An array of custom events and its details.",
                      "items": {
                        "description": "Detail information about the custom event including its counts and values.",
                        "properties": {
                          "conversion": {
                            "description": "Can be one of direct or indirect.",
                            "example": "direct",
                            "type": "string"
                          },
                          "count": {
                            "description": "Number of instances of this event.",
                            "example": 4,
                            "type": "integer"
                          },
                          "location": {
                            "description": "The source from which the event originates, e.g. Message Center, Landing Page, custom, etc.",
                            "example": "custom",
                            "type": "string"
                          },
                          "name": {
                            "description": "The name of the custom event.",
                            "example": "custom_event_name",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value generated by the event.",
                            "example": 16.4,
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "next_page": {
                      "description": "There might be more than one page of results for this listing. Follow this URL if it is present to the next batch of results.",
                      "format": "url",
                      "type": "string"
                    },
                    "ok": {
                      "description": "Success.",
                      "type": "boolean"
                    },
                    "prev_page": {
                      "description": "Link to the previous page, if available.",
                      "format": "url",
                      "type": "string"
                    },
                    "total_count": {
                      "description": "Sum of all the count fields in the above array.",
                      "example": 12,
                      "type": "integer"
                    },
                    "total_value": {
                      "description": "Sum of all the value fields in the above array.",
                      "example": 321.2,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned on success, with the JSON representation of the events in the body of the response."
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Custom Events Detail Listing",
        "tags": [
          "Reports"
        ]
      }
    },
    "/api/reports/experiment/detail/{push_id}/{variant_id}": {
      "get": {
        "description": "Returns statistics and metadata about a specific variant in an experiment (A/B Test).",
        "responses": {
          "200": {
            "content": {
              "application/json;": {
                "schema": {
                  "properties": {
                    "app_key": {
                      "description": "The app key for the given `push_id`.",
                      "type": "string"
                    },
                    "created": {
                      "description": "The date and time when the variant was created.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "direct_responses": {
                      "description": "The number of direct responses to the variant.",
                      "type": "integer"
                    },
                    "experiment_id": {
                      "description": "ID of the experiment that the variant belongs to.",
                      "format": "uuid",
                      "type": "string"
                    },
                    "influenced_responses": {
                      "description": "The total number of influenced responses to the variant.",
                      "type": "integer"
                    },
                    "platforms": {
                      "properties": {
                        "amazon": {
                          "properties": {
                            "direct_responses": {
                              "description": "The number of direct responses (clicks/app opens) to the variant notification on this platform as measured by the SDK.",
                              "type": "integer"
                            },
                            "influenced_responses": {
                              "description": "The number of opens or clicks resulting from your notification (directly or indirectly).",
                              "type": "integer"
                            },
                            "sends": {
                              "description": "The total number of audience members that accounted the variant on the specified platform.",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "android": {
                          "properties": {
                            "direct_responses": {
                              "description": "The number of direct responses (clicks/app opens) to the variant notification on this platform as measured by the SDK.",
                              "type": "integer"
                            },
                            "influenced_responses": {
                              "description": "The number of opens or clicks resulting from your notification (directly or indirectly).",
                              "type": "integer"
                            },
                            "sends": {
                              "description": "The total number of audience members that accounted the variant on the specified platform.",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "ios": {
                          "properties": {
                            "direct_responses": {
                              "description": "The number of direct responses (clicks/app opens) to the variant notification on this platform as measured by the SDK.",
                              "type": "integer"
                            },
                            "influenced_responses": {
                              "description": "The number of opens or clicks resulting from your notification (directly or indirectly).",
                              "type": "integer"
                            },
                            "sends": {
                              "description": "The total number of audience members that accounted the variant on the specified platform.",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "web": {
                          "properties": {
                            "direct_responses": {
                              "description": "The number of direct responses (clicks/app opens) to the variant notification on this platform as measured by the SDK.",
                              "type": "integer"
                            },
                            "influenced_responses": {
                              "description": "The number of opens or clicks resulting from your notification (directly or indirectly).",
                              "type": "integer"
                            },
                            "sends": {
                              "description": "The total number of audience members that accounted the variant on the specified platform.",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "push_id": {
                      "description": "The specific push_id that the variant belonged to.",
                      "format": "uuid",
                      "type": "string"
                    },
                    "variant": {
                      "description": "The individual variaint you want to return results for. Variants are ordered 1-26 in the order that they are arranged in the `variants` array when you created the experiment.",
                      "maximum": 26,
                      "minimum": 1,
                      "type": "integer"
                    },
                    "variant_name": {
                      "description": "The name of the variant specified in the endpoint.",
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Returned on success."
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Experiment Variant Report",
        "tags": [
          "Reports"
        ]
      },
      "parameters": [
        {
          "description": "The `push_id` of the requested experiment.",
          "in": "path",
          "name": "push_id",
          "required": true,
          "schema": {
            "example": "b43ae1b2-3ff6-4c02-adb2-79deac0bbb19",
            "format": "uuid",
            "type": "string"
          }
        },
        {
          "description": "The specific variant you want to return results for.",
          "in": "path",
          "name": "variant_id",
          "required": true,
          "schema": {
            "example": 1,
            "maximum": 26,
            "minimum": 1,
            "type": "integer"
          }
        }
      ]
    },
    "/api/reports/experiment/overview/{push_id}": {
      "get": {
        "description": "Returns statistics and metadata about an experiment (A/B Test).",
        "responses": {
          "200": {
            "content": {
              "application/json;": {
                "schema": {
                  "properties": {
                    "app_key": {
                      "description": "The app key for the given `push_id`.",
                      "type": "string"
                    },
                    "control": {
                      "description": "JSON object describing the control group, i.e., those devices that receive no notification, for the experiment.",
                      "properties": {
                        "audience_pct": {
                          "description": "The percentage of the total audience belonging to the control group.",
                          "type": "number"
                        },
                        "response_rate_pct": {
                          "description": "The response rate from the control group.",
                          "type": "number"
                        },
                        "responses": {
                          "description": "The number of responses from the control group.",
                          "example": 123,
                          "type": "integer"
                        },
                        "sends": {
                          "description": "The number of pushes sent to native mobile platforms, e.g., iOS. Exclusive of `open_channel_sends`, which are broken out under `open_channel_sends`.",
                          "example": 123,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "direct_responses": {
                      "description": "The number of direct responses to the experiment.",
                      "type": "integer"
                    },
                    "experiment_id": {
                      "description": "ID for the requested experiment.",
                      "format": "uuid",
                      "type": "string"
                    },
                    "influenced_responses": {
                      "description": "The number of influenced responses to the experiment.",
                      "type": "integer"
                    },
                    "variants": {
                      "description": "Single variant reporting object or array of variant reporting objects, including associated metadata, audience percentage and response statistics.",
                      "properties": {
                        "audience_pct": {
                          "type": "number"
                        },
                        "direct_responce_pct": {
                          "description": "The percentage direct responses to the notification measured by the SDK.",
                          "example": 13.44,
                          "type": "number"
                        },
                        "direct_responses": {
                          "description": "The number of direct responses to the variant measured by the SDK.",
                          "example": 45,
                          "type": "integer"
                        },
                        "id": {
                          "type": "integer"
                        },
                        "indirect_responce_pct": {
                          "description": "The percentage indirect responses to the notification measured by the SDK.",
                          "example": 0,
                          "type": "number"
                        },
                        "indirect_responses": {
                          "description": "The number of indirect responses to the variant measured by the SDK.",
                          "example": 0,
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "sends": {
                          "description": "The number of pushes sent SDK-supporting platforms, e.g., iOS, Android, and Web. Exclusive of `open_channel_sends`, which are broken out under `open_channel_sends`.",
                          "example": 123,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "web_clicks": {
                      "description": "The number of web notifications that the audience clicked on.",
                      "type": "integer"
                    },
                    "web_sessions": {
                      "description": "The total number of web sessions that resulted in a notification. Use in conjunction with `web_clicks` to determine the effectiveness of your web notification experiments.\n",
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Returned on success."
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Experiment Overview Report",
        "tags": [
          "Reports"
        ]
      },
      "parameters": [
        {
          "description": "The `push_id` of the requested experiment.",
          "in": "path",
          "name": "push_id",
          "required": true,
          "schema": {
            "example": "b43ae1b2-3ff6-4c02-adb2-79deac0bbb19",
            "format": "uuid",
            "type": "string"
          }
        }
      ]
    },
    "/api/reports/opens": {
      "get": {
        "description": "Get the number of users who have opened your app within the specified time period.",
        "parameters": [
          {
            "description": "An ISO formatted timestamp for start of report.",
            "in": "query",
            "name": "start",
            "required": true,
            "schema": {
              "example": "2021-02-01T00:00:00",
              "type": "string"
            }
          },
          {
            "description": "An ISO formatted timestamp for end of report.",
            "in": "query",
            "name": "end",
            "required": true,
            "schema": {
              "example": "2021-02-28T00:00:00",
              "type": "string"
            }
          },
          {
            "description": "Granularity of results to return; defaults to DAILY.",
            "in": "query",
            "name": "precision",
            "required": false,
            "schema": {
              "default": "DAILY",
              "enum": [
                "HOURLY",
                "DAILY",
                "MONTHLY"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json;": {
                "schema": {
                  "description": "The response body for app opens report.",
                  "properties": {
                    "next_page": {
                      "description": "There might be more than one page of results for this listing. Follow this URL if it is present to the next batch of results.",
                      "format": "url",
                      "type": "string"
                    },
                    "opens": {
                      "description": "An array of App Opens Objects.",
                      "items": {
                        "properties": {
                          "android": {
                            "description": "The number of app opens for Android.",
                            "example": 15,
                            "type": "integer"
                          },
                          "date": {
                            "description": "The date and time of when the users opened your app.",
                            "example": "2018-06-01 10:00:00",
                            "type": "string"
                          },
                          "ios": {
                            "description": "The number of app opens for iOS.",
                            "example": 15,
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned on success, with the JSON representation of the app opens in the body of the response."
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "App Opens Report",
        "tags": [
          "Reports"
        ]
      }
    },
    "/api/reports/optins": {
      "get": {
        "description": "Get the number of opted-in Push users who access the app within the specified time period.",
        "parameters": [
          {
            "description": "An ISO formatted timestamp for start of report.",
            "in": "query",
            "name": "start",
            "required": true,
            "schema": {
              "example": "2021-02-01T00:00:00",
              "type": "string"
            }
          },
          {
            "description": "An ISO formatted timestamp for end of report.",
            "in": "query",
            "name": "end",
            "required": true,
            "schema": {
              "example": "2021-02-28T00:00:00",
              "type": "string"
            }
          },
          {
            "description": "Granularity of results to return; defaults to DAILY.",
            "in": "query",
            "name": "precision",
            "required": false,
            "schema": {
              "default": "DAILY",
              "enum": [
                "HOURLY",
                "DAILY",
                "MONTHLY"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json;": {
                "schema": {
                  "description": "The response body for opt-in report.",
                  "properties": {
                    "next_page": {
                      "description": "There might be more than one page of results for this listing. Follow this URL if it is present to the next batch of results.",
                      "format": "url",
                      "type": "string"
                    },
                    "optins": {
                      "description": "An array of OptIn Objects.",
                      "items": {
                        "properties": {
                          "android": {
                            "description": "The number of users who opt-in for Android.",
                            "example": 50,
                            "type": "integer"
                          },
                          "date": {
                            "description": "The date and time of when the users opt-in.",
                            "example": "2018-06-01 10:00:00",
                            "type": "string"
                          },
                          "ios": {
                            "description": "The number of users who opt-in for iOS.",
                            "example": 50,
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned on success, with the JSON representation of the opt-ins in the body of the response."
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Opt-in Report",
        "tags": [
          "Reports"
        ]
      }
    },
    "/api/reports/optouts": {
      "get": {
        "description": "Get the number of opted-out Push users who access the app within the specified time period.",
        "parameters": [
          {
            "description": "An ISO formatted timestamp for start of report.",
            "in": "query",
            "name": "start",
            "required": true,
            "schema": {
              "example": "2021-02-01T00:00:00",
              "type": "string"
            }
          },
          {
            "description": "An ISO formatted timestamp for end of report.",
            "in": "query",
            "name": "end",
            "required": true,
            "schema": {
              "example": "2021-02-28T00:00:00",
              "type": "string"
            }
          },
          {
            "description": "Granularity of results to return; defaults to DAILY.",
            "in": "query",
            "name": "precision",
            "required": false,
            "schema": {
              "default": "DAILY",
              "enum": [
                "HOURLY",
                "DAILY",
                "MONTHLY"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json;": {
                "schema": {
                  "description": "The response body for opt-out report.",
                  "properties": {
                    "next_page": {
                      "description": "There might be more than one page of results for this listing. Follow this URL if it is present to the next batch of results.",
                      "format": "url",
                      "type": "string"
                    },
                    "optouts": {
                      "description": "An array of OptOut Objects.",
                      "items": {
                        "properties": {
                          "android": {
                            "description": "The number of users who opt-out for Android.",
                            "example": 1,
                            "type": "integer"
                          },
                          "date": {
                            "description": "The date and time of when the users opt-out.",
                            "example": "2018-06-01 10:00:00",
                            "type": "string"
                          },
                          "ios": {
                            "description": "The number of users who opt-out for iOS.",
                            "example": 1,
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned on success, with the JSON representation of the opt-outs in the body of the response."
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Opt-out Report",
        "tags": [
          "Reports"
        ]
      }
    },
    "/api/reports/responses": {
      "get": {
        "description": "Get the number of direct and influenced opens of your app.",
        "parameters": [
          {
            "description": "An ISO formatted timestamp for start of report.",
            "in": "query",
            "name": "start",
            "required": true,
            "schema": {
              "example": "2021-02-01T00:00:00",
              "type": "string"
            }
          },
          {
            "description": "An ISO formatted timestamp for end of report.",
            "in": "query",
            "name": "end",
            "required": true,
            "schema": {
              "example": "2021-02-28T00:00:00",
              "type": "string"
            }
          },
          {
            "description": "Granularity of results to return; defaults to DAILY.",
            "in": "query",
            "name": "precision",
            "required": false,
            "schema": {
              "default": "DAILY",
              "enum": [
                "HOURLY",
                "DAILY",
                "MONTHLY"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json;": {
                "schema": {
                  "description": "The response body for response report.",
                  "properties": {
                    "next_page": {
                      "description": "There might be more than one page of results for this listing. Follow this URL if it is present to the next batch of results.",
                      "format": "url",
                      "type": "string"
                    },
                    "responses": {
                      "description": "An array of Response Objects.",
                      "items": {
                        "properties": {
                          "android": {
                            "properties": {
                              "direct": {
                                "description": "The number of direct opens of your app.",
                                "example": 20,
                                "type": "integer"
                              },
                              "influenced": {
                                "description": "The number of influenced opens of your app.",
                                "example": 50,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "date": {
                            "description": "The date and time for direct and influenced opens.",
                            "type": "string"
                          },
                          "ios": {
                            "properties": {
                              "direct": {
                                "description": "The number of direct opens of your app.",
                                "example": 20,
                                "type": "integer"
                              },
                              "influenced": {
                                "description": "The number of influenced opens of your app.",
                                "example": 50,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned on success, with the JSON representation of the responses in the body of the response."
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Response Report",
        "tags": [
          "Reports"
        ]
      }
    },
    "/api/reports/responses/list": {
      "get": {
        "description": "Get a listing of all pushes, plus basic response information, in a given timeframe. Start and end date times are required parameters. The time defaults to 00:00 UTC if not specified.",
        "parameters": [
          {
            "description": "An ISO formatted timestamp for start of report.",
            "in": "query",
            "name": "start",
            "required": true,
            "schema": {
              "example": "2021-02-01T00:00:00",
              "type": "string"
            }
          },
          {
            "description": "An ISO formatted timestamp for end of report.",
            "in": "query",
            "name": "end",
            "required": true,
            "schema": {
              "example": "2021-02-28T00:00:00",
              "type": "string"
            }
          },
          {
            "description": "Number of results to return at one time (for pagination).",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "example": 10,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json;": {
                "schema": {
                  "description": "The response body for response listing.",
                  "properties": {
                    "next_page": {
                      "description": "There might be more than one page of results for this listing. Follow this URL if it is present to the next batch of results.",
                      "format": "url",
                      "type": "string"
                    },
                    "pushes": {
                      "description": "An array of all pushes and its basic response information.",
                      "items": {
                        "description": "The push and its basic response information.",
                        "properties": {
                          "direct_responses": {
                            "description": "The number of direct responses to the notification measured by the SDK.",
                            "example": 45,
                            "type": "integer"
                          },
                          "group_id": {
                            "description": "An identifier set by the server to logically group a set of related pushes, e.g., in a push to local time.",
                            "example": "04911800-f48d-11e2-acc5-90e2bf027020",
                            "format": "uuid",
                            "type": "string"
                          },
                          "open_channel_sends": {
                            "description": "Contains an array of the number of send counts per open platform. If there were no open channels sends associated with the push ID, an empty result will be returned.",
                            "properties": {
                              "platforms": {
                                "description": "An array of objects indicating the total sends by open platform.",
                                "items": {
                                  "description": "An object containing the send counts per platform.",
                                  "properties": {
                                    "id": {
                                      "description": "The key representing the canonical identifier in the Airship system for the given open platform.",
                                      "example": "platform_name",
                                      "type": "string"
                                    },
                                    "sends": {
                                      "description": "The number of sends for the given push ID and the given open platform.",
                                      "example": 26,
                                      "type": "integer"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              }
                            },
                            "type": "object"
                          },
                          "push_time": {
                            "description": "The ISO 8601 timestamp in UTC indicating the time that the push was initially sent.",
                            "example": "2018-06-02 10:00:00",
                            "type": "string"
                          },
                          "push_type": {
                            "description": "This string describes the push operation, which is often comparable to the audience selection.",
                            "enum": [
                              "BROADCAST_PUSH",
                              "TAG_PUSH",
                              "SCHEDULED_PUSH",
                              "SEGMENTS_PUSH",
                              "UNICAST_PUSH"
                            ],
                            "example": "TAG_PUSH",
                            "type": "string"
                          },
                          "push_uuid": {
                            "description": "The UUID for the requested push.",
                            "example": "f133a7c8-d750-11e1-a6cf-e06995b6c872",
                            "format": "uuid",
                            "type": "string"
                          },
                          "sends": {
                            "description": "The number of pushes sent to native mobile platforms, e.g., iOS. Exclusive of `open_channel_sends`, which are broken out under `open_channel_sends`.",
                            "example": 123,
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned on success, with the JSON representation of the listing in the body of the response."
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Response Listing",
        "tags": [
          "Reports"
        ],
        "x-note": "If you don't specify a `start` and `end` time, our system\nassumes 00:00 UTC, which will give you results just through\nthe prior day.\n\n\nUse timestamps to get results for a specific timeframe, or\nif you are only using date, set it in the future to ensure you\nwill see the most recent listing.\n"
      }
    },
    "/api/reports/responses/{push_id}": {
      "get": {
        "description": "Returns detailed reports information about a specific push notification. Use the `push_id`, which is the identifier returned by the API that represents a specific push message delivery.",
        "responses": {
          "200": {
            "content": {
              "application/json;": {
                "schema": {
                  "description": "The response body for an individual push response statistics report.",
                  "properties": {
                    "direct_responses": {
                      "description": "The number of native-platform direct responses to the notification measured by the SDK.",
                      "example": 45,
                      "type": "integer"
                    },
                    "open_channels_sends": {
                      "description": "Contains an array of the number of send counts per open platform. If there were no open channels sends associated with the push ID, an empty result will be returned.",
                      "properties": {
                        "platforms": {
                          "description": "An array of objects indicating the total sends by open platform.",
                          "items": {
                            "description": "An object containing the send counts per platform.",
                            "properties": {
                              "id": {
                                "description": "The key representing the canonical identifier in the Airship system for the given open platform.",
                                "example": "platform_name",
                                "type": "string"
                              },
                              "sends": {
                                "description": "The number of sends for the given push ID and the given open platform.",
                                "example": 26,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "push_time": {
                      "description": "The ISO 8601 timestamp in UTC indicating the time that the push was initially sent.",
                      "example": "2018-06-02 10:00:00",
                      "type": "string"
                    },
                    "push_type": {
                      "description": "This string describes the push operation, which is often comparable to the audience selection.",
                      "enum": [
                        "BROADCAST_PUSH",
                        "TAG_PUSH",
                        "SCHEDULED_PUSH",
                        "SEGMENTS_PUSH",
                        "UNICAST_PUSH"
                      ],
                      "example": "TAG_PUSH",
                      "type": "string"
                    },
                    "push_uuid": {
                      "description": "The UUID for the requested push.",
                      "example": "f133a7c8-d750-11e1-a6cf-e06995b6c872",
                      "format": "uuid",
                      "type": "string"
                    },
                    "sends": {
                      "description": "The number of pushes sent to native mobile platforms, e.g., iOS. Exclusive of `open_channel_sends`, which are broken out under `open_channel_sends`.",
                      "example": 123,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned on success, with the JSON representation of the push statistics in the body of the response."
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Individual Push Response Statistics",
        "tags": [
          "Reports"
        ]
      },
      "parameters": [
        {
          "description": "The UUID for the requested push.",
          "in": "path",
          "name": "push_id",
          "required": true,
          "schema": {
            "example": "90f28bc6-6c9b-4c99-b970-973afc266e08",
            "format": "uuid",
            "type": "string"
          }
        }
      ]
    },
    "/api/reports/sends": {
      "get": {
        "description": "Get the number of pushes you have sent within a specified time period.",
        "parameters": [
          {
            "description": "An ISO formatted timestamp for start of report.",
            "in": "query",
            "name": "start",
            "required": true,
            "schema": {
              "example": "2021-02-01T00:00:00",
              "type": "string"
            }
          },
          {
            "description": "An ISO formatted timestamp for end of report.",
            "in": "query",
            "name": "end",
            "required": true,
            "schema": {
              "example": "2021-02-28T00:00:00",
              "type": "string"
            }
          },
          {
            "description": "Granularity of results to return; defaults to DAILY.",
            "in": "query",
            "name": "precision",
            "required": false,
            "schema": {
              "default": "DAILY",
              "enum": [
                "HOURLY",
                "DAILY",
                "MONTHLY"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json;": {
                "schema": {
                  "description": "The response body for push report.",
                  "properties": {
                    "next_page": {
                      "description": "There might be more than one page of results for this listing. Follow this URL if it is present to the next batch of results.",
                      "format": "url",
                      "type": "string"
                    },
                    "sends": {
                      "description": "An array of Send Objects.",
                      "items": {
                        "properties": {
                          "android": {
                            "description": "The number of pushes sent to the android platform.",
                            "example": 124,
                            "type": "integer"
                          },
                          "date": {
                            "description": "The date and time the pushes were sent.",
                            "example": "2018-06-01 10:00:00",
                            "type": "string"
                          },
                          "ios": {
                            "description": "The number of pushes sent to the iOS platform.",
                            "example": 133,
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned on success, with the JSON representation of the sends in the body of the response."
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Push Report",
        "tags": [
          "Reports"
        ]
      }
    },
    "/api/reports/timeinapp": {
      "get": {
        "description": "Get the average amount of time users have spent in your app within the specified time period.",
        "parameters": [
          {
            "description": "An ISO formatted timestamp for start of report.",
            "in": "query",
            "name": "start",
            "required": true,
            "schema": {
              "example": "2021-02-01T00:00:00",
              "type": "string"
            }
          },
          {
            "description": "An ISO formatted timestamp for end of report.",
            "in": "query",
            "name": "end",
            "required": true,
            "schema": {
              "example": "2021-02-28T00:00:00",
              "type": "string"
            }
          },
          {
            "description": "Granularity of results to return; defaults to DAILY.",
            "in": "query",
            "name": "precision",
            "required": false,
            "schema": {
              "default": "DAILY",
              "enum": [
                "HOURLY",
                "DAILY",
                "MONTHLY"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json;": {
                "schema": {
                  "description": "The response body for time in app report.",
                  "properties": {
                    "next_page": {
                      "description": "There might be more than one page of results for this listing. Follow this URL if it is present to the next batch of results.",
                      "format": "url",
                      "type": "string"
                    },
                    "sends": {
                      "description": "An array of TimeInApp Objects.",
                      "items": {
                        "properties": {
                          "android": {
                            "description": "The number of seconds users have spent in your app for Android.",
                            "example": 90000,
                            "type": "integer"
                          },
                          "date": {
                            "description": "The date and time of when the users have spent time in your app.",
                            "example": "2018-06-01 10:00:00",
                            "type": "string"
                          },
                          "ios": {
                            "description": "The number of seconds users have spent in your app for iOS.",
                            "example": 90000,
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned on success, with the JSON representation of the time in app in the body of the response."
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Time in App Report",
        "tags": [
          "Reports"
        ]
      }
    },
    "/api/reports/web/interaction": {
      "get": {
        "description": "Get the web interaction data for the given app key. Accepts a required start time and optional end time and precision parameters.",
        "parameters": [
          {
            "description": "The app key for your web project.",
            "in": "query",
            "name": "app_key",
            "required": true,
            "schema": {
              "example": "ZGIwZTY3YjEtZTRiMi00ZG",
              "type": "string"
            }
          },
          {
            "description": "An ISO formatted timestamp for start of report.",
            "in": "query",
            "name": "start",
            "required": true,
            "schema": {
              "example": "2021-02-01T00:00:00",
              "type": "string"
            }
          },
          {
            "description": "An ISO formatted timestamp for end of report.",
            "in": "query",
            "name": "end",
            "required": false,
            "schema": {
              "example": "2021-02-28T00:00:00",
              "type": "string"
            }
          },
          {
            "description": "Granularity of results to return; defaults to DAILY.",
            "in": "query",
            "name": "precision",
            "required": false,
            "schema": {
              "default": "DAILY",
              "enum": [
                "HOURLY",
                "DAILY",
                "MONTHLY"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json;": {
                "schema": {
                  "description": "The response body for web response report.",
                  "properties": {
                    "app_key": {
                      "description": "The app key for your web project.",
                      "example": "your_app_key",
                      "type": "string"
                    },
                    "end": {
                      "description": "The end date and time for the report.",
                      "example": "2018-06-02 10:00:00",
                      "type": "string"
                    },
                    "precision": {
                      "description": "The precision of the report.",
                      "enum": [
                        "HOURLY",
                        "DAILY",
                        "MONTHLY"
                      ],
                      "example": "HOURLY",
                      "type": "string"
                    },
                    "start": {
                      "description": "The start date and time for the report.",
                      "example": "2018-06-01 10:00:00",
                      "type": "string"
                    },
                    "total_counts": {
                      "description": "Array of total count objects, each representing counts within the given datetime range and precision.",
                      "items": {
                        "properties": {
                          "counts": {
                            "properties": {
                              "clicks": {
                                "description": "Number of direct clicks on the web notification during the specified timeframe.",
                                "example": 5,
                                "type": "integer"
                              },
                              "sessions": {
                                "description": "Number of sessions created during this timeframe. Sessions are created by site visits after 30 minutes of inactivity or by notification clicks that open the site.",
                                "example": 9,
                                "type": "integer"
                              }
                            }
                          },
                          "date": {
                            "description": "ISO UTC formatted string for the count period.",
                            "example": "2018-06-02 10:00:00",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned on success, with the JSON representation of the web data in the body of the response."
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Web Response Report",
        "tags": [
          "Reports"
        ]
      }
    },
    "/api/schedules": {
      "get": {
        "description": "List all existing schedules. Returns an array of schedule objects in the `schedules` attribute.",
        "parameters": [
          {
            "description": "An optional string ID of the starting element for paginating results.",
            "in": "query",
            "name": "start",
            "required": false,
            "schema": {
              "example": "8bcb15a6-1f81-451a-95a1-05afd40e271c",
              "type": "string"
            }
          },
          {
            "description": "An optional integer as maximum number of elements to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "example": 20,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "next_page": {
                      "description": "There might be more than one page of results for this listing. Follow this URL if it is present to the next batch of results.",
                      "example": "https://go.urbanairship.com/api/schedules/?start=8bcb15a6-1f81-451a-95a1-05afd40e271c&limit=20",
                      "format": "url",
                      "type": "string"
                    },
                    "ok": {
                      "description": "Success.",
                      "type": "boolean"
                    },
                    "schedules": {
                      "description": "An array of Schedule Objects.",
                      "items": {
                        "$ref": "#/components/schemas/scheduleObject"
                      },
                      "type": "array"
                    },
                    "total_count": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Returned on success, with the JSON representation of the scheduled pushes in the body of the response."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "List Schedules",
        "tags": [
          "Schedules"
        ]
      },
      "post": {
        "description": "Scheduled notifications are created by POSTing to the schedule URI. The body of the request must be one of a single [schedule object](#schemas-scheduleobject) or an array of one or more schedule objects.",
        "requestBody": {
          "content": {
            "application/json": {
              "example": [
                {
                  "name": "Morning People",
                  "push": {
                    "audience": {
                      "tag": "earlyBirds"
                    },
                    "device_types": [
                      "ios",
                      "android"
                    ],
                    "notification": {
                      "alert": "Good Day Sunshine"
                    }
                  },
                  "schedule": {
                    "best_time": {
                      "send_date": "{{one_day_hence}}"
                    },
                    "recurring": {
                      "cadence": {
                        "count": 1,
                        "type": "daily"
                      },
                      "end_time": "{{sched_25hours}}"
                    }
                  }
                },
                {
                  "name": "Everybody Else",
                  "push": {
                    "audience": {
                      "tag": "normalPeople"
                    },
                    "device_types": [
                      "ios",
                      "android"
                    ],
                    "notification": {
                      "alert": "Stay Up Late"
                    }
                  },
                  "schedule": {
                    "best_time": {
                      "send_date": "{{one_day_hence}}"
                    },
                    "recurring": {
                      "cadence": {
                        "count": 1,
                        "type": "daily"
                      },
                      "end_time": "{{sched_25hours}}"
                    }
                  }
                }
              ],
              "schema": {
                "oneOf": [
                  {
                    "items": {
                      "$ref": "#/components/schemas/scheduleObject"
                    },
                    "type": "array"
                  },
                  {
                    "$ref": "#/components/schemas/scheduleObject"
                  }
                ]
              }
            }
          },
          "description": "A single schedule object or an array of schedule objects."
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "properties": {
                    "ok": {
                      "description": "Success.",
                      "type": "boolean"
                    },
                    "operation_id": {
                      "description": "A unique string which identifies a single API call, and can be used to group multiple entities or side-effects as related, in reporting and troubleshooting logs.",
                      "example": "ef625038-70a3-41f1-826f-57bc11dd625a",
                      "format": "uuid",
                      "type": "string"
                    },
                    "schedule_ids": {
                      "description": "An array of schedule IDs, each string uniquely identifying a schedule.",
                      "example": [
                        "00256e0b-b02f-4f12-a77f-4c3d57078330",
                        "f59970d3-3d42-4584-907e-f5c57f5d46a1"
                      ],
                      "items": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "maxItems": 100,
                      "minItems": 1,
                      "type": "array"
                    },
                    "schedule_urls": {
                      "description": "An array of schedule URLs.",
                      "items": {
                        "format": "uri",
                        "pattern": "^https.*:\\/\\/.+",
                        "type": "string"
                      },
                      "maxItems": 100,
                      "minItems": 0,
                      "type": "array"
                    },
                    "schedules": {
                      "description": "An array of schedule objects.",
                      "items": {
                        "$ref": "#/components/schemas/scheduleObject"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "The response body will contain an array of response objects with the created resource URIs."
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "413": {
            "$ref": "#/components/responses/413",
            "description": "The number of schedules in the array exceeded the maximum amount (error_code 41301). The request included a payload larger than the maximum size of 5MiB. (error_code 41307)"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Schedule a Notification",
        "tags": [
          "Schedules"
        ]
      }
    },
    "/api/schedules/create-and-send": {
      "post": {
        "description": "Schedule a notification to an audience of SMS, email, or open channel addresses and simultaneously register those addresses as new channels. Addresses that are not yet associated with channels are registered as new channels. Addresses in the payload that are already registered to a `channel_id` and are either `opted_in` or have an `opted_in` value in the payload that is newer than the `opted_out` value associated with a channel will receive the notification, but are not re-registered as new channels.\n\nYou cannot update `opted_in` values for existing channels through this endpoint.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "name": "scheduled winter sale email",
                "push": {
                  "audience": {
                    "create_and_send": [
                      {
                        "ua_address": "{{email_address}}",
                        "ua_commercial_opted_in": "2020-11-29T10:34:22"
                      }
                    ]
                  },
                  "campaigns": {
                    "categories": [
                      "winter sale",
                      "west coast"
                    ]
                  },
                  "device_types": [
                    "email"
                  ],
                  "notification": {
                    "email": {
                      "html_body": "<h1>Seasons Greetings</h1><p>Check out our winter deals!</p><p><a data-ua-unsubscribe=\"1\" title=\"unsubscribe\" href=\"http://unsubscribe.urbanairship.com/email/success.html\">Unsubscribe</a></p>",
                      "message_type": "commercial",
                      "plaintext_body": "Greetings! Check out our latest winter deals! [[ua-unsubscribe href=\"http://unsubscribe.urbanairship.com/email/success.html\"]]",
                      "reply_to": "no-reply@airship.com",
                      "sender_address": "{{sender_email_address}}",
                      "sender_name": "Airship",
                      "subject": "Welcome to the Winter Sale! "
                    }
                  }
                },
                "schedule": {
                  "scheduled_time": "{{sched_1m}}"
                }
              },
              "schema": {
                "properties": {
                  "name": {
                    "description": "A name for the schedule.",
                    "type": "string"
                  },
                  "push": {
                    "discriminator": {
                      "propertyName": "device_types"
                    },
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/email"
                      },
                      {
                        "$ref": "#/components/schemas/sms"
                      },
                      {
                        "$ref": "#/components/schemas/mms"
                      },
                      {
                        "$ref": "#/components/schemas/open"
                      }
                    ]
                  },
                  "schedule": {
                    "description": "Similar to other schedule objects. However, create-and-send requests support `scheduled_time` only.",
                    "properties": {
                      "scheduled_time": {
                        "description": "The date and time when you want to perform your create-and-send operation. Users will receive the notification as soon as possible after the specified datetime.",
                        "format": "datetime",
                        "type": "string"
                      }
                    },
                    "required": [
                      "scheduled_time"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "schedule",
                  "push"
                ],
                "type": "object"
              }
            }
          },
          "description": "The request is much like other create-and-send operations, with a leading `schedule` object. The standard create-and-send payload sits inside a `push` object."
        },
        "responses": {
          "202": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "description": "A push response contains a list of identifiers for the notifications sent in the request.",
                  "properties": {
                    "content_urls": {
                      "description": "An array of URLs where the push payload contains a landing page action.",
                      "items": {
                        "format": "uri",
                        "pattern": "^https.*:\\/\\/.+",
                        "type": "string"
                      },
                      "maxItems": 100,
                      "minItems": 0,
                      "type": "array"
                    },
                    "localized_ids": {
                      "description": "An array of identifiers used for reporting. Each ID represents a localized message (push object with `localizations` array).",
                      "items": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message_ids": {
                      "description": "An array of message IDs, each uniquely identifying a Message Center message.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "ok": {
                      "description": "Success.",
                      "type": "boolean"
                    },
                    "operation_id": {
                      "description": "A unique string identifying the operation, useful for reporting and troubleshooting.",
                      "example": "ef625038-70a3-41f1-826f-57bc11dd625a",
                      "format": "uuid",
                      "type": "string"
                    },
                    "push_ids": {
                      "description": "An array of push IDs, each uniquely indentifying a push.",
                      "example": [
                        "00256e0b-b02f-4f12-a77f-4c3d57078330",
                        "f59970d3-3d42-4584-907e-f5c57f5d46a1"
                      ],
                      "items": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "maxItems": 100,
                      "minItems": 1,
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Because this operation sends messages, a successful response is nearly identical to a `/api/push` response."
          },
          "400": {
            "$ref": "#/components/responses/400",
            "description": "You can only create-and-send to a single platform per request. Attempting to register channels and send notifications for multiple `device_types` in the same request will cause a 400 response."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "413": {
            "$ref": "#/components/responses/413",
            "description": "The request included a payload larger than the maximum size of 5MiB."
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Schedule a Create and Send Operation",
        "tags": [
          "Create and Send"
        ],
        "x-warning": "Duplicate addresses in the `create-and-send` array might receive redundant notifications, or fewer notifications than expected. You should remove duplicate addresses from your request before scheduling a create-and-send notification."
      }
    },
    "/api/schedules/{schedule_id}": {
      "delete": {
        "description": "Delete a schedule resource, which will result in no more pushes being sent. If the resource is successfully deleted, the response does not include a body.",
        "responses": {
          "204": {
            "$ref": "#/components/responses/204",
            "description": "The delete operation was successful."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Delete Schedule",
        "tags": [
          "Schedules"
        ]
      },
      "get": {
        "description": "Fetch the current definition of a single schedule resource. Returns a single schedule object.",
        "responses": {
          "200": {
            "$ref": "#/components/schemas/scheduleObject",
            "description": "Returned on success, with the JSON representation of the scheduled push in the body of the response."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "List a Specific Schedule",
        "tags": [
          "Schedules"
        ]
      },
      "parameters": [
        {
          "description": "The ID of a schedule.",
          "in": "path",
          "name": "schedule_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "description": "Update the state of a single schedule resource. The body must contain a single schedule object. A PUT cannot be used to create a new schedule; it can only be used to update an existing one.",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "name": "Morning People",
                "push": {
                  "audience": {
                    "tag": "earlyBirds"
                  },
                  "device_types": [
                    "ios",
                    "android"
                  ],
                  "notification": {
                    "alert": "Good Day earlyBirds"
                  }
                },
                "schedule": {
                  "best_time": {
                    "send_date": "{{one_day_hence}}"
                  },
                  "recurring": {
                    "cadence": {
                      "count": 1,
                      "type": "daily"
                    },
                    "end_time": "{{sched_25hours}}"
                  }
                }
              },
              "schema": {
                "$ref": "#/components/schemas/scheduleObject"
              }
            }
          },
          "description": "A single schedule object."
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "properties": {
                    "ok": {
                      "description": "Success.",
                      "type": "boolean"
                    },
                    "operation_id": {
                      "description": "A unique string which identifies a single API call, and can be used to group multiple entities or side-effects as related, in reporting and troubleshooting logs.",
                      "example": "ef625038-70a3-41f1-826f-57bc11dd625a",
                      "format": "uuid",
                      "type": "string"
                    },
                    "schedule_urls": {
                      "description": "An array of schedule URLs.",
                      "example": [
                        "https://go.urbanairship/api/schedules/2d69320c-3c91-5241-fac4-248269eed109"
                      ],
                      "items": {
                        "format": "uri",
                        "pattern": "^https.*:\\/\\/.+",
                        "type": "string"
                      },
                      "maxItems": 100,
                      "minItems": 0,
                      "type": "array"
                    },
                    "schedules": {
                      "description": "An array of schedule objects.",
                      "items": {
                        "$ref": "#/components/schemas/scheduleObject"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Returned if the scheduled push has been successfully updated."
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "413": {
            "$ref": "#/components/responses/413",
            "description": "The request included a payload larger than the maximum size of 5MiB."
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Update Schedule",
        "tags": [
          "Schedules"
        ]
      }
    },
    "/api/schedules/{schedule_id}/pause": {
      "parameters": [
        {
          "description": "The ID of the schedule you want to pause.",
          "in": "path",
          "name": "schedule_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "Pause a recurring scheduled message, preventing Airship from sending messages on a recurring scheduled message interval. Use the `/resume` endpoint to resume a schedule.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          },
          "description": "A pause request is empty.\n"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/204",
            "description": "The pause operation was successful."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "description": "A description of the error.",
                      "type": "string"
                    },
                    "error_code": {
                      "default": 500,
                      "description": "An error code representing the HTTP status and a more specific Airship error, if known.",
                      "example": 500,
                      "type": "integer"
                    },
                    "failed_triggers": {
                      "items": {
                        "properties": {
                          "id": {
                            "description": "The list of failed schedule triggers",
                            "format": "uuid",
                            "type": "string"
                          },
                          "state": {
                            "description": "The reason that the operation failed.",
                            "enum": [
                              "BLOCKED",
                              "FAILED"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "ok": {
                      "description": "If false, an error occurred.",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Occurs if a schedule fails to pause. The error includes a list of `failed_triggers`, detailing the schedule triggers that caused this operation to fail"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Pause a schedule",
        "tags": [
          "Schedules"
        ],
        "x-note": "Paused schedules bear a `\"paused\": true` boolean.\n"
      }
    },
    "/api/schedules/{schedule_id}/resume": {
      "parameters": [
        {
          "description": "The ID of the schedule you want to resume.",
          "in": "path",
          "name": "schedule_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "Resume a recurring schedule that you previously paused, beginning with the next scheduled interval.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          },
          "description": "A resume request is empty.\n"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/204",
            "description": "The operation was successful."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "description": "A description of the error.",
                      "type": "string"
                    },
                    "error_code": {
                      "default": 500,
                      "description": "An error code representing the HTTP status and a more specific Airship error, if known.",
                      "example": 500,
                      "type": "integer"
                    },
                    "failed_triggers": {
                      "items": {
                        "properties": {
                          "id": {
                            "description": "The list of failed schedule triggers",
                            "format": "uuid",
                            "type": "string"
                          },
                          "state": {
                            "description": "The reason that the operation failed.",
                            "enum": [
                              "BLOCKED",
                              "FAILED"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "ok": {
                      "description": "If false, an error occurred.",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Occurs if a schedule fails to resume. The error includes a list of `failed_triggers`, detailing the specific schedule IDs that caused the operation to fail."
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Resume a schedule",
        "tags": [
          "Schedules"
        ],
        "x-note": "Paused schedules bear a `\"paused\": true` boolean.\n"
      }
    },
    "/api/segments": {
      "get": {
        "description": "List all  segments for the application.",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "next_page": {
                      "description": "An optional relative URL which can be used to retrieve the next page of results. If no more results are available, next_page will be absent.",
                      "type": "string"
                    },
                    "segments": {
                      "description": "An array of segments for the application.",
                      "items": {
                        "properties": {
                          "creation_date": {
                            "description": "The original creation date of segment in epoch milliseconds.",
                            "example": 1508538390136,
                            "type": "integer"
                          },
                          "display_name": {
                            "description": "The segment display name.",
                            "example": "Some Segment Name",
                            "type": "string"
                          },
                          "id": {
                            "description": "A unique identifier for the segment.",
                            "example": "00c0d899-a595-4c66-9071-bc59374bbe6b",
                            "type": "string"
                          },
                          "modification_date": {
                            "description": "Latest modification date of the segment in epoch milliseconds.",
                            "example": 1508538390136,
                            "type": "integer"
                          }
                        },
                        "required": [
                          "creation_date",
                          "display_name",
                          "id",
                          "modification_date"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "segments"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Returned on success a JSON object containing segments.",
            "headers": {
              "Link": {
                "description": "A link to the next page of results. If present, follow this URL to the next page of segments. Also available in the `next_page` value in the response body.",
                "schema": {
                  "format": "uri",
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Segment Listing",
        "tags": [
          "Segments"
        ]
      },
      "post": {
        "description": "Create a new segment.",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "criteria": {
                  "and": [
                    {
                      "tag": "news"
                    },
                    {
                      "not": {
                        "tag": "sports"
                      }
                    }
                  ]
                },
                "display_name": "News but not sports"
              },
              "schema": {
                "description": "A set of audience selection criteria that you can reuse as a `segment`.",
                "properties": {
                  "criteria": {
                    "description": "Defines the set of devices to send notifications to. `criteria` is a JSON expression containing the same information as the audience selector, including [Event Segmentation](#schema-tag-event-segmentation). See [Audience Selection](#schema-tag-audience-selection) for more information.",
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/compoundSelector"
                      },
                      {
                        "$ref": "#/components/schemas/atomicSelector"
                      }
                    ],
                    "type": "object"
                  },
                  "display_name": {
                    "description": "Human readable name for this segment. This will be used in the dashboard.",
                    "example": [
                      "News but not sports"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "display_name",
                  "criteria"
                ],
                "title": "Segment object",
                "type": "object"
              }
            }
          },
          "description": "A single segment object.",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "properties": {
                    "ok": {
                      "description": "If true, the operation completed successfully and returns expected results.",
                      "type": "boolean"
                    },
                    "operation_id": {
                      "description": "A unique string identifying an API call, and can be used to identify operations in reporting and troubleshooting logs.",
                      "example": "ef625038-70a3-41f1-826f-57bc11dd625a",
                      "format": "uuid",
                      "type": "string"
                    },
                    "segment_id": {
                      "description": "The ID of the newly created segment.",
                      "example": "1d154121-951f-45b9-896d-e70718b5865b",
                      "format": "uuid",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "The segment was created.",
            "headers": {
              "Location": {
                "description": "The newly created segment.",
                "schema": {
                  "format": "uri",
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Create Segment",
        "tags": [
          "Segments"
        ]
      }
    },
    "/api/segments/{segment_id}": {
      "delete": {
        "description": "Remove the segment.",
        "responses": {
          "204": {
            "$ref": "#/components/responses/204",
            "description": "The delete operation was successful."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Delete Segment",
        "tags": [
          "Segments"
        ]
      },
      "get": {
        "description": "Lookup a segment.",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "A set of audience selection criteria that you can reuse as a `segment`.",
                  "properties": {
                    "criteria": {
                      "description": "Defines the set of devices to send notifications to. `criteria` is a JSON expression containing the same information as the audience selector, including [Event Segmentation](#schema-tag-event-segmentation). See [Audience Selection](#schema-tag-audience-selection) for more information.",
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/compoundSelector"
                        },
                        {
                          "$ref": "#/components/schemas/atomicSelector"
                        }
                      ],
                      "type": "object"
                    },
                    "display_name": {
                      "description": "Human readable name for this segment. This will be used in the dashboard.",
                      "example": [
                        "News but not sports"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "display_name",
                    "criteria"
                  ],
                  "title": "Segment object",
                  "type": "object"
                }
              }
            },
            "description": "Returns OK for success."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Segment Lookup",
        "tags": [
          "Segments"
        ]
      },
      "parameters": [
        {
          "description": "The segment you want to retrieve.",
          "in": "path",
          "name": "segment_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "description": "Change the definition of the segment.",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "criteria": {
                  "and": [
                    {
                      "tag": "entertainment"
                    },
                    {
                      "not": {
                        "tag": "sports"
                      }
                    }
                  ]
                },
                "display_name": "Entertainment but not sports"
              },
              "schema": {
                "description": "A set of audience selection criteria that you can reuse as a `segment`.",
                "properties": {
                  "criteria": {
                    "description": "Defines the set of devices to send notifications to. `criteria` is a JSON expression containing the same information as the audience selector, including [Event Segmentation](#schema-tag-event-segmentation). See [Audience Selection](#schema-tag-audience-selection) for more information.",
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/compoundSelector"
                      },
                      {
                        "$ref": "#/components/schemas/atomicSelector"
                      }
                    ],
                    "type": "object"
                  },
                  "display_name": {
                    "description": "Human readable name for this segment. This will be used in the dashboard.",
                    "example": [
                      "News but not sports"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "display_name",
                  "criteria"
                ],
                "title": "Segment object",
                "type": "object"
              }
            }
          },
          "description": "A single segment object."
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "$ref": "#/components/schemas/okResponseObject"
                }
              }
            },
            "description": "Returned if the segment has been succesfully updated."
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Update Segment",
        "tags": [
          "Segments"
        ],
        "x-warning": "When editing a segment, be mindful of any scheduled pushes that target that segment. If you have a scheduled push that targets a segment, and you edit that segment some time after the push's creation, the push audience will not be updated to match the new segment. The scheduled push will be sent to the version of the segment that existed when the push was created, rather than the updated version."
      }
    },
    "/api/sms/custom-response": {
      "post": {
        "description": "Respond to a mobile originated message based on a keyword consumed by your custom-response webhook, using a mobile-originated ID. See [Inbound Message Handling](https://docs.airship.com/platform/sms/inbound-message-handling/) for information about setting up a custom response webhook server.\n\nThis endpoint requires bearer authorization.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/appKeyHeader"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "mobile_originated_id": "28883743-4868-4083-ab5d-77ac4542531a",
                "sms": {
                  "alert": "Your balance is $1234.56. Go to https://www.mybank.com/myaccount/my-balance?ua-tag-add=balance_prefs:sms to see more about your account.",
                  "shorten_links": true
                }
              },
              "schema": {
                "oneOf": [
                  {
                    "properties": {
                      "mobile_originated_id": {
                        "description": "The identifier that you received through your SMS webhook corresponding to the mobile-originated message that you're issuing a custom response to. The `mobile_originated_id` is valid for 10 minutes from the `received_timestamp` in the payload sent to your webhook server's `/inbound-sms` endpoint.\n",
                        "format": "uuid",
                        "type": "string"
                      },
                      "sms": {
                        "properties": {
                          "alert": {
                            "description": "Your custom SMS message.",
                            "type": "string"
                          },
                          "shorten_links": {
                            "default": false,
                            "description": "If true, Airship will shorten http/https links (space delimited) in the message text fields, producing unique, 25 character URLs for each member of your audience. Airship produces `short_link_click` events in the Real-Time Data Stream for each link that a user engages with.\n\nWhen this setting is enabled, you can add or remove tags from users who click your links by adding query strings to your URLs. You can serialize tag operations with `&`:\n* `?ua-tag-add=tag_group:tag&another_group:tag2` — adds a tag in `tag_group` to the `channel_id`.\n* `?ua-tag-remove=tag_group:tag&another_group:tag2` — removes a tag in `tag group` from the `channel_id`.\n",
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "alert"
                        ],
                        "type": "object"
                      }
                    },
                    "required": [
                      "sms",
                      "mobile_originated_id"
                    ],
                    "type": "object"
                  },
                  {
                    "properties": {
                      "mms": {
                        "$ref": "#/components/schemas/mmsOverrideObject"
                      },
                      "mobile_originated_id": {
                        "description": "The identifier that you received through your SMS webhook corresponding to the mobile-originated message that you're issuing a custom response to. The `mobile_originated_id` is valid for 10 minutes from the `received_timestamp` in the payload sent to your webhook server's `/inbound-sms` endpoint.\n",
                        "format": "uuid",
                        "type": "string"
                      }
                    },
                    "required": [
                      "mms",
                      "mobile_originated_id"
                    ],
                    "type": "object"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "properties": {
                    "ok": {
                      "description": "If `true`, your request was successful.",
                      "type": "boolean"
                    },
                    "operation_id": {
                      "description": "A unique identifier for an operation; you can use this identifier to find the operation for troubleshooting purposes.",
                      "format": "uuid",
                      "title": "Operation ID",
                      "type": "string"
                    },
                    "push_id": {
                      "description": "A unique identifier for a push operation.",
                      "format": "uuid",
                      "title": "Push ID",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "The operation was successful."
          },
          "404": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "properties": {
                    "error": {
                      "description": "A plain-text explanation of the error.",
                      "type": "string"
                    },
                    "ok": {
                      "description": "If false, your request was unsuccessful.",
                      "type": "boolean"
                    },
                    "operation_id": {
                      "description": "A unique identifier for an operation; you can use this identifier to find the operation for troubleshooting purposes.",
                      "format": "uuid",
                      "title": "Operation ID",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "The mobile_originated_id could not be found."
          }
        },
        "security": [
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Custom SMS Response",
        "tags": [
          "SMS"
        ]
      }
    },
    "/api/sms/{msisdn}/keywords": {
      "post": {
        "description": "Trigger Mobile Originated (MO) keyword interactions on behalf of an MSISDN.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/appKeyHeader"
          },
          {
            "description": "The identifier for the SMS channel you want to trigger a mobile originated keyword from.",
            "in": "path",
            "name": "msisdn",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "keyword": "stop",
                "sender_ids": [
                  "US:54321",
                  "1234"
                ]
              },
              "schema": {
                "properties": {
                  "keyword": {
                    "description": "The keyword you want to trigger an action for.",
                    "type": "string"
                  },
                  "sender_ids": {
                    "description": "The sender IDs with keyword actions that you want to test. Airship returns a 400 if the `keyword` is not configured for one or more of the senders in the array.",
                    "items": {
                      "type": "string"
                    },
                    "minItems": 1,
                    "type": "array"
                  },
                  "timestamp": {
                    "description": "The ISO8601 date-time when the MO keyword was sent. If absent, Airship uses the server-time of your request.",
                    "type": "string"
                  }
                },
                "required": [
                  "keyword",
                  "sender_ids"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "properties": {
                    "ok": {
                      "description": "If `true`, your request was successful.",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "The operation was successful."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "The operation was not successful. If the request is formatted correctly, one or more `sender_ids` does not exist or the keyword is not configured for one or more of the `sender_ids`.\n"
          }
        },
        "security": [
          {
            "basicAppAuth": [
            ]
          },
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Manually Trigger a Keyword Interaction",
        "tags": [
          "SMS"
        ]
      }
    },
    "/api/subscription_lists": {
      "get": {
        "description": "Provides a list of subscription lists IDs that are associated with this app key.",
        "responses": {
          "200": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "properties": {
                    "ok": {
                      "description": "Success.",
                      "type": "boolean"
                    },
                    "subscription_lists": {
                      "description": "An array of Subscription List Result Objects.",
                      "items": {
                        "$ref": "#/components/schemas/subscriptionListResultObject"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returns OK, successfully retrieved the subscription lists for the app."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Subscription Lists Listing",
        "tags": [
          "Subscription Lists"
        ]
      }
    },
    "/api/tag-lists": {
      "get": {
        "description": "Retrieve information about all tag lists. This call returns a list of metadata that will not contain the actual lists of users.",
        "responses": {
          "200": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "properties": {
                    "lists": {
                      "description": "An array of List Objects.",
                      "items": {
                        "$ref": "#/components/schemas/listObject"
                      },
                      "type": "array"
                    },
                    "ok": {
                      "description": "Success.",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Lists metadata retrieved successfully."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Retrieve Lists",
        "tags": [
          "Tag Lists"
        ]
      },
      "post": {
        "description": "Add tags to your contacts by creating a list and uploading CSV file with user identifiers. The body of the request contains the name, description, and optional metadata for the list. After you define a list, you populate it with a call to the [Upload Tag List](#operation-api-tags-lists-list_name-csv-put) endpoint.",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "description": "First of many tags lists!",
                "extra": {
                  "filename": "tagsList.csv",
                  "source": "CRM"
                },
                "name": "ua_tags_my_new_list"
              },
              "schema": {
                "$ref": "#/components/schemas/listMetadataObject"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "$ref": "#/components/schemas/okResponseObject"
                }
              }
            },
            "description": "Returns OK for success.",
            "headers": {
              "Location": {
                "description": "The URI of the list, used for later updates.",
                "schema": {
                  "format": "uri",
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403",
            "description": "Forbidden. Authentication was correct, but the user does not have permission to access the requested API, e.g. the API may not be used to create or modify lists with `ua_tags_` prefixed name."
          },
          "409": {
            "$ref": "#/components/responses/409",
            "description": "The app has reached the maximum number of allowed lists (error_code 40906). A list with that name already exists (error_code 40907). List is already processing recently uploaded CSV (error_code 40910)."
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Create a Tag List",
        "tags": [
          "Tag Lists"
        ],
        "x-important": "You must prefix tag list names with `\"ua_tags_\"`."
      }
    },
    "/api/tag-lists/{list_name}/csv": {
      "parameters": [
        {
          "description": "The `name` of the list you want to retrieve or update.",
          "in": "path",
          "name": "list_name",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "description": "Upload a CSV that will set tag values on the specified channels or named users.\n\nThe first entry in the uploaded CSV must be a header row. The first field must be one of the following identifier types: `channel_id`, `msisdn`, `named_user`, `email_address`.\n\nOnly one identifier type is allowed per file.\n\nYou must include both `msisdn` and `sms_sender` columns when targeting SMS or MMS channel types. See example to the right.\n\n| Target Type      | Required Column Headers                                                                  |\n|------------------|------------------------------------------------------------------------------------------|\n| Web              | **channel_id**                                                                           |\n| Open Channel | **channel_id**                                                                           |\n| iOS              | **channel_id**                                                                           |\n| Android          | **channel_id**                                                                           |\n| Named User       | **named_user**                                                                               |\n| Email            | **email_address**                                                                            |\n| SMS             | - **msisdn** (numeric and no leading 0)  <br> - **sms_sender** (numeric or prefixed with country code and colon-separated, e.g. `US:1234`) |\n| MMS             | - **msisdn** (numeric and no leading 0)  <br> - **sms_sender** (numeric or prefixed with country code and colon-separated, e.g. `US:1234`) |\n",
        "requestBody": {
          "content": {
            "text/csv": {
              "schema": {
                "example": [
                  "C:/Users/someUser/Downloads/weekly_offers.csv"
                ],
                "format": "binary",
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "$ref": "#/components/responses/202"
          },
          "400": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Bad Request. Parsing or validating the request failed.\n\n| error_code | Description |\n|---|---|\n| 40002: | CSV contains too many identifiers. |\n| 40003: | CSV header contains too many columns. |\n| 40013: | CSV header’s first field must be an identifier. |\n| 40018: | CSV header does not contain required column for identifier type. |\n"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403",
            "description": "The API may only be used to create or modify lists with `ua_tags_` prefixed name."
          },
          "404": {
            "$ref": "#/components/responses/404",
            "description": "No list with that name exists."
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Upload Tag List",
        "tags": [
          "Tag Lists"
        ],
        "x-note": "The maximum number of rows that may be uploaded to a list is 10 million. `Content-Encoding: gzip` is supported (and recommended) on this endpoint to reduce network traffic.",
        "x-warning": "If your upload times out due to a poor connection, you must re-upload the list from scratch. Because we want to ensure that the entirety of a given list is successfully uploaded, we do not support partial list uploads."
      }
    },
    "/api/tag-lists/{list_name}/errors": {
      "get": {
        "description": "During processing, after a list is uploaded, errors can occur. Depending on the type of list processing, an error file may be created, showing a user exactly what went wrong.",
        "parameters": [
          {
            "description": "The name of the list.",
            "in": "path",
            "name": "list_name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "$ref": "#/components/schemas/listObject"
                }
              }
            },
            "description": "Returns OK for success. The response will contain the errors found during list processing."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404",
            "description": "No list with that name exists or the list has not yet successfully processed an uploaded CSV."
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          },
          {
            "bearerAuth": [
            ]
          }
        ],
        "summary": "Download List Errors",
        "tags": [
          "Tag Lists"
        ]
      }
    },
    "/api/templates": {
      "get": {
        "description": "List all existing templates. Returns an array of template objects in the `templates` attribute.",
        "parameters": [
          {
            "description": "Specifies the desired page number. Defaults to 1.",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Specifies how many results to return per page. Has a default value of 25 and a maximum value of 100.",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "example": 25,
              "type": "integer"
            }
          },
          {
            "description": "Specifies the name of the field you want to sort results by. Defaults to `created_at`.",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "enum": [
                "created_at",
                "modified_at",
                "last_used"
              ],
              "example": "created_at",
              "type": "string"
            }
          },
          {
            "description": "The direction of the sort, asc for ascending, and desc for descending. Defaults to asc.",
            "in": "query",
            "name": "order",
            "required": false,
            "schema": {
              "enum": [
                "asc",
                "desc"
              ],
              "example": "asc",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "properties": {
                    "count": {
                      "description": "The number of templates in the current response; this is effectively the page size.",
                      "type": "integer"
                    },
                    "next_page": {
                      "description": "There might be more than one page of results for this listing. Follow this URL if it is present to the next batch of results.",
                      "example": "https://go.urbanairship.com/api/templates?page=2&page_size=1",
                      "format": "url",
                      "type": "string"
                    },
                    "ok": {
                      "description": "Success.",
                      "type": "boolean"
                    },
                    "prev_page": {
                      "description": "Link to the previous page, if available.",
                      "format": "url",
                      "type": "string"
                    },
                    "templates": {
                      "description": "An array of Template Objects.",
                      "items": {
                        "$ref": "#/components/schemas/templateObject"
                      },
                      "type": "array"
                    },
                    "total_count": {
                      "description": "The total number of templates.",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned on success, with the JSON representation of the templates in the body of the response."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          }
        ],
        "summary": "List Templates",
        "tags": [
          "Personalization"
        ],
        "x-note": "This API is being replaced by new content templating features, currently available in the Airship UI. This API will not be removed until the new content templating feature supports all platforms, but we are no longer adding features to this API or its templating language.\n"
      },
      "post": {
        "description": "Create a new template.",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "description": "Our welcome message",
                "name": "Welcome Message",
                "push": {
                  "notification": {
                    "alert": "Hello {{FIRST_NAME}}, this is your welcome message!"
                  }
                },
                "variables": [
                  {
                    "default_value": "",
                    "description": "e.g. Mr, Ms, Dr, etc.",
                    "key": "TITLE",
                    "name": "Title"
                  },
                  {
                    "default_value": "",
                    "description": "Given name",
                    "key": "FIRST_NAME",
                    "name": "First Name"
                  },
                  {
                    "default_value": "",
                    "description": "Family name",
                    "key": "LAST_NAME",
                    "name": "Last Name"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/templateObject"
              }
            }
          },
          "description": "A single template object.",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "properties": {
                    "ok": {
                      "description": "If `true`, the operation completed successfully and returns an expected response.",
                      "type": "boolean"
                    },
                    "operation_id": {
                      "description": "A unique string identifying the operation, useful for reporting and troubleshooting.",
                      "example": "ef625038-70a3-41f1-826f-57bc11dd625a",
                      "format": "uuid",
                      "type": "string"
                    },
                    "template_id": {
                      "description": "A unique string identifying the template, used to call the template for pushing and other operations.",
                      "example": "0f7704e9-5dc0-4f7d-9964-e89055701b0a",
                      "format": "uuid",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "The template was created.",
            "headers": {
              "Location": {
                "description": "The uri for the template, used for later updates or sends.",
                "schema": {
                  "format": "uri",
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          }
        ],
        "summary": "Create Template",
        "tags": [
          "Personalization"
        ],
        "x-note": "This API is being replaced by new content templating features, currently available in the Airship UI. This API will not be removed until the new content templating feature supports all platforms, but we are no longer adding features to this API or its templating language.\n"
      }
    },
    "/api/templates/push": {
      "post": {
        "description": "Send a push notification based on a template to a list of devices. The body of the request must be a single push template payload or an array of one or more push template payloads.",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "audience": {
                  "ios_channel": "{{ios_channel}}"
                },
                "device_types": [
                  "ios"
                ],
                "merge_data": {
                  "substitutions": {
                    "FIRST_NAME": "Bob",
                    "LAST_NAME": "Smith",
                    "TITLE": ""
                  },
                  "template_id": "{{template_id}}"
                }
              },
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/pushTemplatePayload"
                  },
                  {
                    "items": {
                      "$ref": "#/components/schemas/pushTemplatePayload"
                    },
                    "title": "Array of Push Templates",
                    "type": "array"
                  }
                ]
              }
            }
          },
          "description": "A single push template payload or an array of push template payloads. Provide an override with any variable that has a `null` default value. For example, if you created a template with the variable `FIRST_NAME`, and that variable has `null` as a default value, you must provide a substitution for `FIRST_NAME` when pushing to that template.",
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "properties": {
                    "ok": {
                      "description": "If true, the operation completed successfully and returns an expected response.",
                      "type": "boolean"
                    },
                    "operation_id": {
                      "description": "A unique string identifying the operation, useful for reporting and troubleshooting.",
                      "example": "ef625038-70a3-41f1-826f-57bc11dd625a",
                      "format": "uuid",
                      "type": "string"
                    },
                    "push_ids": {
                      "description": "An array of the push IDs for this operation.",
                      "example": [
                        "00256e0b-b02f-4f12-a77f-4c3d57078330",
                        "f59970d3-3d42-4584-907e-f5c57f5d46a1"
                      ],
                      "items": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "maxItems": 100,
                      "minItems": 1,
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "The push notification has been accepted for processing."
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "406": {
            "$ref": "#/components/responses/406"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          }
        ],
        "summary": "Push to Template",
        "tags": [
          "Personalization"
        ],
        "x-note": "This API is being replaced by new content templating features, currently available in the Airship UI. This API will not be removed until the new content templating feature supports all platforms, but we are no longer adding features to this API or its templating language.\n"
      }
    },
    "/api/templates/push/validate": {
      "post": {
        "description": "This endpoint accepts the same range of payloads as `/api/template/push`, but only parses and validates the payload. It does not actually send a push.",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "audience": {
                  "ios_channel": "{{ios_channel}}"
                },
                "device_types": [
                  "ios"
                ],
                "merge_data": {
                  "substitutions": {
                    "FIRST_NAME": "Bob",
                    "LAST_NAME": "Smith",
                    "TITLE": ""
                  },
                  "template_id": "{{template_id}}"
                }
              },
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/pushTemplatePayload"
                  },
                  {
                    "items": {
                      "$ref": "#/components/schemas/pushTemplatePayload"
                    },
                    "type": "array"
                  }
                ]
              }
            }
          },
          "description": "A single push template payload or an array of push template payloads.",
          "required": true
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "406": {
            "$ref": "#/components/responses/406"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          }
        ],
        "summary": "Validate A Template",
        "tags": [
          "Personalization"
        ]
      }
    },
    "/api/templates/schedules": {
      "post": {
        "description": "Schedule a push notification based on a template to a list of devices.  Like a standard template-based push, the body of the request includes one or more push template payloads along with a schedule object determining when the template-based push should be sent.",
        "requestBody": {
          "content": {
            "application/json": {
              "example": [
                {
                  "audience": {
                    "ios_channel": "{{ios_channel}}"
                  },
                  "device_types": [
                    "ios"
                  ],
                  "merge_data": {
                    "substitutions": {
                      "FIRST_NAME": "Bob",
                      "LAST_NAME": "Takahashi",
                      "TITLE": ""
                    },
                    "template_id": "{{template_id}}"
                  },
                  "name": "Hello Bob",
                  "schedule": {
                    "scheduled_time": "{{sched_1m}}"
                  }
                },
                {
                  "audience": {
                    "android_channel": "{{android_channel}}"
                  },
                  "device_types": [
                    "android"
                  ],
                  "merge_data": {
                    "substitutions": {
                      "FIRST_NAME": "Joe",
                      "LAST_NAME": "Smith",
                      "TITLE": "Sir"
                    },
                    "template_id": "{{template_id}}"
                  },
                  "name": "Hello Joe",
                  "schedule": {
                    "scheduled_time": "{{sched_1m}}"
                  }
                }
              ],
              "schema": {
                "items": {
                  "description": "A scheduled push template object defines a push by overriding the variables defined in a specific Template Object and the `schedule` determining when the push should be sent. Specifically, a push template object specifies push audience and device types, along with substitutions for the variables defined in a template.",
                  "properties": {
                    "audience": {
                      "$ref": "#/components/schemas/audienceSelector",
                      "description": "The audience for the template."
                    },
                    "campaigns": {
                      "$ref": "#/components/schemas/campaignsObject"
                    },
                    "device_types": {
                      "description": "An array containing one or more strings identifying targeted platforms. Accepted platforms are\n    `ios`, `android`, `amazon`, `wns`, `web`, `sms`, `email`, and `open::<open_platform_name>` (using the `open_platform_name` value of your open channel).",
                      "items": {
                        "enum": [
                          "android",
                          "amazon",
                          "ios",
                          "web",
                          "wns",
                          "sms",
                          "email",
                          "open::open_platform_name"
                        ],
                        "type": "string"
                      },
                      "minItems": 1,
                      "title": "Device Types Selector",
                      "type": "array"
                    },
                    "merge_data": {
                      "description": "A template selector describing the template ID and variable substitutions to use with it.",
                      "properties": {
                        "substitutions": {
                          "description": "An object containing overrides for your template's variables. The key-value pairs in this object are the value of the `key` items defined in your template, and the values you want to substitute for the `default_value` of those keys.",
                          "type": "object"
                        },
                        "template_id": {
                          "description": "Specifies the template to override.",
                          "example": "ef34a8d9-0ad7-491c-86b0-aea74da15161",
                          "type": "string"
                        }
                      },
                      "required": [
                        "template_id"
                      ],
                      "type": "object"
                    },
                    "name": {
                      "description": "An optional name for the scheduled push operation.",
                      "type": "string"
                    },
                    "schedule": {
                      "$ref": "#/components/schemas/scheduleSpec",
                      "description": "Determines when the push is sent."
                    }
                  },
                  "required": [
                    "audience",
                    "device_types",
                    "merge_data",
                    "schedule"
                  ],
                  "type": "object"
                },
                "type": "array"
              }
            }
          },
          "description": "An array of scheduled pushes"
        },
        "responses": {
          "202": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "properties": {
                    "ok": {
                      "description": "Success.",
                      "type": "boolean"
                    },
                    "operation_id": {
                      "description": "A unique string which identifies a single API call, and can be used to group multiple entities or side-effects as related, in reporting and troubleshooting logs.",
                      "example": "ef625038-70a3-41f1-826f-57bc11dd625a",
                      "format": "uuid",
                      "type": "string"
                    },
                    "schedule_ids": {
                      "description": "An array of schedule IDs.",
                      "example": [
                        "00256e0b-b02f-4f12-a77f-4c3d57078330",
                        "f59970d3-3d42-4584-907e-f5c57f5d46a1"
                      ],
                      "items": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "maxItems": 100,
                      "minItems": 1,
                      "type": "array"
                    },
                    "schedule_urls": {
                      "description": "An array of schedule URLs. The URL for each schedule is the schedules endpoint, appended with the `schedule_id` of the schedule.",
                      "example": [
                        "https://go.urbanairship/api/schedules/2d69320c-3c91-5241-fac4-248269eed109"
                      ],
                      "items": {
                        "format": "uri",
                        "pattern": "^https.*:\\/\\/.+",
                        "type": "string"
                      },
                      "maxItems": 100,
                      "minItems": 0,
                      "type": "array"
                    },
                    "schedules": {
                      "description": "An array of schedule objects.",
                      "items": {
                        "$ref": "#/components/schemas/scheduleObject"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "The scheduled push has been accepted for processing."
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "406": {
            "$ref": "#/components/responses/406"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          }
        ],
        "summary": "Schedule a Templated Push",
        "tags": [
          "Personalization"
        ]
      }
    },
    "/api/templates/{template_id}": {
      "delete": {
        "description": "Delete a template. If the template is successfully deleted, the response does not include a body.",
        "responses": {
          "200": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "properties": {
                    "ok": {
                      "description": "If true, the operation completed successfully and returns an expected response.",
                      "type": "boolean"
                    },
                    "operation_id": {
                      "description": "A unique string identifying the operation, useful for reporting and troubleshooting.",
                      "example": "ef625038-70a3-41f1-826f-57bc11dd625a",
                      "format": "uuid",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "The template with given ID has been succesfully deleted."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          }
        ],
        "summary": "Delete Template",
        "tags": [
          "Personalization"
        ],
        "x-note": "This API is being replaced by new content templating features, currently available in the Airship UI. This API will not be removed until the new content templating feature supports all platforms, but we are no longer adding features to this API or its templating language.\n"
      },
      "get": {
        "description": "Fetch the current definition of a single template.",
        "responses": {
          "200": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "properties": {
                    "ok": {
                      "description": "If true, the operation completed successfully and returns an expected response.",
                      "type": "boolean"
                    },
                    "template": {
                      "$ref": "#/components/schemas/templateObject"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned on success, with the JSON representation of the template in the body of the response."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          }
        ],
        "summary": "Look up a Template",
        "tags": [
          "Personalization"
        ],
        "x-note": "This API is being replaced by new content templating features, currently available in the Airship UI. This API will not be removed until the new content templating feature supports all platforms, but we are no longer adding features to this API or its templating language.\n"
      },
      "parameters": [
        {
          "description": "A required string ID of the template.",
          "in": "path",
          "name": "template_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "Update a template. The request body is a partially-defined template object, containing the field(s) you want to change and their updated values.",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "description": "Our updated welcome message",
                "name": "Welcome Message",
                "push": {
                  "notification": {
                    "alert": "Hello {{FIRST_NAME}} {{LAST_NAME}}, this is your welcome message!"
                  }
                }
              },
              "schema": {
                "description": "A partially-defined template object. Provide only `variables` and `push` items that you want to update.",
                "properties": {
                  "description": {
                    "description": "The description of the template.",
                    "type": "string"
                  },
                  "name": {
                    "description": "The name of the template.",
                    "type": "string"
                  },
                  "push": {
                    "$ref": "#/components/schemas/templatePushObject"
                  },
                  "variables": {
                    "description": "An array of Variable Specifications.",
                    "items": {
                      "$ref": "#/components/schemas/templateVariableObject"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.urbanairship+json; version=3": {
                "schema": {
                  "properties": {
                    "ok": {
                      "description": "If true, the operation completed successfully and returns an expected response.",
                      "type": "boolean"
                    },
                    "operation_id": {
                      "description": "A unique string identifying the operation, useful for reporting and troubleshooting.",
                      "example": "ef625038-70a3-41f1-826f-57bc11dd625a",
                      "format": "uuid",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned if the template has been succesfully updated."
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          }
        ],
        "summary": "Update Template",
        "tags": [
          "Personalization"
        ],
        "x-note": "This API is being replaced by new content templating features, currently available in the Airship UI. This API will not be removed until the new content templating feature supports all platforms, but we are no longer adding features to this API or its templating language.\n"
      }
    },
    "/api/user/messages/{push_id}": {
      "delete": {
        "description": "Delete a Message Center message completely, removing it from every user’s inbox. This is an asynchronous call; a success response means that the deletion has been queued for processing.\n\nThis delete call will work with either the `message_id` or the `push_id` of the accompanying push notification.\n\nThis endpoint will not work with a `group_id` from an automated message or a push to local time delivery. To delete a rich message that was part of an automated or local time delivery, you must use the relevant `push_id` from the operation.\n",
        "parameters": [
          {
            "description": "The `push_id` or `message_id` of the Rich Message you want to delete from users` inboxes.",
            "in": "path",
            "name": "push_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "$ref": "#/components/responses/202"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "security": [
          {
            "basicAuth": [
            ]
          }
        ],
        "summary": "Delete Message from Inbox",
        "tags": [
          "Push"
        ],
        "x-note": "For time-sensitive messages you should consider including an `expiry` time, as detailed in the [In-App Message Object](#schemas-inappobject). Setting an `expiry` value will prevent you from having to manually remove messages."
      }
    }
  },
  "servers": [
    {
      "description": "The base URL for Airship's North American cloud site.",
      "url": "https://go.urbanairship.com"
    },
    {
      "description": "The base URL for Airship's European cloud site.",
      "url": "https://go.airship.eu"
    }
  ],
  "tags": [
    {
      "description": "Send notifications or rich messages to supported channels, or validate JSON payloads.",
      "name": "Push"
    },
    {
      "description": "Schedule notifications.",
      "name": "Schedules",
      "x-important": "The API prohibits batch sizes of larger than 1000 for scheduled pushes, and batches of larger than 100 for push to local time scheduled pushes."
    },
    {
      "description": "Manage Automated notifications using the `/api/pipelines` endpoints.",
      "name": "Automation",
      "x-note": "In the dashboard UI, we refer to pipelines as *Automation* or *Automated Messages*.\n"
    },
    {
      "description": "Create A/B Tests using the `/api/experiments` endpoint. An experiment or A/B test is a set of distinct push notification variants sent to subsets of an audience. You can create up to 26 notification variants and send each variant to an audience subset.",
      "name": "A/B Tests"
    },
    {
      "description": "Use the `/templates` API to create templates and push templatized notifications.",
      "name": "Personalization",
      "x-note": "Consider the `/templates` API deprecated. You should instead [create templates in the Airship dashboard](../../guides/messaging/user-guide/personalization/about/), and send using the `/create-and-send` or `/pipelines` APIs.\n"
    },
    {
      "description": "The Region API endpoints provide a listing and detail for all of your defined entry/exit regions, including custom shapes (polygons) and circles (point/radius).",
      "name": "Regions"
    },
    {
      "description": "User events that occur outside of your app can be submitted to Airship for inclusion in analytics reporting, as triggers for Automation, or for export via Connect. These events can take place on the web, e.g., your website, social media, or in your back office systems such as CRM or POS software. Any event that can be associated with a mobile app user can be submitted as an Airship custom event. The events that you submit are associated with channels and are available to use as custom event triggers.",
      "name": "Custom Events"
    },
    {
      "description": "Channels are Airship’s unique identifiers for addressing applications on iOS, Android, Amazon, and web devices.",
      "name": "Channels"
    },
    {
      "description": "Open Channels are custom communication channels that you can configure for messaging, using the same segmentation and scheduling tools available on natively-supported platforms (iOS, Android, etc). With Open Channels, you define a new open platform, e.g., SMS, Slack, Acme™ Smart Toasters, and register the new platform with Airship.\nIf you are sending through the push API, platform overrides for open platforms are covered in the Open Channels Platform Overrides section.",
      "name": "Open Channels"
    },
    {
      "description": "Register email channels, set opt-in status, and manipulate tags on email channels.",
      "name": "Email"
    },
    {
      "description": "Register and manage SMS channels. See [SMS Platform Information](../../platform/sms) to get started with SMS notifications.",
      "name": "SMS"
    },
    {
      "description": "A Named User is a proprietary identifier that maps customer-chosen IDs, e.g., CRM data, to Channels. It is useful to think of a Named User as an individual consumer who might have more than one mobile device registered with your app. For example, Named User \"john_doe_123\" might have a personal Android phone and an iPad, on both of which he has opted in for push notifications. If you want to reach John on both devices, associate the Channel (device) identifiers for each device to the Named User \"john_doe_123,\" and push to the Named User. Notifications will then fan out to each associated device.",
      "name": "Named Users"
    },
    {
      "description": "Operations to assign or unassign tags for Channels and Named Users. Tags belong to tag groups and can help you organize channels using identifiers relevant to your operations. See the [Tag Groups Tutorial](../../tutorials/ea-tag-groups/) for information about, and strategies for using, tag groups.\n",
      "name": "Tags",
      "x-note": "If you previously used the `/api/tags` endpoint to set tags, it is strongly recommended that you transition to the endpoints and methods specified in this document."
    },
    {
      "description": "Segments are portions of your audience that have arbitrary metadata (e.g., tags, location data, etc.) attached. You can create, delete, update, or request information on a segment via the `/api/segments/` endpoint. Pushing to a segment is done through the `/api/push/` endpoint. See the [Audience Selection](#schema-tag-audience-selection) section for more information.",
      "name": "Segments"
    },
    {
      "description": "Define and manage attribute lists; upload corresponding attribute data in CSV format.",
      "name": "Attribute Lists"
    },
    {
      "description": "With the Static List API endpoint, you can easily target and manage lists of devices that are defined in your systems outside of Airship. Any list or grouping of devices for which the canonical source of data about the members is elsewhere is a good candidate for Static Lists, e.g., members of a customer loyalty program.",
      "externalDocs": {
        "url": "https://docs.urbanairship.com/tutorials/ea-static-lists-api/"
      },
      "name": "Static Lists"
    },
    {
      "description": "Simultaneously send a notification to an audience of SMS, email, or open channel addresses and register channels for new addresses in your `audience`. Create and send can help you immediately notify new `open::`, `email`, or `sms` contacts without having to wait for channel registration.\n\nAddresses in the `audience` that are not yet associated with channels are registered as new channels. Addresses in the payload that are already registered to opted-in, or have an `opted_in` value that is newer than an `opted_out` value for their `channel_id` will still receive notifications, but are not registered as new channels.\n",
      "name": "Create and Send",
      "x-note": "You cannot update channel information or opt-in status from these endpoints. If you want to update channels, refer to the appropriate email, SMS, or open channel endpoints."
    },
    {
      "description": "The Airship Reports APIs are available in only certain account plans. Please contact Support or your Account Manager if you are unable to use them for an app key that you believe is on an appropriate plan.\n",
      "name": "Reports"
    },
    {
      "description": "The Feed API is used to add and remove RSS or Atom feeds used to trigger push notifications. For most users the API is unnecessary, and you should use the dashboard instead.",
      "externalDocs": {
        "description": "for more information about integrating feeds, see",
        "url": "https://docs.urbanairship.com/integration/#feeds-integration"
      },
      "name": "Feeds"
    }
  ],
  "x-schema-tags": [
    {
      "description": "Event Segmentation lets you target audiences based on lifecycle actions or custom events that have occurred.\n\nTo segment based on event activity, include an [Activity Object](#schemas-activityobject) in your audience, and an optional [Where Object](#schemas-whereobject) to filter on specific event properties.\n",
      "name": "Event Segmentation"
    },
    {
      "description": "Schemas for the different types of attribute objects. Available attribute types are TEXT, INTEGER, and DATE.\n",
      "name": "Attributes",
      "x-tip": "Use [compound selectors](#schemas-compoundselector) to negate (NOT) or select a value range.\n"
    },
    {
      "description": "Success and error responses typically conform to the following formats.",
      "name": "Response Format"
    },
    {
      "description": "Override push settings and provide content for specific platforms (selected by `device_type`). The following schemas represent overrides for each platform.",
      "name": "Platform Overrides"
    },
    {
      "description": "Override push settings and provide content for specific platforms (selected by `device_type`) using a `template`. Templated platform overrides automatically allow personalization using [`{{handlebars}}`](../../guides/messaging/user-guide/personalization/dynamic-content)",
      "name": "Platform Overrides with Templates",
      "x-note": "The `fields` key under `template` is deprecated. This old method is still supported, but has been superseded by just using `{{handlebars}}` directly in the payload."
    },
    {
      "description": "The following schemas represent ways to target by location, region, or geofence.",
      "name": "Region Data Formats"
    },
    {
      "description": "Objects that help you select and target an audience.",
      "name": "Audience Selection"
    },
    {
      "description": "Attributes appear on channels and named users. You can also target an audience using attribute selectors.",
      "name": "Attributes"
    },
    {
      "description": "Options to set delays and delivery time windows for automated messages.\n",
      "name": "Automation Timing"
    },
    {
      "description": "Personalization templates objects, including pushes to templates and template listing.\n",
      "name": "Personalization Template Objects"
    },
    {
      "description": "Objects and samples for pipelines (Automation) endpoints.",
      "name": "Pipeline Objects"
    },
    {
      "description": "Objects and samples for `/create-and-send` endpoints. A full object can contain parts of schedule, template, audience, and platform override objects (for `email`, `sms`, or `open::` platforms).\n\nThe `notification` payload for create and send objects supports both\nstored and inline templates. Using inline templates, you can define and\npopulate variables to personalize notifications to your new channels.",
      "name": "Create and Send",
      "x-note": "You cannot update channel information or opt-in status using `create-and-send`. If you want to update channels, refer to the appropriate email, sms, or open channel endpoints."
    }
  ]
}