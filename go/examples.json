{
  "components": {
    "schemas": {
      "absoluteWindow": [
        {
          "description": "Example Absolute Time Window",
          "examples": [
            {
              "lang": "json",
              "source": "{ \"audience\":\n   {\n      \"date\": {\n         \"days\": {\n            \"start\": \"2020-01-01\",\n            \"end\": \"2020-01-15\"\n         }\n      }\n   }\n}\n"
            }
          ]
        }
      ],
      "actionsObject": [
        {
          "description": "Example Tag Actions",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"actions\": {\n      \"add_tag\": [\n         \"airship\",\n         \"blimp\"\n      ],\n      \"remove_tag\": [\n         \"boat\",\n         \"car\"\n      ],\n      \"share\": \"Check out Airship!\",\n      \"open\": {\n         \"type\": \"url\",\n         \"content\": \"http://www.urbanairship.com\"\n      },\n      \"app_defined\": {\n         \"some_app_defined_action\": \"some_value\"\n      }\n   }\n}\n"
            }
          ]
        },
        {
          "description": "Example Landing Page Action",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"actions\": {\n      \"open\": {\n         \"type\": \"landing_page\",\n         \"content\": {\n            \"body\": \"<html>content</html>\",\n            \"content_type\": \"text/html\",\n            \"content_encoding\": \"utf-8\"\n         },\n         \"fallback_url\" : \"https://www.urbanairship.com/settings\"\n      }\n   }\n}\n"
            }
          ]
        },
        {
          "description": "Example Open Phone App",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"actions\": {\n      \"open\": {\n         \"type\": \"url\",\n         \"content\": \"tel:15035551234\"\n      }\n   }\n}\n"
            }
          ]
        },
        {
          "description": "Example Deep Link Action",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"actions\": {\n      \"open\": {\n         \"type\": \"deep_link\",\n         \"content\": \"prefs\",\n         \"fallback_url\": \"https://www.urbanairship.com/settings\"\n      }\n   }\n}\n"
            }
          ]
        }
      ],
      "activityObject": [
        {
          "description": "Activity Audience Object",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"audience\": {\n      \"activity\": \"app_open\",\n      \"operator\": \"greater\",\n      \"value\": 2,\n      \"after\": 3,\n      \"precision\": \"days\",\n      \"where\": {\n         \"property\": \"/_triggering_push/campaigns/categories\",\n         \"operator\": \"equals\",\n         \"value\": \"neowise\"\n      }\n   }\n}\n"
            }
          ]
        }
      ],
      "amazonOverrideWithTemplate": [
        {
          "description": "Amazon Override With a Template",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"amazon\": {\n      \"title\": \"Shoe sale on {{level}} floor!\",\n      \"alert\": \"All the shoes are on sale {{name}}!\",\n      \"summary\": \"Don't miss out!\",\n      \"icon\": \"shoes\",\n      \"icon_color\": \"{{iconColor}}\"\n   }\n}\n"
            }
          ]
        },
        {
          "description": "Amazon Override With a template_id",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"amazon\": {\n       \"template\": {\n           \"template_id\": \"608f1f6c-8860-c617-a803-b187b491568e\"\n       }\n   }\n}\n"
            }
          ]
        }
      ],
      "androidOverrideObject": [
        {
          "description": "Android Override in a Notification",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"android\": {\n      \"title\": \"Shoe sale\",\n      \"alert\": \"All the shoes are on sale!\",\n      \"summary\": \"Don't miss out!\",\n      \"extra\": {\n          \"url\": \"http://example.com\",\n          \"story_id\": \"1234\",\n          \"moar\": \"{\\\"key\\\": \\\"value\\\"}\"\n      },\n      \"icon\": \"shoes\",\n      \"icon_color\": \"#8B4513\",\n      \"notification_channel\": \"promos\"\n   }\n }\n"
            }
          ]
        },
        {
          "description": "Example Wearable Notification",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"android\": {\n      \"local_only\": true,\n      \"wearable\": {\n         \"background_image\": \"http://example.com/background.png\",\n         \"extra_pages\": [\n            {\n               \"title\": \"Page 1 title - optional title\",\n               \"alert\": \"Page 1 title - optional alert\"\n            },\n            {\n               \"title\": \"Page 2 title - optional title\",\n               \"alert\": \"Page 2 title - optional alert\"\n            }\n         ],\n         \"interactive\": {\n            \"type\": \"ua_yes_no_foreground\",\n            \"button_actions\": {\n               \"yes\": {\n                  \"add_tag\": \"butter\",\n                  \"remove_tag\": \"cake\",\n                  \"open\": {\n                     \"type\": \"url\",\n                     \"content\": \"http://www.urbanairship.com\"\n                  }\n               },\n               \"no\": {\n                  \"add_tag\": \"nope\"\n               }\n            }\n         }\n      }\n   }\n}\n"
            }
          ]
        }
      ],
      "androidOverrideWithTemplate": [
        {
          "description": "Android Override With a Template",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"android\": {\n      \"title\": \"Shoe sale on {{level}} floor!\",\n      \"alert\": \"All the shoes are on sale {{name}}!\",\n      \"summary\": \"Don't miss out!\",\n      \"icon\": \"shoes\",\n      \"icon_color\": \"{{iconColor}}\",\n      \"extra\": {\n            \"url\": \"http://example.com\",\n            \"story_id\": \"1234\",\n            \"moar\": \"{\\\"key\\\": \\\"value\\\"}\"\n      },\n      \"notification_channel\": \"promos\"\n   }\n}\n"
            }
          ]
        },
        {
          "description": "Android Override With a template_id",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"android\": {\n      \"template\": {\n            \"template_id\": \"608f1f6c-8860-c617-a803-b187b491568e\"\n      },\n      \"extra\": {\n            \"url\": \"http://example.com\",\n            \"story_id\": \"1234\",\n            \"moar\": \"{\\\"key\\\": \\\"value\\\"}\"\n      },\n      \"notification_channel\": \"promos\"\n   }\n}\n"
            }
          ]
        }
      ],
      "atomicSelector": [
        {
          "description": "Example Audience Selection by Tag",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"audience\": {\n      \"tag\": \"sfGiants\",\n      \"group\": \"favorite_teams\"\n   }\n}\n"
            }
          ]
        },
        {
          "description": "Example SMS Channel Audience",
          "examples": [
            {
              "lang": "json",
              "source": "{\n    \"audience\" : {\n        \"sms_id\" :  {\n            \"sender\" : \"US:12345\",\n            \"msisdn\" : \"15552243311\"\n        }\n    }\n}\n"
            }
          ]
        },
        {
          "description": "Example Audience Segment",
          "examples": [
            {
              "lang": "json",
              "source": "{\n    \"audience\" : {\n        \"segment\" : \"<segment-id>\"\n    }\n}\n"
            }
          ]
        },
        {
          "description": "Example Audience of Named Users",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"audience\" : {\n      \"named_user\" : \"user-id-54320\"\n   }\n}\n"
            }
          ]
        }
      ],
      "attributes": [
        {
          "description": "Example Attributes Object",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"device_attributes\": {\n      \"ua_device_os\": \"10\",\n      \"ua_country\": \"US\",\n      \"ua_device_model\": \"SM-G973U\",\n      \"ua_local_tz\": \"America/Los_Angeles\",\n      \"ua_app_version\": \"2020-02-01T002322-goat\",\n      \"ua_location_settings\": \"true\",\n      \"ua_language\": \"en\",\n      \"ua_sdk_version\": \"13.1.0\",\n      \"ua_carrier\": \"Verizon \"\n   },\n   \"attributes\": {\n      \"first_name\": \"Cool\",\n      \"last_name\": \"Person\",\n      \"birthdate\": \"1983-03-15T00:00:00\",\n   }\n}\n"
            }
          ]
        }
      ],
      "campaignsObject": [
        {
          "description": "Example Campaigns in a Push Payload",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"audience\": \"all\",\n   \"notification\": {\n      \"alert\": \"Taco Kitten wins Kentucky Derby by a whisker\"\n   },\n   \"campaigns\": {\n      \"categories\": [\n         \"kittens\",\n         \"tacos\",\n         \"horse_racing\"\n      ]\n   },\n   \"device_types\": [ \"ios\", \"android\" ]\n}\n"
            }
          ]
        }
      ],
      "channelObject": [
        {
          "description": "Example ios Channel",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"channel_id\": \"b8f9b663-0a3b-cf45-587a-be880946e881\",\n   \"device_type\": \"ios\",\n   \"installed\": true,\n   \"background\": true,\n   \"opt_in\": false,\n   \"push_address\": \"FE66489F304DC75B8D6E8200DFF8A456E8DAEACEC428B427E9518741C92C6660\",\n   \"created\": \"2020-08-08T20:41:06\",\n   \"last_registration\": \"2020-05-01T18:00:27\",\n   \"named_user_id\": \"some_id_that_maps_to_your_systems\",\n   \"alias\": null,\n   \"tags\": [\n      \"tag1\",\n      \"tag2\"\n   ],\n\n   \"tag_groups\": {\n      \"sports fan\": [\"Federer fan\", \"Messi fan\"],\n      \"music fan\": [ \"Beyonce\", \"Muse\" ],\n      \"ua_locale_country\": [ \"US\" ],\n      \"ua_locale_language\": [ \"en\" ]\n   },\n\n   \"ios\": {\n      \"badge\": 0,\n      \"quiettime\": {\n         \"start\": null,\n         \"end\": null\n      },\n      \"tz\": \"America/Los_Angeles\"\n   }\n}\n"
            }
          ]
        }
      ],
      "complexEventSelector": [
        {
          "description": "Compound Event Selector Using 'and'",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"and\": [\n      {\n         \"key\": \"name\",\n         \"value\": {\n            \"equals\": \"POWER_LEVEL\"\n         }\n      },\n      {\n         \"key\": \"value\",\n         \"value\": {\n            \"greater_than\": 9000,\n            \"at_most\": 10000\n         }\n      }\n   ]\n}\n"
            }
          ]
        }
      ],
      "compoundSelector": [
        {
          "description": "Example with Implicit `OR`",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"audience\" : {\n      \"tag\" : [\"apples\", \"oranges\", \"bananas\"]\n   }\n}\n"
            }
          ]
        },
        {
          "description": "Example with Nested Selectors",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"audience\": {\n      \"AND\": [\n         {\"OR\": [\n            {\"tag\": \"sports\"},\n            {\"tag\": \"entertainment\"}\n         ]},\n         {\"tag\": \"language_en\"}\n      ]\n   }\n}\n"
            }
          ]
        },
        {
          "description": "Example `NOT` Selector",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"audience\": {\n      \"AND\": [\n         { \"tag\": \"Federer fan\" },\n         { \"NOT\":\n            { \"tag\": \"Messi fan\" }\n         }\n      ]\n   }\n}\n"
            }
          ]
        }
      ],
      "contactSubscriptionListObject": [
        {
          "description": "Example Contact Subscription Lists Object",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"list_ids\": [\"example_listId-2\", \"example_listId-4\"],\n   \"scope\": \"app\"\n}\n"
            }
          ]
        }
      ],
      "contactsScopedBatchItem": [
        {
          "description": "Example Scoped Batch item",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"scope\": [\"web\", \"email\", \"app\"],\n   \"subscription_lists\": {\n      \"subscribe\": [\"subscription_1\", \"subscription_2\"],\n      \"unsubscribe\": [\"subscription_3\"]\n   }\n}\n"
            }
          ]
        }
      ],
      "customEventObject": [
        {
          "description": "Example Event",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"occurred\": \"2020-05-02T02:31:22\",\n   \"user\": {\n       \"named_user_id\": \"cool.person\"\n   },\n   \"body\": {\n       \"name\": \"purchased\",\n       \"value\": 239.85,\n       \"transaction\": \"686f53d4-7e0s-36d7-234e-c9792dac6e7b\",\n       \"interaction_id\": \"your.store/us/en_us/pd/shoe/pid-123456/pgid-123456\",\n       \"interaction_type\": \"email\",\n       \"properties\": {\n          \"description\": \"sky high\",\n          \"brand\": \"victory\",\n          \"colors\": [\n          \"red\",\n          \"blue\"\n          ],\n          \"items\": [\n          {\n             \"text\": \"New Line Sneakers\",\n             \"price\": \"$ 79.95\"\n          },\n          {\n             \"text\": \"Old Line Sneakers\",\n             \"price\": \"$ 79.95\"\n          },\n          {\n             \"text\": \"Blue Line Sneakers\",\n             \"price\": \"$ 79.95\"\n          }\n          ],\n          \"name\": \"Cool Person\",\n          \"userLocation\": {\n          \"state\": \"CO\",\n          \"zip\": \"80202\"\n          }\n       },\n      \"session_id\": \"22404b07-3f8f-4e42-a4ff-a996c18fa9f1\"\n   }\n}\n"
            }
          ]
        }
      ],
      "dateAttribute": [
        {
          "description": "Date Attribute Example",
          "examples": [
            {
              "lang": "json",
              "source": "{ \"audience\":\n   {\n      \"attribute\": \"birth_date\",\n      \"operator\": \"equals\",\n      \"precision\": \"month_day\",\n      \"value\": \"05-04\"\n   }\n}\n"
            }
          ]
        },
        {
          "description": "Compound selector using before and after date operators",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"audience\": {\n      \"AND\": [\n            {\n               \"attribute\": \"birth_date\",\n               \"operator\": \"after\",\n               \"value\": 55,\n               \"precision\": \"years\"\n            },\n            {\n               \"attribute\": \"birth_date\",\n               \"operator\": \"before\",\n               \"value\": 40,\n               \"precision\": \"years\"\n            }\n      ]\n   },\n   \"device_types\": [\n      \"android\"\n   ],\n   \"notification\": {\n      \"alert\": \"Hello, Generation X!\"\n   }\n}\n"
            }
          ]
        }
      ],
      "email": [
        {
          "description": "Example Object",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"audience\": {\n    \"create_and_send\" : [\n      {\n        \"ua_address\": \"new@email.com\",\n        \"ua_commercial_opted_in\": \"2020-11-29T10:34:22\"\n      },\n      {\n        \"ua_address\" : \"ben@icetown.com\",\n        \"ua_commercial_opted_in\": \"2020-11-29T12:45:10\"\n      }\n    ]\n  },\n  \"device_types\" : [ \"email\" ],\n  \"notification\" : {\n    \"email\": {\n      \"subject\": \"Welcome to the Winter Sale! \",\n      \"html_body\": \"<h1>Seasons Greetings</h1><p>Check out our winter deals!</p><p><a data-ua-unsubscribe=\\\"1\\\" title=\\\"unsubscribe\\\" href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\">Unsubscribe</a></p>\",\n      \"plaintext_body\": \"Greetings! Check out our latest winter deals! [[ua-unsubscribe href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\"]]\",\n      \"message_type\": \"transactional\",\n      \"sender_name\": \"Airship\",\n      \"sender_address\": \"team@airship.com\",\n      \"reply_to\": \"no-reply@airship.com\",\n      \"click_tracking\": false,\n      \"open_tracking\": false,\n      \"attachments\": [\n        {\n          \"id\": \"0e10a6b9-725c-4f6b-9af2-9ef5b31328c0\",\n        },\n        {\n          \"id\": \"5503b5fe-ed69-4609-bef6-6fef0e6e428f\"\n        }\n      ]\n    }\n  },\n  \"campaigns\": {\n      \"categories\": [\"winter sale\", \"west coast\"]\n  }\n}\n"
            }
          ]
        }
      ],
      "emailOverrideObject": [
        {
          "description": "Example with Email Notification",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"audience\": {\n      \"named_user\": \"jane_doe\"\n   },\n   \"device_types\": [\n      \"email\",\n      \"android\"\n   ],\n   \"notification\": {\n      \"android\": {\n         \"alert\": \"Hello Android user!\"\n      },\n      \"email\": {\n         \"subject\": \"Did you get that thing I sent you?\",\n         \"html_body\": \"<h2>Richtext body goes here</h2><p>Wow!</p><p><a data-ua-unsubscribe=\\\"1\\\" title=\\\"unsubscribe\\\" href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\">Unsubscribe</a></p>\",\n         \"plaintext_body\": \"Plaintext version goes here [[ua-unsubscribe href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\"]]\",\n         \"message_type\": \"transactional\",\n         \"sender_name\": \"Airship\",\n         \"sender_address\": \"team@urbanairship.com\",\n         \"reply_to\": \"no-reply@urbanairship.com\",\n         \"click_tracking\": false,\n         \"open_tracking\": false,\n         \"attachments\": [\n            {\n               \"id\": \"0e10a6b9-725c-4f6b-9af2-9ef5b31328c0\",\n            },\n            {\n               \"id\": \"5503b5fe-ed69-4609-bef6-6fef0e6e428f\"\n            }\n         ]\n      }\n   }\n}\n"
            }
          ]
        }
      ],
      "emailOverrideWithTemplate": [
        {
          "description": "Example with Inline Template",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"audience\": {\n    \"create_and_send\" : [\n      {\n        \"ua_address\": \"new@email.com\",\n        \"ua_commercial_opted_in\": \"2020-11-29T10:34:22\",\n        \"customer\": {\n            \"first_name\": \"Jenny\",\n            \"last_name\": \"Smith\",\n            \"location\": \"Vancouver\"\n        },\n        \"cart\" : [\n          {\n            \"name\" : \"Rubber Gloves\",\n            \"code\" : \"abaccgdsagsde\",\n            \"qty\": 1\n          },\n          {\n            \"name\" : \"Bleach Alternative\",\n            \"code\" : \"cacadgdesgaga\",\n            \"qty\": 1\n          }\n        ]\n      }\n    ]\n  },\n  \"device_types\" : [ \"email\" ],\n  \"notification\" : {\n    \"email\": {\n      \"message_type\": \"commercial\",\n      \"sender_name\": \"Airship\",\n      \"sender_address\": \"team@airship.com\",\n      \"reply_to\": \"no-reply@airship.com\",\n      \"subject\": \"Hi {{customer.first_name}}, your products are ready!\",\n      \"plaintext_body\": \"Hi {{customer.first_name}},/n Your order is ready for pickup at our {{customer.location}} store!/n Your order:/n {{#each cart}}{{this.qty}}x {{this.name}}/n{{/each}} Thanks,/n Your local AwesomeStore.\"\n    }\n  }\n}\n"
            }
          ]
        },
        {
          "description": "Example with template_id",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"audience\": {\n    \"create_and_send\" : [\n      {\n        \"ua_address\": \"new@email.com\",\n        \"ua_commercial_opted_in\": \"2020-11-29T10:34:22\",\n        \"customer\": {\n            \"first_name\": \"Jenny\",\n            \"last_name\": \"Smith\",\n            \"location\": \"Vancouver\"\n        },\n        \"cart\" : [\n          {\n            \"name\" : \"Rubber Gloves\",\n            \"code\" : \"abaccgdsagsde\",\n            \"qty\": 1\n          },\n          {\n            \"name\" : \"Bleach Alternative\",\n            \"code\" : \"cacadgdesgaga\",\n            \"qty\": 1\n          }\n        ]\n      }\n    ]\n  },\n  \"device_types\" : [ \"email\" ],\n  \"notification\" : {\n    \"email\": {\n      \"message_type\": \"commercial\",\n      \"sender_name\": \"Airship\",\n      \"sender_address\": \"team@airship.com\",\n      \"reply_to\": \"no-reply@airship.com\",\n      \"template\": {\n        \"template_id\": \"9335bb2a-2a45-456c-8b53-42af7898236a\"\n      }\n    }\n  }\n}\n"
            }
          ]
        }
      ],
      "error": [
        {
          "description": "400 Response",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"ok\" : false,\n  \"error\" : \"Could not parse request body.\",\n  \"error_code\" : 40000,\n  \"details\" : {\n      \"error\" : \"The key 'alert1' is not allowed in this context\",\n      \"path\" : \"notification.alert1\",\n      \"location\" : {\n          \"line\" : 5,\n          \"column\" : 18\n      }\n  }\n"
            }
          ]
        },
        {
          "description": "400 Response Without Location",
          "examples": [
            {
              "lang": "json",
              "source": "{\n    \"ok\": false,\n    \"error\": \"Could not parse request body.\",\n    \"error_code\": 40902,\n    \"details\": {\n        \"error\": \"malformed sender\"\n    }\n}\n"
            }
          ]
        },
        {
          "description": "404 Response",
          "examples": [
            {
              "lang": "json",
              "source": "{\n    \"ok\": false,\n    \"error\": \"Entity not found\",\n    \"error_code\": 40401\n}\n"
            }
          ]
        }
      ],
      "eventIdentifier": [
        {
          "description": "Simple `Open` Event Identifier",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"event\": \"open\"\n}\n"
            }
          ]
        },
        {
          "description": "Tag Added Example",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"tag_added\": \"cool_user\"\n}\n"
            }
          ]
        },
        {
          "description": "Custom Event Example",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"custom_event\": {\n    \"key\": \"name\",\n    \"value\": {\n      \"equals\": \"christmas\"\n    }\n  }\n}\n"
            }
          ]
        }
      ],
      "experimentObject": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"name\": \"<experiment name>\",\n   \"description\": \"<experiment description>\",\n   \"control\": \"<control group>\",\n   \"audience\": \"<audience-selection>\",\n   \"device_types\": \"<device-types>\",\n   \"campaigns\": \"<campaigns>\",\n   \"variants\": \"[<variant specifications>]\",\n   \"id\": \"<id>\",\n   \"created_at\": \"timestamp\",\n   \"push_id\": \"<push_id>\"\n}\n"
            }
          ]
        }
      ],
      "feedReferences": [
        {
          "description": "Example Feed References",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"feed_references\": {\n      \"feeds\": [\n         {\n            \"name\": \"featured_product\",\n            \"params\": {\n               \"sub_category\": \"shoes\"\n            },\n            \"on_error\": \"continue\"\n         }\n      ],\n      \"defaults\": {\n         \"featured_product\": {\n            \"category\": \"featured\"\n         }\n      }\n   }\n}\n"
            }
          ]
        }
      ],
      "geofenceObject": [
        {
          "description": "Polygon Geofence",
          "examples": [
            {
              "lang": "json",
              "source": "{\n    \"type\": \"POLYGON\",\n    \"points\": [\n        {\n            \"latitude\": 1.000,\n            \"longitude\": 90\n        },\n        {\n            \"latitude\": 2.000,\n            \"longitude\": 90\n        },\n        {\n            \"latitude\": 3.000,\n            \"longitude\": 0\n        }\n    ]\n}\n"
            }
          ]
        },
        {
          "description": "Circle Geofence",
          "examples": [
            {
              "lang": "json",
              "source": "{\n    \"type\": \"CIRCLE\",\n    \"center\": {\n        \"latitude\": 0,\n        \"longitude\": 0\n    },\n    \"radius\": 1000\n}\n"
            }
          ]
        }
      ],
      "inAppObject": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"audience\": \"all\",\n   \"device_types\": [ \"ios\", \"android\" ],\n   \"notification\": { \"alert\": \"This part appears on the lockscreen\" },\n   \"in_app\": {\n      \"alert\": \"This part appears in-app!\",\n      \"display_type\": \"banner\",\n      \"expiry\": \"2020-04-01T12:00:00\",\n      \"display\": {\n         \"position\": \"top\"\n      },\n      \"actions\": {\n         \"add_tag\": \"in-app\"\n      }\n   }\n}\n"
            }
          ]
        }
      ],
      "interactiveObject": [
        {
          "description": "Example with `type` Actions",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"interactive\": {\n      \"type\": \"ua_yes_no_foreground\",\n      \"button_actions\": {\n         \"yes\": {\n            \"add_tag\": \"more_cake_please\",\n            \"remove_tag\": \"lollipop\",\n            \"open\": {\n               \"type\": \"url\",\n               \"content\": \"http://www.urbanairship.com\"\n            }\n         },\n         \"no\": {\n            \"add_tag\": \"nope\"\n         }\n      }\n   }\n}\n"
            }
          ]
        },
        {
          "description": "Example with `ua_share` Actions",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"interactive\": {\n      \"type\": \"ua_share\",\n      \"button_actions\": {\n         \"share\": { \"share\": \"Look at me! I'm on a boat.\" }\n      }\n   }\n}\n"
            }
          ]
        }
      ],
      "iosOverrideObject": [
        {
          "description": "Example with Media Attachment",
          "examples": [
            {
              "lang": "json",
              "source": "{\n    \"audience\": \"all\",\n    \"device_types\": [\n            \"ios\"\n        ],\n    \"notification\": {\n        \"ios\": {\n            \"thread_id\": \"sfGiants_news\",\n            \"alert\": {\n                \"title\": \"Kevin Gausman Throws a Perfect Game\",\n                \"body\": \"Kevin Gausman stymies the Houston Astros for San Francisco's second perfect game in franchise history.\",\n                \"summary-arg\": \"San Francisco Giants\",\n                \"summary-arg-count\": 1\n            },\n            \"relevance-score\": 1.0,\n            \"interruption_level\": \"passive\",\n            \"sound\": \"strike-call\",\n            \"media_attachment\": {\n                \"content\": {\n                    \"title\": \"Kevin Gausman\",\n                    \"body\": \"Gausman strikes out Justin Turner\"\n                },\n                \"options\": {\n                    \"crop\": {\n                        \"height\": 0.5,\n                        \"width\": 0.5,\n                        \"x\": 0.25,\n                        \"y\": 0.25\n                    },\n                    \"time\": 15\n                },\n                \"url\": \"https://media.giphy.com/media/6nJmrhlu4aL1m/giphy.gif\"\n            },\n            \"mutable_content\": 1\n        }\n    }\n}\n"
            }
          ]
        }
      ],
      "iosOverrideWithTemplate": [
        {
          "description": "iOS Override With a Template",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"ios\": {\n      \"thread_id\": \"sfGiants_news\",\n      \"title\": \"{{NAME}} Throws a Perfect Game\",\n      \"body\": \"{{NAME}} stymies the {{OTHER_TEAM}} for San Francisco's first perfect game in franchise history.\",\n      \"subtitle\": \"San Francisco Giants {{DATE}}\",\n      \"sound\": \"strike-call\",\n      \"media_attachment\": {\n         \"content\": {\n            \"title\": \"Kevin Gausman\",\n            \"body\": \"Gausman strikes out Justin Turner\"\n         },\n         \"options\": {\n            \"crop\": {\n               \"height\": 0.5,\n               \"width\": 0.5,\n               \"x\": 0.25,\n               \"y\": 0.25\n            },\n            \"time\": 15\n         },\n         \"url\": \"https://media.giphy.com/media/6nJmrhlu4aL1m/giphy.gif\"\n      },\n      \"mutable_content\": 1\n   }\n}\n"
            }
          ]
        },
        {
          "description": "iOS Override With a template_id",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"ios\": {\n      \"template\": {\n            \"template_id\": \"608f1f6c-8860-c617-a803-b187b491568e\"\n      }\n   }\n}\n"
            }
          ]
        }
      ],
      "listMetadataObject": [
        {
          "description": "List Metadata Object",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"name\" : \"ua_attributes_my_new_list\",\n  \"description\" : \"First of many attributes lists!\",\n  \"extra\" : {\n    \"filename\": \"attributes.csv\",\n    \"source\": \"CRM\"\n  }\n}\n"
            }
          ]
        }
      ],
      "listObject": [
        {
          "description": "List Response Object",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"ok\": true,\n  \"lists\": [\n      {\n        \"name\": \"ua_attributes_my_list\",\n        \"description\": \"My first list\",\n        \"extra\": {\n            \"filename\": \"list.csv\",\n            \"source\": \"crm\"\n        },\n        \"created\": \"2020-05-13T21:41:25\",\n        \"last_updated\": \"2020-05-13T21:45:17\",\n        \"channel_count\": 0,\n        \"error_path\": \"https://go.urbanairship.com/api/attribute-lists/ua_attributes_my_list/errors\",\n        \"status\": \"ready\"\n      },\n      {\n        \"name\": \"ua_attributes_another_list\",\n        \"description\": \"My second list\",\n        \"extra\": {\n            \"filename\": \"list2.csv\",\n            \"source\": \"api\"\n        },\n        \"created\": \"2020-05-14T21:41:25\",\n        \"last_updated\": \"2020-05-14T21:45:17\",\n        \"channel_count\": 0,\n        \"error_path\": \"https://go.urbanairship.com/api/attribute-lists/ua_attributes_another_list/errors\",\n        \"status\": \"ready\"\n      }\n  ]\n}\n"
            }
          ]
        }
      ],
      "localization": [
        {
          "description": "Example Array of Localizations",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"localizations\": [\n      {\n         \"language\": \"de\",\n         \"country\": \"AT\",\n         \"notification\": {\n            \"alert\": \"Grüss Gott\"\n         }\n      },\n      {\n         \"language\": \"de\",\n         \"country\": \"DE\",\n         \"notification\": {\n            \"alert\": \"Guten Tag\"\n         }\n      }\n   ]\n}\n"
            }
          ]
        }
      ],
      "messageObject": [
        {
          "description": "Message Object Example",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"audience\": \"all\",\n   \"notification\": {\n      \"ios\": {\n         \"badge\": \"+1\"\n      }\n   },\n   \"message\": {\n      \"title\": \"This week's offer\",\n      \"body\": \"<html><body><h1>blah blah</h1> etc...</html>\",\n      \"content_type\": \"text/html\",\n      \"expiry\": \"2020-04-01T12:00:00\",\n      \"extra\": {\n         \"offer_id\": \"608f1f6c-8860-c617-a803-b187b491568e\"\n      },\n      \"icons\": {\n         \"list_icon\": \"http://cdn.example.com/message.png\"\n      }\n   }\n}\n"
            }
          ]
        }
      ],
      "messageObjectWithTemplate": [
        {
          "description": "Message Object Example",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"message\": {\n      \"title\": \"Save on {{product}} through {{end_date}}!\",\n      \"body\": \"<html><body><h1>here's a cool {{offer}}</h1> etc...</html>\",\n      \"content_type\": \"text/html\",\n      \"expiry\": \"2020-04-01T12:00:00\",\n      \"extra\": {\n         \"offer_id\": \"608f1f6c-8860-c617-a803-b187b491568e\"\n      },\n      \"icons\": {\n         \"list_icon\": \"http://cdn.example.com/message.png\"\n      }\n   }\n}\n"
            }
          ]
        }
      ],
      "mms": [
        {
          "description": "Example create-and-send for MMS without template",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"audience\": {\n    \"create_and_send\": [\n        {\n            \"ua_msisdn\": \"15558675309\",\n            \"ua_sender\": \"15551234567\",\n            \"ua_opted_in\": \"2020-11-11T18:45:30\",\n        }\n    ]\n  },\n  \"device_types\": [\n    \"mms\"\n  ],\n  \"notification\": {\n    \"mms\": {\n      \"fallback_text\": \"Delivery failed, but you should still check this out.\",\n      \"subject\" : \"Hey, thanks for subscribing!\",\n      \"slides\": [\n        {\n          \"text\": \"Check this out!\",\n          \"media\": {\n              \"url\": \"https://i.imgur.com/1t466Om.jpg\",\n              \"content_type\": \"image/jpeg\",\n              \"content_length\": 52918\n            }\n          }\n        ]\n      }\n    }\n  }\n"
            }
          ]
        }
      ],
      "mmsOverrideObject": [
        {
          "description": "Example MMS Notification",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"mms\": {\n      \"subject\" : \"Double Rainbows\",\n      \"fallback_text\": \"See https://urbanairship.com/double-rainbows?ua-tag-add=rainbows:used_fallback_text for double rainbows!\",\n      \"shorten_links\": true,\n      \"slides\" : [\n         {\n            \"text\": \"A double rainbow is a wonderful sight where you get two spectacular natural displays for the price of one.\",\n            \"media\": {\n               \"url\": \"https://www.metoffice.gov.uk/binaries/content/gallery/mohippo/images/learning/learn-about-the-weather/rainbows/full_featured_double_rainbow_at_savonlinna_1000px.jpg\",\n               \"content_type\": \"image/jpeg\",\n               \"content_length\": 238686\n            }\n         }\n      ]\n   },\n   \"device_types\": [\"sms\"]\n}\n"
            }
          ]
        }
      ],
      "mmsOverrideWithTemplate": [
        {
          "description": "Example Object with Merge Fields in Audience Object",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"audience\": {\n    \"create_and_send\" : [\n      {\n        \"ua_sender\" : \"US:12345\",\n        \"ua_msisdn\" : \"15558675309\",\n        \"ua_opted_in\" : \"2020-08-30T22:35:00\",\n        \"delivery_image\": \"url\",\n        \"customer\": {\n            \"first_name\": \"Jenny\",\n            \"last_name\": \"Smith\",\n            \"location\": \"Vancouver\"\n        },\n        \"order\" : [\n          {\n            \"name\" : \"Rubber Gloves\",\n            \"code\" : \"abaccgdsagsde\",\n            \"qty\": 1\n          },\n          {\n            \"name\" : \"Bleach Alternative\",\n            \"code\" : \"cacadgdesgaga\",\n            \"qty\": 1\n          }\n        ]\n      }\n    ]\n  },\n  \"device_types\" : [ \"mms\" ],\n  \"notification\" : {\n    \"mms\" : {\n      \"subject\" : \"Your order is on the way!\",\n      \"fallback_text\": \"Hi, {{customer.first_name}}, your {{#each order}}{{order.name}}{{/each}} just shipped\",\n      \"slides\": [\n        {\n          \"media\": {\n            \"url\": \"https://www.deliveryimage.com/order12345.jpg\",\n            \"content_type\": \"image/jpeg\",\n            \"content_length\": 123100\n          },\n          \"text\": \"Hi, {{customer.first_name}}, your {{#each order}}{{order.name}}{{/each}} just shipped.\"\n        }\n      ]\n    }\n  }\n}\n"
            }
          ]
        },
        {
          "description": "Example with Inline Template",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"audience\": {\n    \"create_and_send\" : [\n      {\n        \"ua_sender\" : \"US:12345\",\n        \"ua_msisdn\" : \"15558675309\",\n        \"ua_opted_in\" : \"2020-08-30T22:35:00\",\n        \"delivery_image\": \"https://www.deliveryimage.com/order12345.jpg\",\n        \"content-length\": \"1234567\",\n        \"customer\": {\n            \"first_name\": \"Jenny\",\n            \"last_name\": \"Smith\",\n            \"location\": \"Vancouver\"\n        },\n        \"order\" : [\n          {\n            \"name\" : \"Rubber Gloves\",\n            \"code\" : \"abaccgdsagsde\",\n            \"qty\": 1\n          },\n          {\n            \"name\" : \"Bleach Alternative\",\n            \"code\" : \"cacadgdesgaga\",\n            \"qty\": 1\n          }\n        ]\n      }\n    ]\n  },\n  \"device_types\" : [ \"mms\" ],\n  \"notification\" : {\n    \"mms\" : {\n      \"subject\": \"Your order is on the way!\",\n      \"fallback_text\": \"Hi, {{customer.first_name}}, your {{#each order}}{{order.name}}{{/each}} was delivered!\",\n      \"slides\": [\n        {\n          \"media\": {\n            \"url\": \"https://www.deliveryimage.com/order12345.jpg\",\n            \"content_type\": \"image/jpeg\",\n            \"content_length\": 123100\n          },\n          \"text\" : \"Hi, {{customer.first_name}}, your {{#each order}}{{order.name}}{{/each}} was delivered!\"\n        }\n      ]\n    }\n  }\n}\n"
            }
          ]
        },
        {
          "description": "Example with template_id",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"audience\": {\n    \"create_and_send\" : [\n      {\n        \"ua_sender\" : \"US:12345\",\n        \"ua_msisdn\" : \"15558675309\",\n        \"ua_opted_in\" : \"2020-08-30T22:35:00\",\n        \"delivery_image\": \"https://www.deliveryimage.com/order12345.jpg\",\n        \"content-length\": \"1234567\",\n        \"customer\": {\n            \"first_name\": \"Jenny\",\n            \"last_name\": \"Smith\",\n            \"location\": \"Vancouver\"\n        },\n        \"order\" : [\n          {\n            \"name\" : \"Rubber Gloves\",\n            \"code\" : \"abaccgdsagsde\",\n            \"qty\": 1\n          },\n          {\n            \"name\" : \"Bleach Alternative\",\n            \"code\" : \"cacadgdesgaga\",\n            \"qty\": 1\n          }\n        ]\n      }\n    ]\n  },\n  \"device_types\" : [ \"mms\" ],\n  \"notification\" : {\n    \"mms\" : {\n      \"template\" : {\n        \"template_id\" : \"9335bb2a-2a45-456c-8b53-42af7898236a\"\n      },\n      \"slides\": [\n        {\n          \"media\": {\n            \"url\": \"https://cdn.mycdn.com/coolImage.jpg\",\n            \"content_type\": \"image/jpeg\",\n            \"content_length\": 123100\n          }\n        }\n      ]\n    }\n  }\n}\n"
            }
          ]
        }
      ],
      "namedUserResponseBody": [
        {
          "description": "Example Named User",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"named_user\": {\n      \"named_user_id\": \"user-id-1234\",\n      \"tags\": {\n        \"loyalty program\": [\n            \"silver-member\",\n            \"ten-plus-years\",\n            \"valued-customer\"\n        ],\n        \"crm id\": [\n            \"abc-123-def-456\"\n        ]\n      },\n      \"subscription_lists\": [\n        {\n          \"list_ids\": [\"example_listId-1\", \"example_listId-5\"],\n          \"scope\": \"web\"\n        },\n        {\n          \"list_ids\": [\"example_listId-2\", \"example_listId-3\"],\n          \"scope\": \"app\"\n        },\n        {\n          \"list_ids\": [\"example_listId-2\"],\n          \"scope\": \"web\"\n        },\n        {\n          \"list_ids\": [\"example_listId-3\"],\n          \"scope\": \"email\"\n        },\n        {\n          \"list_ids\": [\"example_listId-4\"],\n          \"scope\": \"sms\"\n        }\n      ],\n      \"attributes\": {\n        \"item_purchased\": \"Fur removal tool\",\n        \"cats_name\": \"Sammy\",\n        \"pets_age\": 12\n      },\n      \"user_attributes\": {\n        \"ua_country\": \"US\",\n        \"ua_language\": \"en\",\n        \"ua_tz\": \"America/Los_Angeles\"\n      },\n      \"channels\": [\n        {\n            \"channel_id\": \"dceafd02-b852-4305-83df-98b65fa40dd4\",\n            \"device_type\": \"ios\",\n            \"installed\": true,\n            \"opt_in\": true,\n            \"push_address\": \"FFFF\",\n            \"created\": \"2020-04-08T20:41:06\",\n            \"last_registration\": \"2020-05-01T18:00:27\",\n            \"tags\": [\n              \"meow\"\n            ]\n        }\n      ]\n  }\n}\n"
            }
          ]
        }
      ],
      "namedUserScopedBatch": [
        {
          "description": "Example Scoped Batch",
          "examples": [
            {
              "lang": "json",
              "source": "[\n  {\n    \"scope\": [\"app\"],\n    \"subscription_lists\": {\n        \"subscribe\": [\"stickers\", \"gifs\"],\n        \"unsubscribe\": [\"cookies\"]\n    }\n  }\n]\n"
            }
          ]
        }
      ],
      "namedUserSubscriptionListItem": [
        {
          "description": "Example Subscription List Item",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"list_ids\": [\"example_listId-2\", \"example_listId-3\"],\n  \"scope\": \"app\"\n}\n"
            }
          ]
        }
      ],
      "namedUserSubscriptionListsObject": [
        {
          "description": "Example Subscription Lists object",
          "examples": [
            {
              "lang": "json",
              "source": "{\n    \"subscribe\": [\"stickers\", \"gifs\"],\n    \"unsubscribe\": [\"cookies\"]\n}\n"
            }
          ]
        }
      ],
      "notificationObject": [
        {
          "description": "Example Notification with All Platforms",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"audience\": \"all\",\n   \"device_types\": [\n      \"ios\",\n      \"android\",\n      \"amazon\",\n      \"web\",\n      \"email\",\n      \"wns\",\n      \"open::toaster\"\n   ],\n   \"notification\": {\n      \"ios\": {\n         \"alert\": \"Hello, iDevices\"\n      },\n      \"android\": {\n         \"alert\": \"These are not the...yeah, lame joke.\"\n      },\n      \"amazon\": {\n         \"alert\": \"Read any good books lately?\"\n      },\n      \"web\": {\n         \"alert\": \"Oh the tangled web we weave\"\n      },\n      \"email\": {\n         \"subject\": \"Did you get that thing I sent you?\",\n         \"html_body\": \"<h2>Richtext body goes here</h2><p>Wow!</p><p><a data-ua-unsubscribe=\\\"1\\\" title=\\\"unsubscribe\\\" href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\">Unsubscribe</a></p>\",\n         \"plaintext_body\": \"Plaintext version goes here [[ua-unsubscribe href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\"]]\",\n         \"message_type\": \"commercial\",\n         \"sender_name\": \"Airship\",\n         \"sender_address\": \"team@urbanairship.com\",\n         \"reply_to\": \"no-reply@urbanairship.com\"\n      },\n      \"wns\": {\n         \"alert\": \"Developers, developers, developers.\"\n      },\n      \"open::toaster\": {\n         \"alert\": \"Would you like avocados with that?\"\n      }\n   }\n}\n"
            }
          ]
        }
      ],
      "numberAttribute": [
        {
          "description": "Number Attribute Example",
          "examples": [
            {
              "lang": "json",
              "source": "{ \"audience\":\n   {\n      \"attribute\": \"lifetime_value\",\n      \"operator\": \"greater\",\n      \"value\": 15000\n   }\n}\n"
            }
          ]
        }
      ],
      "okResponseObject": [
        {
          "description": "Example OK Response",
          "examples": [
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 202 Accepted\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true,\n}\n"
            }
          ]
        },
        {
          "description": "Example OK with Identifiers",
          "examples": [
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 202 Accepted\nData-Attribute: push_ids\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true,\n    \"operation_id\": \"df6a6b50-9843-0304-d5a5-743f246a4946\",\n    \"push_ids\": [\n        \"9d78a53b-b16a-c58f-b78d-181d5e242078\"\n    ]\n}\n"
            }
          ]
        }
      ],
      "open": [
        {
          "description": "Example Object",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"audience\" : {\n    \"create_and_send\": [\n      {\n        \"ua_address\" : \"36d5a261-0454-40f5-b952-942c4b2b0f22\",\n        \"name\": \"Perry\"\n      }\n    ]\n  },\n  \"device_types\" : [ \"open::smart_fridge\" ],\n  \"notification\" : {\n      \"open::smart_fridge\": {\n          \"alert\" : \"Hey {{name}}, you're out of ice cream!\"\n      }\n  },\n  \"campaigns\": {\n      \"categories\": [\"needs_ice_cream\", \"cookies_and_cream\"]\n  }\n}\n"
            }
          ]
        }
      ],
      "openChannelOverrideObject": [
        {
          "description": "Example with Open Channel Override",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"audience\": \"all\",\n   \"device_types\": [\n     \"open::smart_toaster\",\n     \"open::smart_fridge\",\n     \"ios\"\n   ],\n   \"notification\": {\n      \"alert\": \"A generic alert sent to all platforms specified in device_types\",\n      \"open::smart_toaster\": {\n         \"title\": \"Toaster Alert!\",\n         \"alert\": \"a shorter alert for toaster users\",\n         \"extra\": {\n            \"some_info\": \"for toasters only\",\n            \"some_id\": \"671ecd12-ad56-4b2f-98f1-107ce33d33e6\"\n         }\n      },\n      \"open::smart_fridge\": {\n         \"alert\": \"a longer alert for users of smart fridges, who have more space.\",\n         \"summary\": \"a longer summary of some content.\",\n         \"media_attachment\": \"https://example.com/cat_standing_up.jpeg\",\n         \"interactive\": {\n            \"type\": \"ua_yes_no_foreground\",\n            \"button_actions\": {\n               \"yes\": {\n                  \"open\": {\n                     \"type\": \"url\",\n                     \"content\": \"http://www.urbanairship.com\"\n                  }\n               },\n               \"no\": {\n                  \"app_defined\": {\n                     \"foo\": \"bar\"\n                  }\n               }\n            }\n         }\n      }\n   }\n}\n"
            }
          ]
        }
      ],
      "pipelineObject": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"name\":\"The Darkest Pipeline\",\n   \"enabled\":true,\n   \"immediate_trigger\":\"first_open\",\n   \"outcome\":{\n      \"push\":{\n         \"audience\":\"triggered\",\n         \"device_types\":[\n            \"ios\",\n            \"android\"\n         ],\n         \"notification\":{\n            \"alert\":\"Cool goatee, Abed\"\n         }\n      }\n   },\n   \"timing\":{\n      \"delay\":{\n         \"seconds\":7200\n      },\n      \"schedule\":{\n         \"type\":\"local\",\n         \"miss_behavior\":\"wait\",\n         \"dayparts\":[\n            {\n               \"days_of_week\":[\n                  \"thursday\"\n               ],\n               \"allowed_times\":[\n                  {\n                     \"preferred\":\"21:30:00\"\n                  }\n               ]\n            }\n         ]\n      }\n   }\n}\n"
            }
          ]
        },
        {
          "description": "Example email pipeline",
          "examples": [
            {
              "lang": "json",
              "source": "{\n \"name\":\"Read Receipt\",\n \"enabled\":true,\n \"immediate_trigger\": {\n    \"tag_added\": \"newSubscription\"\n },\n \"outcome\":{\n    \"push\":{\n       \"audience\":\"triggered\"\n       },\n       \"device_types\": [\n          \"email\"\n       ],\n       \"notification\": {\n          \"email\": {\n             \"subject\": \"Did you get that thing I sent you?\",\n             \"html_body\": \"<h2>Richtext body goes here</h2><p>Wow!</p><p><a data-ua-unsubscribe=\\\"1\\\" title=\\\"unsubscribe\\\" href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\">Unsubscribe</a></p>\",\n             \"plaintext_body\": \"Plaintext version goes here [[ua-unsubscribe href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\"]]\",\n             \"message_type\": \"commercial\",\n             \"sender_name\": \"Airship\",\n             \"sender_address\": \"team@urbanairship.com\",\n             \"reply_to\": \"no-reply@urbanairship.com\"\n          }\n       }\n    },\n   \"timing\":{\n      \"delay\":{\n         \"seconds\":7200\n      }\n   }\n}\n"
            }
          ]
        }
      ],
      "pointObject": [
        {
          "description": "Coordinate Point Example",
          "examples": [
            {
              "lang": "json",
              "source": "{\n    \"latitude\": 45,\n    \"longitude\": 179.999999\n}\n"
            }
          ]
        }
      ],
      "pushObject": [
        {
          "description": "Example Push Object",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"audience\": {\n      \"OR\": [\n         {\n            \"tag\": [\n               \"sports\",\n               \"entertainment\"\n            ]\n         },\n         {\n            \"ios_channel\": \"9c36e8c7-5a73-47c0-9716-99fd3d4197d5\"\n         }\n      ]\n   },\n   \"notification\": {\n      \"alert\": \"Hi from Airship!{{#if super_sale }} We're having a sale on {{ products.0.name }}!{{/if}}\",\n      \"ios\": {\n         \"extra\": {\n            \"url\": \"http://www.urbanairship.com\"\n         }\n      }\n   },\n   \"options\": {\n      \"expiry\": \"2020-04-01T12:00:00\"\n   },\n   \"message\": {\n      \"title\": \"Message title\",\n      \"body\": \"<Your message here>\",\n      \"content_type\": \"text/html\"\n   },\n   \"in_app\": {\n      \"alert\": \"This part appears in-app!\",\n      \"display_type\": \"banner\",\n      \"expiry\": \"2020-04-01T12:00:00\",\n      \"display\": {\n         \"position\": \"top\"\n      }\n   },\n   \"device_types\": [ \"ios\", \"wns\", \"android\" ],\n   \"global_attributes\": {\n      \"super_sale\": true,\n      \"products\": [\n          {\"id\": 1, \"name\": \"New Line Sneakers\", \"price\": \"79.95\"},\n          {\"id\": 2, \"name\": \"Old Line Sneakers\", \"price\": \"59.95\"}\n      ]\n   }\n}\n"
            }
          ]
        },
        {
          "description": "Example Personalized Push",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"device_types\": [\n      \"sms\"\n   ],\n   \"options\": {\n      \"personalization\": true\n   },\n   \"notification\": {\n      \"sms\": {\n         \"alert\": \"Hi {{name}}, {{#feed \\\"weather_updates\\\" kw=\"today\" as |weather|}}It's going to be {{weather.temp}} in {{weather.loc}} today!{{/feed}}\",\n      }\n   },\n   \"audience\": {\n      \"tag\": \"local_updates\",\n      \"group\": \"weather\"\n   },\n   \"feeds\": [\n      {\n         \"name\": \"weather_updates\",\n         \"params\": {\n            \"kw\": \"today\"\n         }\n      }\n   ]\n}\n"
            }
          ]
        },
        {
          "description": "Example Localized Push",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"device_types\": [ \"ios\", \"android\" ]\n  \"audience\": {\n     \"tag\": \"needs_a_greeting\",\n     \"group\": \"new_customer\"\n  },\n  \"notification\": {\n     \"alert\": \"Hi!\"\n  },\n  \"localizations\": [\n      {\n         \"language\": \"de\",\n         \"country\": \"AT\",\n         \"notification\": {\n            \"alert\": \"Grüss Gott\"\n         }\n      },\n      {\n         \"language\": \"de\",\n         \"country\": \"DE\",\n         \"notification\": {\n            \"alert\": \"Guten Tag\"\n         }\n      }\n  ]\n}\n"
            }
          ]
        }
      ],
      "pushTemplatePayload": [
        {
          "description": "Push Template Payload Example",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"audience\": {\n      \"tag\": [\n         \"yanny\",\n         \"laurel\"\n      ]\n   },\n   \"device_types\": [\n      \"email\",\n      \"ios\",\n      \"android\",\n      \"web\"\n   ],\n   \"merge_data\": {\n      \"template_id\": \"8cce6cc8-7d78-43c7-80b5-81ac24c07672\",\n      \"substitutions\": {\n         \"FIRST_NAME\": \"Bob\",\n         \"LAST_NAME\": \"Takahashi\",\n         \"TITLE\": null\n      }\n   },\n   \"campaigns\": {\n      \"categories\": [\n         \"winter sale\",\n         \"west coast\"\n      ]\n   }\n}\n"
            }
          ]
        }
      ],
      "regionObject": [
        {
          "description": "Example Polygon-type Geofence Imported from Gimbal",
          "examples": [
            {
              "lang": "json",
              "source": "{\n    \"region_id\": \"abe5deb3-00d0-446e-8c5d-94b6421a01e0\",\n    \"name\": \"My Favorite Place\",\n    \"created_at\": \"2020-06-09T12:34:56\",\n    \"updated_at\": \"2020-06-09T12:34:56\",\n    \"geofence\": {\n        \"type\": \"POLYGON\",\n        \"points\": [\n            {\n                \"latitude\": 90.0,\n                \"longitude\": 180.0\n            },\n            {\n                \"latitude\": 90.0,\n                \"longitude\": 180.0\n            },\n            {\n                \"latitude\": 0.0,\n                \"longitude\": 0.0\n            }\n        ]\n    },\n    \"beacons\": [\n        {\n            \"name\": \"entryway\",\n            \"id\": \"VLSHLAOEXOFCMLDVTKFQ\"\n        },\n        {\n            \"name\": \"Exhibit A\",\n            \"id\": \"ZAQQMNOZKRFCRPYEUCZI\"\n        }\n    ],\n    \"attributes\": {\n        \"store_name\": \"REI\"\n    },\n    \"source_info\": {\n        \"source\": \"GIMBAL\",\n        \"region_id\": \"4BPSFLKJSDFLKJSDFLKJ\",\n        \"vendor_href\": \"http://api.gimbal.com/2/places/4BPSFLKJSDFLKJSDFLKJ\"\n    }\n}\n"
            }
          ]
        }
      ],
      "relativeWindow": [
        {
          "description": "Example Relative Time Window",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"date\": {\n     \"days\": {\n        \"recent\": 1\n     }\n  }\n}\n"
            }
          ]
        }
      ],
      "scheduleObject": [
        {
          "description": "Example Schedule",
          "examples": [
            {
              "lang": "json",
              "source": "{\n    \"url\": \"http://go.urbanairship/api/schedules/2d69320c-3c91-5241-fac4-248269eed109\",\n    \"schedule\": {\"scheduled_time\": \"2020-04-01T18:45:30\"},\n    \"name\": \"My schedule\",\n    \"push\": {\n        \"audience\": {\"tag\": \"49ers\"},\n        \"device_types\": [ \"ios\", \"android\" ],\n        \"notification\": {\"alert\": \"Touchdown!\"},\n        \"options\": {\"expiry\": 10800}\n    }\n}\n"
            }
          ]
        }
      ],
      "scheduleSpec": [
        {
          "description": "Global Schedule",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"scheduled_time\": \"2020-04-01T18:45:30\"\n}\n"
            }
          ]
        },
        {
          "description": "Best Time Example",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"best_time\": {\n    \"send_date\": \"2020-06-01\"\n  }\n}\n"
            }
          ]
        },
        {
          "description": "Local Time",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"local_scheduled_time\": \"2020-04-01T18:45:30\"\n}\n"
            }
          ]
        }
      ],
      "scopedBatchItem": [
        {
          "description": "Example Scoped Batch item",
          "examples": [
            {
              "lang": "json",
              "source": "{\n    \"scope\": [\"app\"],\n    \"subscription_lists\": {\n        \"subscribe\": [\"stickers\", \"gifs\"],\n        \"unsubscribe\": [\"cookies\"]\n    }\n}\n"
            }
          ]
        }
      ],
      "sms": [
        {
          "description": "Example Object",
          "examples": [
            {
              "lang": "json",
              "source": "{\n \"audience\": {\n    \"create_and_send\" : [\n      {\n        \"ua_msisdn\": \"15558675309\",\n        \"ua_sender\": \"US:12345\",\n        \"ua_opted_in\": \"2020-11-11T18:45:30\"\n      }\n    ]\n  },\n  \"device_types\" : [ \"sms\" ],\n  \"notification\" : {\n    \"sms\": {\n      \"alert\": \"Check out our winter sale! https://www.mysite.com/amazingly/long/url-that-I-want-to-shorten\",\n      \"expiry\": 172800,\n      \"shorten_links\": true\n    }\n  },\n  \"campaigns\": {\n      \"categories\": [\"winter sale\", \"west coast\"]\n  }\n}\n"
            }
          ]
        }
      ],
      "smsOverrideObject": [
        {
          "description": "Example SMS Notification",
          "examples": [
            {
              "lang": "json",
              "source": "{\n    \"audience\": {\n       \"named_user\": \"user\"\n    },\n    \"notification\": {\n       \"alert\": \"A generic alert sent to all platforms without overrides in device_types\",\n       \"sms\": {\n          \"alert\": \"A shorter alert with a link for SMS users to click https://www.mysite.com/long/form/url?ua-tag-add=this_group:this_tag\",\n          \"expiry\": 172800,\n          \"shorten_links\": true\n       }\n    },\n    \"device_types\": [ \"sms\" ]\n}\n"
            }
          ]
        }
      ],
      "smsOverrideWithTemplate": [
        {
          "description": "Example Object with Merge Fields in Audience Object",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"audience\": {\n    \"create_and_send\" : [\n      {\n        \"ua_sender\" : \"US:12345\",\n        \"ua_msisdn\" : \"15558675309\",\n        \"ua_opted_in\" : \"2020-08-30T22:35:00\",\n        \"customer\": {\n            \"first_name\": \"Jenny\",\n            \"last_name\": \"Smith\",\n            \"location\": \"Vancouver\"\n        },\n        \"cart\" : [\n          {\n            \"name\" : \"Rubber Gloves\",\n            \"code\" : \"abaccgdsagsde\",\n            \"qty\": 1\n          },\n          {\n            \"name\" : \"Bleach Alternative\",\n            \"code\" : \"cacadgdesgaga\",\n            \"qty\": 1\n          }\n        ]\n      }\n    ]\n  },\n  \"device_types\" : [ \"sms\" ],\n  \"notification\" : {\n    \"sms\" : {\n      \"alert\" : \"Hi, {{customer.first_name}}, your {{#each cart}}{{this.name}}{{/each}} are ready to pickup at our {{customer.location}} location!\"\n    }\n  },\n  \"campaigns\" : {\n    \"categories\" : [ \"order-pickup\" ]\n  }\n}\n"
            }
          ]
        },
        {
          "description": "Example Object with template_id",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"audience\": {\n    \"create_and_send\" : [\n      {\n        \"ua_sender\" : \"US:12345\",\n        \"ua_msisdn\" : \"15558675309\",\n        \"ua_opted_in\" : \"2020-08-30T22:35:00\",\n        \"customer\": {\n            \"first_name\": \"Jenny\",\n            \"last_name\": \"Smith\",\n            \"location\": \"Vancouver\"\n        },\n        \"cart\" : [\n          {\n            \"name\" : \"Rubber Gloves\",\n            \"code\" : \"abaccgdsagsde\",\n            \"qty\": 1\n          },\n          {\n            \"name\" : \"Bleach Alternative\",\n            \"code\" : \"cacadgdesgaga\",\n            \"qty\": 1\n          }\n        ]\n      }\n    ]\n  },\n  \"device_types\" : [ \"sms\" ],\n  \"notification\" : {\n    \"sms\" : {\n      \"template\" : {\n        \"template_id\": \"9335bb2a-2a45-456c-8b53-42af7898236a\"\n      }\n    }\n  }\n}\n"
            }
          ]
        }
      ],
      "snippetReferences": [
        {
          "description": "Snippet References example: The `copyright` snippet is loaded by the `snippet_references` object and inserted at the end of the `alert` text.\n",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"notification\": {\n      \"alert\": \"Hi {{ name }}: Thanks for your purchase! {{> copyright }}\"\n   },\n   \"snippet_references\": {\n      \"snippets\": [\n         {\n            \"name\": \"copyright\"\n         }\n      ]\n   }\n}\n"
            }
          ]
        }
      ],
      "subscriptionListObject": [
        {
          "description": "Example subscription list object",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"action\": \"subscribe\",\n  \"list_id\": \"exciting_news\"\n}\n"
            }
          ]
        }
      ],
      "subscriptionListResultObject": [
        {
          "description": "Example Subscription List Result Object",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"list_id\": \"example_listId-2\",\n   \"name\": \"A nice readable name 2\",\n   \"description\": \"A very nice description for you.\",\n   \"channel_types\": [\"app\", \"web\"]\n}\n"
            }
          ]
        }
      ],
      "tagGroupObject": [
        {
          "description": "A simple tag group that has 2 tags associated with the group tags.",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"sports fan\": [\"Federer fan\", \"Messi fan\"]\n}\n"
            }
          ]
        },
        {
          "description": "A simple Airship-specific tag group, associating one tag with the group",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"tag_groups\": {\n      \"ua_locale_country\": [\"US\"]\n  }\n}\n"
            }
          ]
        },
        {
          "description": "An array of Tag Groups for a channel. Channels can have Airship-specific tag groups; named users do not have Airship-specific Tag Groups.",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"tag_groups\": [\n      {\n        \"sports fan\": [\n            \"Federer fan\",\n            \"Messi fan\"\n        ]\n      },\n      {\n        \"music fan\": [\n            \"Beyonce\",\n            \"Muse\"\n        ]\n      },\n      {\n        \"ua_locale_country\": [\n            \"US\"\n        ]\n      },\n      {\n        \"ua_locale_language\": [\n            \"en\"\n        ]\n      }\n  ]\n}\n"
            }
          ]
        },
        {
          "description": "An array of Tag Groups for a Named User. Named users do not have Airship-specific tag groups.",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"tags\": {\n      \"crm_id\": [\n        \"abc-123-def-456\"\n      ],\n      \"loyalty program\": [\n        \"silver-member\",\n        \"ten-plus-years\",\n        \"valued-customer\"\n      ]\n  }\n}\n"
            }
          ]
        }
      ],
      "templateObject": [
        {
          "description": "Basic Template Object",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"name\": \"<template name>\",\n   \"description\": \"<template description>\",\n   \"variables\": [\"<variable specifications>\"],\n   \"push\": \"<push-object>\",\n   \"id\": \"<template-id>\",\n   \"created_at\" : \"timestamp\",\n   \"modified_at\" : \"timestamp\",\n   \"last_used\" : \"timestamp\"\n}\n"
            }
          ]
        }
      ],
      "templatePushObject": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "json",
              "source": "{\n    \"audience\" : {\n        \"OR\" : [\n            { \"tag\" : [\"sports\", \"entertainment\"]},\n            { \"device_token\" : \"871922F4F7C6DF9D51AC7ABAE9AA5FCD7188D7BFA19A2FA99E1D2EC5F2D76506\" },\n            { \"apid\" : \"5673fb25-0e18-f665-6ed3-f32de4f9ddc6\" }\n        ]\n    },\n    \"device_types\" : [ \"ios\", \"wns\" ],\n    \"merge_data\": {\n        \"template_id\": \"ef34a8d9-0ad7-491c-86b0-aea74da15161\",\n        \"substitutions\": {\n            \"FIRST_NAME\": \"Bob\"\n        }\n    }\n}\n"
            }
          ]
        }
      ],
      "templateVariableObject": [
        {
          "description": "Template Variable Example",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"key\" : \"<key>\",\n   \"name\" : \"<variable name>\",\n   \"description\" : \"<variable description>\",\n   \"default_value\" : \"<fallback value>\"\n}\n"
            }
          ]
        }
      ],
      "textAttribute": [
        {
          "description": "Text Attribute Example",
          "examples": [
            {
              "lang": "json",
              "source": "{ \"audience\":\n   {\n      \"attribute\": \"item_purchased\",\n      \"operator\": \"contains\",\n      \"value\": \"jeans\"\n   }\n}\n"
            }
          ]
        }
      ],
      "webOverrideObject": [
        {
          "description": "Example with Web Override",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"audience\": {\n      \"channel\": \"cab69081-0196-4f6b-91dc-53bc88a2e6ce\"\n   },\n   \"device_types\": [\n      \"web\"\n   ],\n   \"notification\": {\n      \"alert\": \"Hello, world!\",\n      \"web\": {\n         \"alert\": \"Hello Web World\",\n         \"title\": \"A Custom Web Title\",\n         \"require_interaction\": true,\n         \"buttons\": [\n            {\n               \"id\": \"yes\",\n               \"label\": \"Yes\",\n               \"actions\": {\n                  \"open\": {\n                     \"type\": \"home\"\n                  },\n                  \"add_tag\": [\n                     \"new_tag\"\n                  ]\n               }\n            },\n            {\n               \"id\": \"no\",\n               \"label\": \"No\"\n            }\n         ],\n         \"extra\": {\n            \"story_id\": \"1234\",\n            \"moar\": \"{\\\"key\\\": \\\"value\\\"}\"\n         }\n      }\n   }\n}\n"
            }
          ]
        }
      ],
      "webOverrideWithTemplate": [
        {
          "description": "Web Override with a Template",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"web\": {\n      \"alert\": \"Vote now, {{name}}!\",\n      \"title\": \"Geese? Or ducks!\",\n      \"icon\": \"{{icon}}\",\n      \"require_interaction\": true,\n      \"buttons\": [\n         {\n            \"id\": \"yes\",\n            \"label\": \"Yes\",\n            \"actions\": {\n               \"open\": {\n                  \"type\": \"home\"\n               },\n               \"add_tag\": [\"new_tag\"]\n            }\n         },\n         {\n         \"id\": \"no\",\n         \"label\": \"No\"\n         }\n      ],\n      \"extra\": {\n         \"story_id\": \"1234\",\n         \"moar\": \"{\\\"key\\\": \\\"value\\\"}\"\n      }\n   }\n}\n"
            }
          ]
        },
        {
          "description": "Web Override with a template_id",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"web\": {\n      \"template\": {\n         \"template_id\": \"1ad69081-c196-af21-41dc-53bc89a2edc5\"\n      },\n      \"require_interaction\": true,\n      \"extra\": {\n         \"story_id\": \"1234\",\n         \"moar\": \"{\\\"key\\\": \\\"value\\\"}\"\n      }\n   }\n}\n"
            }
          ]
        }
      ],
      "whereObject": [
        {
          "description": "Example payload to an audience of users who have opened your app as a result of receiving a specific push ID.\n",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"audience\": {\n      \"activity\": \"app_open\",\n      \"metric\": \"count\",\n      \"operator\": \"greater\",\n      \"value\": 0,\n      \"where\": {\n         \"property\": \"/_triggering_push/push_id\",\n         \"operator\": \"equals\",\n         \"compare_as\": \"text\",\n         \"value\": \"636abb88-5642-4035-998d-a04c93c499ad\"\n      }\n   },\n   \"device_types\": [\n      \"ios\", \"android\"\n   ],\n   \"notification\": {\n      \"alert\": \"Did you get that thing I sent you?\"\n   }\n}\n"
            }
          ]
        }
      ]
    }
  },
  "paths": {
    "/api/attachments": {
      "post": [
        {
          "description": "Example: Create email attachment",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /attachments HTTP/1.1\nAuthorization: Bearer <authorization token>\nContent-Type: application/json\nAccept: application/vnd.urbanairship+json; version=3\n\n{\n  \"filename\": \"rickroll.png\",\n  \"content_type\": \"text/plain; charset=\\\"UTF-8\\\"\",\n  \"data\": \"iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAIAAADTED8xAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAyhpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8...\"\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n        \nEmailAttachmentRequest emailAttachmentRequest = EmailAttachmentRequest.newRequest()\n        .setContentType(\"text/plain; charset=\\\"UTF-8\\\"\")\n        .setData(\"iBORw0KGgoAAAANSUhEUgAAAQAAAAEACAIAAADTED8xAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAyhpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8...\")\n        .setFilename(\"rickroll.png\");\n\nResponse<EmailAttachmentResponse> response = client.execute(emailAttachmentRequest);\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\n\nattachment = ua.EmailAttachment(\n  airship=airship,\n  filename='rickroll.png', \n  content_type='image/png; charset=\\\"UTF-8\\\"\"', \n  filepath='path/to/never_gonna.png'\n)\nresponse = attachment.post()\n\nprint(response.attachment_ids)\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 201 Accepted\nData-Attribute: attachment_id\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true,\n    \"attachment_ids\": [\n        \"b0c46a8d-b701-441b-9d6e-147c183b28ca\"\n    ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/attribute-lists": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/attribute-lists HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\n\nlisting = ua.AttributeList.list(airship=airship)\n\nlisting.json()\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nData-Attribute: lists\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n  \"ok\": true,\n  \"lists\": [\n      {\n        \"name\": \"ua_attributes_my_list\",\n        \"description\": \"My first list\",\n        \"extra\": {\n            \"filename\": \"list.csv\",\n            \"source\": \"crm\"\n        },\n        \"created\": \"2020-05-13T21:41:25\",\n        \"last_updated\": \"2020-05-13T21:45:17\",\n        \"channel_count\": 0,\n        \"error_path\": \"https://go.urbanairship.com/api/attribute-lists/ua_attributes_my_list/errors\",\n        \"status\": \"ready\"\n      },\n      {\n        \"name\": \"ua_attributes_another_list\",\n        \"description\": \"My second list\",\n        \"extra\": {\n            \"filename\": \"list2.csv\",\n            \"source\": \"api\"\n        },\n        \"created\": \"2020-05-14T21:41:25\",\n        \"last_updated\": \"2020-05-14T21:45:17\",\n        \"channel_count\": 0,\n        \"error_path\": \"https://go.urbanairship.com/api/attribute-lists/ua_attributes_another_list/errors\",\n        \"status\": \"ready\"\n      }\n  ]\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nAttributeListsListingRequest attributeListsListingRequest = AttributeListsListingRequest.newRequest();\nResponse<AttributeListsListingResponse> response = client.execute(attributeListsListingRequest);\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/attribute-lists HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n  \"name\": \"ua_attributes_my_new_list\",\n  \"description\": \"First of many attributes lists!\",\n  \"extra\": {\n      \"filename\": \"attributes.csv\",\n      \"source\": \"CRM\"\n  }\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n        \nAttributeListsCreateRequest attributeListsCreateRequest = AttributeListsCreateRequest.newRequest(\"ua_attributes_list\")\n        .setDescription(\"ua_attributes_list\")\n        .addExtra(\"filename\", \"attributes.csv\")\n        .addExtra(\"source\",\"crm\");\n\nResponse<String> response = client.execute(attributeListsCreateRequest);\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 201 Created\nContent-Type: application/json\nLocation: https://go.urbanairship.com/api/attribute-lists/ua_attributes_foobar\n\n{\n  \"ok\" : true\n}\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\n\nattribute_list = ua.AttributeList(\n  airship=airship, \n  list_name=\"ua_attributes_my_new_list\", \n  description=\"First of many attributes lists!\", \n  extra={\n      \"filename\": \"attributes.csv\",\n      \"source\": \"CRM\"\n  }\n)\n\nattribute_list.create()\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/attribute-lists/{list_name}/csv": {
      "put": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "PUT /api/attribute-lists/foobar/csv HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: text/csv\n\nchannel_id,Magic Score,Preferred Sport\nc543f3a3-bc1d-4830-8dee-7532c6a23b9a,100,Basketball\n6ba360a0-1f73-4ee7-861e-95f6c1ed6410,,Basketball\n15410d17-687c-46fa-bbd9-f255741a1523,2,Football\nc2c64ef7-8f5c-470e-915f-f5e3da04e1df,22.1,Rugby\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n        \nFile dataDirectory = new File(\"src/data\");\nString filePath = dataDirectory.getAbsolutePath() + \"/attributes_list.csv\";\nAttributeListsUploadRequest attributeListsUploadRequest = AttributeListsUploadRequest.newRequest(\"ua_attributes_list\", filePath);\n\nResponse<String> response = client.execute(attributeListsUploadRequest);\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\n\nattribute_list = ua.AttributeList(\n  airship=airship, \n  list_name=\"ua_attributes_cool_list\", \n  description=\"example list\", \n)\n\nattribute_list.upload(file_path=\"path/to/file.csv\")\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 202 Accepted\nContent-Type: application/json\n\n{\n  \"ok\" : true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Attribute List CSV upload for SMS",
          "examples": [
            {
              "lang": "HTTP",
              "source": "PUT /api/attribute-lists/foobar/csv HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: text/csv\n\nmsisdn,sms_sender,firstName\n5035556789,18588675309,Jane\n4155551212,18588675309,Rory\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\n\nattribute_list = ua.AttributeList(\n  airship=airship, \n  list_name=\"foobar\", \n  description=\"example list\", \n)\n\nattribute_list.upload(file_path=\"path/to/sms_file.csv\")\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 202 Accepted\nContent-Type: application/json\n\n{\n  \"ok\" : true\n}\n"
            }
          ]
        }
      ]
    },
    "/api/attribute-lists/{list_name}/errors": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/lists/foobar/csv HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+csv; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nAttributeListsErrorsRequest attributeListsErrorsRequest = AttributeListsErrorsRequest.newRequest(\"foobar\");\nResponse<String> response = client.execute(attributeListsErrorsRequest);\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\n\nattribute_list = ua.AttributeList(\n  airship=airship, \n  list_name=\"foobar\", \n  description=\"example list\", \n)\n\nerrors = attribute_list.get_errors()\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: text/csv\n\n8b4de669-16f1-4e71-9a1f-0c62a8235a65,ERROR,\"Unable to parse number: forty-two\"\nd5ebe607-a3e6-4601-b97e-83ec604223fe,ERROR,\"Unable to parse date: monday\"\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/channels": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/channels HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nChannelRequest request = ChannelRequest.newRequest();\nResponse<ChannelResponse> response = client.execute(request);\nChannelView channels = response.getBody().get().getChannelView().get();\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\nchannel_id = None\n\nfor channel in ua.ChannelList(airship):\n   channel_id = channel.channel_id\n   print (channel.channel_id, channel.device_type, channel.tags,\n         channel.push_address, channel.named_user_id, channel.opt_in)\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nchannel_list = UA::ChannelList.new(client: airship)\nchannel_list.each do |channel|\n    puts(channel)\nend\nputs(channel_list.count)\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"next_page\": \"https://go.urbanairship.com/api/channels?start=07AAFE44CD82C2F4E3FBAB8962A95B95F90A54857FB8532A155DE3510B481C13&limit=2\",\n   \"channels\": [\n      {\n         \"channel_id\": \"9c36e8c7-5a73-47c0-9716-99fd3d4197d5\",\n         \"device_type\": \"android\",\n         \"push_address\": \"FE66489F304DC75B8D6E8200DFF8A456E8DAEACEC428B427E9518741C92C6660\",\n         \"opt_in\": true,\n         \"installed\": true,\n         \"background\": true,\n         \"created\": \"2020-03-06T18:52:59\",\n         \"last_registration\": \"2020-10-07T21:28:35\",\n         \"named_user_id\": \"some_id_that_maps_to_your_systems\",\n         \"alias\": \"null\",\n         \"tags\": [\n            \"tag1\",\n            \"tag2\"\n         ],\n         \"tag_groups\": {\n            \"tag_group_1\": [\"tag1\", \"tag2\"],\n            \"tag_group_2\": [\"tag1\", \"tag2\"]\n         },\n         \"device_attributes\": {\n             \"ua_device_os\": \"10\",\n             \"ua_country\": \"US\",\n             \"ua_device_model\": \"SM-G973U\",\n             \"ua_local_tz\": \"America/Los_Angeles\",\n             \"ua_app_version\": \"2020-02-01T002322-goat\",\n             \"ua_location_settings\": \"true\",\n             \"ua_language\": \"en\",\n             \"ua_sdk_version\": \"12.2.0\",\n             \"ua_carrier\": \"Verizon \"\n          },\n          \"attributes\": {\n             \"first_name\": \"Cool\",\n             \"last_name\": \"Person\",\n             \"birthdate\": \"1983-03-15T00:00:00\",\n          }\n      },\n      {\n         \"channel_id\": \"bd36e8c7-5a73-47c0-9716-99fd3d4197d5\",\n         \"device_type\": \"ios\",\n         \"push_address\": null,\n         \"opt_in\": false,\n         \"installed\": true,\n         \"background\": true,\n         \"created\": \"2020-03-06T18:52:59\",\n         \"last_registration\": \"2020-10-07T21:28:35\",\n         \"named_user_id\": \"some_id_that_maps_to_your_systems\",\n         \"alias\": \"null\",\n         \"tags\": [\n            \"tag1\",\n            \"tag2\"\n         ],\n         \"tag_groups\": {\n            \"tag_group_1\": [\"tag1\", \"tag2\"],\n            \"tag_group_2\": [\"tag1\", \"tag2\"]\n         },\n         \"ios\": {\n            \"badge\": 0,\n            \"quiettime\": {\n               \"start\": null,\n               \"end\": null\n            },\n            \"tz\": null\n         }\n      }\n   ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/channels/attributes": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/channels/attributes HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n    \"audience\": {\n       \"android_channel\": [\"13863b3c-f860-4bbf-a9f1-4d785379b8a2\"]\n    },\n    \"attributes\": [\n       {\n             \"action\": \"set\",\n             \"key\": \"major_league\",\n             \"value\": \"sf_giants\"\n       },\n       {\n             \"action\": \"remove\",\n             \"key\": \"minor_league\"\n       },\n       {\n             \"action\": \"set\",\n             \"key\": \"position\",\n             \"value\": \"LF\"\n       }\n    ]\n}\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\n\nset_major_league = ua.Attribute(\n                      action=\"set\", \n                      key=\"major_league\", \n                      value=\"sf_giants\")\n\n remove_minor_league = ua.Attribute(\n                         action=\"remove\",\n                         key=\"minor_league\")\n\n set_position = ua.Attribute(\n                   action=\"set\",\n                   key=\"position\",\n                   value=\"LF\")\n\n modifications = ua.ModifyAttributes(\n                   airship=airship,\n                   attributes=[set_major_league,\n                               remove_minor_league,\n                               set_position]\n                   channel=\"13863b3c-f860-4bbf-a9f1-4d785379b8a2\"\n                )\n \n modifications.send()\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nAttribute setMajorLeague = Attribute.newBuilder()\n        .setAction(AttributeAction.SET)\n        .setKey(\"major_league\")\n        .setValue(\"sf_giants\")\n        .build();\n\nAttribute removeMinorLeague = Attribute.newBuilder()\n        .setAction(AttributeAction.REMOVE)\n        .setKey(\"minor_league\")\n        .build();\n\nAttribute setPosition = Attribute.newBuilder()\n        .setAction(AttributeAction.SET)\n        .setKey(\"position\")\n        .setValue(\"LF\")\n        .build();\n\nChannelAttributesPayload payload = ChannelAttributesPayload.newBuilder()\n        .addAttribute(setMajorLeague)\n        .addAttribute(removeMinorLeague)\n        .addAttribute(setPosition)\n        .setAudience(AttributeAudience.newBuilder()\n                .addDeviceId(AttributeAudienceType.ANDROID_CHANNEL, \"13863b3c-f860-4bbf-a9f1-4d785379b8a2\")\n                .build())\n        .build();\n\nChannelAttributesRequest request = ChannelAttributesRequest.newRequest(payload);\nResponse<ChannelAttributesResponse> response = client.execute(request);\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nchannel_info = UA::ChannelInfo.new(client: airship)\nchannel_info.audience = {\"android_channel\": '13863b3c-f860-4bbf-a9f1-4d785379b8a2'}\nchannel_info.attributes =  {\n    \"action\": \"set\",\n    \"key\": \"major_league\",\n    \"value\": \"sf_giants\"\n}\nchannel_info.set_attributes\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Example Request with Dates and Numbers",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/channels/attributes HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n    \"audience\": {\n       \"android_channel\": [\"13863b3c-f860-4bbf-a9f1-4d785379b8a2\"]\n    },\n    \"attributes\": [\n       {\n             \"action\": \"set\",\n             \"key\": \"birthday\",\n             \"value\": \"1983-03-15 10:00:00\"\n       },\n       {\n             \"action\": \"set\",\n             \"key\": \"fav_number\",\n             \"value\": 42\n       },\n       {\n             \"action\": \"remove\",\n             \"key\": \"another_attribute\"\n       }\n    ]\n}\n"
            }
          ]
        }
      ]
    },
    "/api/channels/email": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/channels/email HTTP/1.1\nAuthorization: Bearer <authorization token>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n {\n     \"channel\" : {\n        \"type\": \"email\",\n        \"commercial_opted_in\": \"2020-10-28T10:34:22\",\n        \"address\": \"name@example.com\",\n        \"timezone\" : \"America/Los_Angeles\",\n        \"locale_country\" : \"US\",\n        \"locale_language\" : \"en\"\n    },\n    \"opt_in_mode\" : \"classic\",\n    \"properties\" : {\n        \"interests\" : \"newsletter\"\n    }\n }\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nRegisterEmailChannel emailChannel = RegisterEmailChannel.newBuilder()\n        .setAddress(\"name@example.com\")\n        .setEmailOptInLevel(OptInLevel.EMAIL_COMMERCIAL_OPTED_IN, \"2020-10-28T10:34:22\")\n        .setEmailOptInMode(OptInMode.CLASSIC)\n        .addProperty(\"interests\",\"newletter\")\n        .build();\n\nRegisterEmailChannelRequest request = RegisterEmailChannelRequest.newRequest(emailChannel);\nResponse<EmailChannelResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\nemail = ua.Email(airship=airship,\n                address='name@example.com',\n                commercial_opted_in='2020-10-28T10:34:22',\n                timezone='America/Los_Angeles',\n                locale_country='US',\n                locale_language='en')\nresp = email.register()\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nemail_channel = UA::Email.new(client: airship)\nemail_channel.type = 'email'\nemail_channel.commercial_opted_in = '2020-10-28T10:34:22'\nemail_channel.address = 'name@example.com'\nemail_channel.timezone = 'America/Los_Angeles'\nemail_channel.locale_country = 'US'\nemail_channel.locale_language = 'en'\nemail_channel.register\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 201 Created\nLocation: https://go.urbanairship.com/api/channels/251d3318-b3cb-4e9f-876a-ea3bfa6e47bd\nContent-Type: application/json\n\n{\n    \"ok\": true,\n    \"channel_id\": \"251d3318-b3cb-4e9f-876a-ea3bfa6e47bd\"\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/channels/email/tags": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/channels/email/tags HTTP/1.1\nAuthorization: Bearer <authorization token>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n   \"audience\": {\n      \"email_address\": \"name@example.com\"\n   },\n   \"add\": {\n      \"my_fav_tag_group1\": [\"tag1\", \"tag2\", \"tag3\"],\n      \"my_fav_tag_group2\": [\"tag1\", \"tag2\", \"tag3\"],\n      \"my_fav_tag_group3\": [\"tag1\", \"tag2\", \"tag3\"]\n   }\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nEmailTagRequest request = EmailTagRequest.newRequest();\nemailTagRequest.addEmailChannel(\"name@example.com\")\n        .addTags(\"my_fav_tag_group1\", ImmutableSet.of(\"tag1\", \"tag2\", \"tag3\"))\n        .addTags(\"my_fav_tag_group2\", ImmutableSet.of(\"tag1\", \"tag2\", \"tag3\"))\n        .addTags(\"my_fav_tag_group3\", ImmutableSet.of(\"tag1\", \"tag2\", \"tag3\"));\n\nResponse<EmailChannelResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\n\n# replaces all existing tags on an email channel\nemail_tags = ua.EmailTags(airship=airship,\n                          address='name@example.com')\nemail_tags.set(group='my_tag_group',\n              tags=['one', 'two', 'three'])\nemail_tags.send()\n\n# adds and removes tags from an email channel\nemail_tags = ua.EmailTags(airship=airship,\n                          address='name@example.com')\nemail_tags.remove(group='my_tag_group',\n                  tags=['one', 'two', 'three'])\nemail_tags.add(group='my_tag_group',\n              tags=['some', 'new', 'tags'])\nemail_tags.send()\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nemail_tags = UA::EmailTags.new(client: airship)\n#set an audience\nemail_tags.set_audience(email_address: 'name@example.com')\n#add a tag\nemail_tags.add(group_name: 'my_fav_tag_group1', tags: 'tag2')\n#remove a tag\nemail_tags.remove(group_name: 'my_fav_tag_group1', tags: 'tag1')\nemail_tags.send_request\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/channels/email/uninstall": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/channels/email/uninstall HTTP/1.1\nAuthorization: Bearer <authorization token>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n    \"email_address\": \"name@example.com\"\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nUninstallEmailChannel uninstallEmailChannel = UninstallEmailChannel.newBuilder()\n        .setEmailAddress(\"name@example.com\")\n        .build();\n\nUninstallEmailChannelRequest request = UninstallEmailChannelRequest.newRequest(uninstallEmailChannel);\nResponse<EmailChannelResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\nemail = ua.Email(airship=airship,\n                address='name@example.com')\nresp = email.uninstall()\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nemail_channel = UA::Email.new(client: airship)\nemail_channel.address = 'name@example.com'\nemail_channel.uninstall\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 202 Accepted\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/channels/email/{email}": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/channels/email/name%40domain.com HTTP/1.1\nAuthorization: Bearer <authorization token>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n        \nChannelRequest channelRequest = ChannelRequest.newEmailLookupRequest(\"name@domain.com\");\nResponse<ChannelResponse> response = client.execute(channelRequest);\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\n\nresponse = ua.Email.lookup(airship=airship, address=\"name@domain.com\")\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nemail_channel = UA::Email.new(client: airship)\nemail_channel.address = 'name@domain.com'\nemail_channel.lookup\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\": true,\n   \"channel\": {\n      \"channel_id\": \"01234567-890a-bcde-f012-3456789abc0\",\n      \"device_type\": \"email\",\n      \"installed\": true,\n      \"created\": \"2020-08-08T20:41:06\",\n      \"named_user_id\": \"some_id_that_maps_to_your_systems\",\n      \"tag_groups\": {\n         \"tag_group_1\": [\"tag1\", \"tag2\"],\n         \"tag_group_2\": [\"tag1\", \"tag2\"]\n      },\n      \"address\": null,\n      \"opt_in\": true,\n      \"commercial_opted_in\": \"2020-10-28T10:34:22\",\n      \"commercial_opted_out\": \"2020-06-03T09:15:00\",\n      \"transactional_opted_in\": \"2020-10-28T10:34:22\",\n      \"last_registration\": \"2020-05-01T18:00:27\"\n   }\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "put": [
        {
          "description": "Example: Update Email Address",
          "examples": [
            {
              "lang": "HTTP",
              "source": "PUT /api/channels/email/251d3318-b3cb-4e9f-876a-ea3bfa6e47bd HTTP/1.1\nAuthorization: Bearer <authorization token>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n {\n     \"channel\" : {\n        \"type\": \"email\",\n        \"address\": \"tommy@example.com\",\n        \"commercial_opted_in\": \"2020-10-28T10:34:22\"\n     }\n  }\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n        \nUpdateEmailChannel updateEmailChannel = UpdateEmailChannel.newBuilder()\n        .setAddress(\"name@domain.com\")\n        .setEmailOptInLevel(OptInLevel.EMAIL_COMMERCIAL_OPTED_IN, \"2021-10-28T10:34:22\")\n        .setEmailOptInLevel(OptInLevel.EMAIL_TRANSACTIONAL_OPTED_IN,\"2021-10-28T10:34:22\")\n        .build();\n\nUpdateEmailChannelRequest updateEmailChannelRequest = UpdateEmailChannelRequest.newRequest(\"6c8f1d3a-64d8-4ef9-b7a1-9b128013327e\", updateEmailChannel);\nResponse<EmailChannelResponse> response = client.execute(updateEmailChannelRequest);\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\n\nemail = ua.Email(\n  address=\"tommy@example.com\",\n  commercial_opted_in=\"2020-10-28T10:34:22\"\n)\n\nresponse = email.update(channel_id=\"251d3318-b3cb-4e9f-876a-ea3bfa6e47bd\")\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nemail_channel = UA::Email.new(client: airship)\nemail_channel.channel_id = '251d3318-b3cb-4e9f-876a-ea3bfa6e47bd'\nemail_channel.type = 'email'\nemail_channel.address = 'tommy@example.com'\nemail_channel.commercial_opted_in = '2020-10-28T10:34:22'\nemail_channel.update\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true,\n    \"channel_id\": \"251d3318-b3cb-4e9f-876a-ea3bfa6e47bd\"\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/channels/open": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/channels/open HTTP/1.1\nAuthorization: Basic <master secret authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n   \"channel\": {\n      \"type\": \"open\",\n      \"opt_in\": true,\n      \"address\": \"Number Four\",\n      \"tags\": [\n         \"toaster\",\n         \"caprica\"\n      ],\n      \"timezone\": \"America/Los_Angeles\",\n      \"locale_country\": \"US\",\n      \"locale_language\": \"en\",\n      \"open\": {\n         \"open_platform_name\": \"cylon\",\n         \"identifiers\": {\n            \"model\": \"4\"\n         }\n      }\n   }\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nOpenChannel openChannel = OpenChannel.newBuilder()\n        .setOpenPlatformName(\"cylon\")\n        .setOldAddress(\"Number Four\")\n        .addIdentifier(\"model\", \"4\")\n        .build();\n\nChannel channel = Channel.newBuilder()\n        .setOpenChannel(openChannel)\n        .setChannelType(ChannelType.OPEN)\n        .setOptIn(true)\n        .setAddress(\"Number Four\")\n        .setTags(true)\n        .addTag(\"toaster\")\n        .setTimeZone(\"America/Los_Angeles\")\n        .setLocaleCountry(\"US\")\n        .setLocaleLanguage(\"en\")\n        .build();\n\nOpenChannelPayload payload = new OpenChannelPayload(channel);\nOpenChannelRequest request = OpenChannelRequest.newRequest(payload);\nResponse<OpenChannelResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\nmy_channel = ua.OpenChannel(airship)\nmy_channel.address = 'Number Four'\nmy_channel.open_platform = 'cylon'\nmy_channel.opt_in = True\nresp = my_channel.create()\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nopen_channel = UA::OpenChannel.new(client: airship)\nopen_channel.opt_in = true\nopen_channel.address = 'Number Four'\nopen_channel.open_platform = 'cylon'\nopen_channel.create()\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nLocation: https://go.urbanairship.com/api/channels/df6a6b50-9843-0304-d5a5-743f246a4946\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true,\n    \"channel_id\": \"df6a6b50-9843-0304-d5a5-743f246a4946\"\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/channels/open/tags": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/channels/open/tags HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n {\n  \"audience\": {\n      \"address\": \"Number Four\",\n      \"open_platform_name\": \"cylon\"\n  },\n  \"add\": {\n    \"my_fav_tag_group1\": [\"tag1\", \"tag2\", \"tag3\"],\n    \"my_fav_tag_group2\": [\"tag1\", \"tag2\", \"tag3\"],\n    \"my_fav_tag_group3\": [\"tag1\", \"tag2\", \"tag3\"]\n  }\n }\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nOpenChannelTagRequest openChannelTagRequest =  OpenChannelTagRequest.newRequest()\n        .addOpenChannel(\"Number Four\",\"cyclon\")\n        .addTags(\"CRM_Delux\", Set.of(\"tag1\",\"tag2\"))\n        .removeTags(\"CRM_Delux\",  Set.of(\"tag3\",\"tag4\"));\nResponse<String> response = client.execute(openChannelTagRequest);\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\nmy_channel = ua.OpenChannel(airship).lookup(\n    'df6a6b50-9843-0304-d5a5-743f246a4946'\n)\nmy_channel.tags = ['tag1', 'tag2']\nresp = my_channel.update()\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nopen_channel = UA::OpenChannel.new(client: airship)\nopen_channel.opt_in = true\nopen_channel.address = 'Number Four'\nopen_channel.open_platform = 'cylon'\nopen_channel.channel_id = 'df6a6b50-9843-0304-d5a5-743f246a4946'\nopen_channel.tags = ['tag1', 'tag2', 'tag3']\nopen_channel.update(set_tags: true)\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 Accepted\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n  \"ok\":true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/channels/open/uninstall": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/channels/open/uninstall HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n  \"address\": \"Number Four\",\n  \"open_platform_name\": \"cylon\"\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nOpenChannelUninstallRequest openChannelUninstallRequest = OpenChannelUninstallRequest.newRequest(\"Number Four\",\"cyclon\");\nResponse<String> response = client.execute(openChannelUninstallRequest);\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\nmy_channel = ua.OpenChannel(airship).lookup(\n    'df6a6b50-9843-0304-d5a5-743f246a4946'\n)\nresp = my_channel.uninstall()\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\ncu = UA::OpenChannelUninstall.new(client: airship)\ncu.uninstall(address: 'Number Four', open_platform: 'cylon')\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 202 Accepted\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n  \"ok\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/channels/sms": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/channels/sms HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n  \"msisdn\" : \"15035556789\",\n  \"sender\": \"US:12345\",\n  \"opted_in\": \"2020-02-13T11:58:59\",\n  \"timezone\": \"America/Los_Angeles\",\n  \"locale_country\": \"US\",\n  \"locale_language\": \"en\"\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nSmsRegistrationRequest request = SmsRegistrationRequest\n        .newRegistrationRequest(\"12345\", \"15035556789\", DateTime.parse(\"2020-02-13T11:58:59Z\"));\n\nResponse<SmsRegistrationResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\nsms = ua.Sms(airship, sender='12345', msisdn='15035556789')\nresponse = sms.register(opted_in='2020-02-13T11:58:59')\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nsms_channel = UA::Sms.new(client: airship)\nsms_channel.msisdn = '15035556789'\nsms_channel.sender = '12345'\nsms_channel.opted_in = '2020-02-13T11:58:59'\nsms_channel.register\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Example Response (With 'opted_in')",
          "examples": [
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 201 Created\nLocation: https://go.urbanairship.com/api/channels/7c5d7328-9bb4-4ff7-86b0-96a5f1da5868\nContent-Type: application/json\n\n{\n  \"ok\": true,\n  \"operation_id\": \"62077236-d032-11e9-af71-ab156113d166\",\n  \"channel_id\": \"7c5d7328-9bb4-4ff7-86b0-96a5f1da5868\"\n}\n"
            }
          ]
        },
        {
          "description": "Example Response (Without 'opted_in')",
          "examples": [
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 202 Accepted\nContent-Type: application/json\n\n{\n  \"ok\": true,\n  \"operation_id\": \"62077236-d032-11e9-af71-ab156113d166\",\n  \"push_id\": \"26350f60-d033-11e9-80e3-33def0e528d1\",\n  \"channel_id\": \"79fbe330-d033-11e9-adfb-df10b89c5e04\",\n  \"status\": \"pending\"\n}\n"
            }
          ]
        },
        {
          "description": "Example Response (Project not configured with sender)",
          "examples": [
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 400 Bad Request\nContent-Type: application/json\n\n{\n    \"ok\": false,\n    \"errors\": \"Unable to retrieve details for sender 12345 with app_key <application key>\"\n}\n"
            }
          ]
        }
      ]
    },
    "/api/channels/sms/opt-out": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/channels/sms/opt-out HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n    \"sender\": \"US:12345\",\n    \"msisdn\": \"15035556789\"\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nSmsRegistrationRequest request = SmsRegistrationRequest\n        .newOptOutRequest(\"12345\", \"15035556789\");\n\nResponse<SmsRegistrationResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\nsms = ua.Sms(airship, sender='12345', msisdn='15035556789')\nresponse = sms.opt_out()\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nsms_channel = UA::Sms.new(client: airship)\nsms_channel.msisdn = '15035556789'\nsms_channel.sender = '12345'\nsms_channel.opt_out\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 202 Accepted\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/channels/sms/uninstall": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/channels/sms/uninstall HTTP/1.1\nAuthorization: Bearer <authorization token>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n    \"sender\": \"US:12345\",\n    \"msisdn\": \"15035556789\"\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nSmsRegistrationRequest request = SmsRegistrationRequest\n        .newUninstallRequest(\"12345\", \"15035556789\");\n\nResponse<SmsRegistrationResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\nsms = ua.Sms(airship, sender='12345', msisdn='15035556789')\nresponse = sms.uninstall()\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nsms_channel = UA::Sms.new(client: airship)\nsms_channel.msisdn = '15035556789'\nsms_channel.sender = '12345'\nsms_channel.uninstall\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 202 Accepted\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/channels/sms/{channel_id}": {
      "put": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "PUT /api/channels/sms/{channel_id} HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n  \"msisdn\": \"15035556789\",\n  \"sender\": \"US:12345\",\n  \"opted_in\": \"2020-02-13T11:58:59\",\n  \"timezone\": \"America/Los_Angeles\",\n  \"locale_country\": \"US\",\n  \"locale_language\": \"en\"\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nUpdateSmsChannel updateSmsChannel = UpdateSmsChannel.newBuilder()\n        .setMsisdn(\"13609048615\")\n        .setSender(\"17372004196\")\n        .setOptedIn(DateTime.parse(\"2021-10-11T02:03:03\"))\n        .setLocaleCountry(\"US\")\n        .setLocaleLanguage(\"en\")\n        .setTimeZone(\"America/Los_Angeles\")\n        .build();\n\nUpdateSmsChannelRequest updateSmsChannelRequest = UpdateSmsChannelRequest.newRequest(\"308303cf-9c10-4d71-9bc2-d9f3a671ed0c\", updateSmsChannel);\n\nResponse<String> response = client.execute(updateSmsChannelRequest);\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\n\nsms = ua.Sms(airship=airship, \n        sender=\"US:12345\", \n        msisdn=\"15035556789\", \n        opted_in=\"2021-02-13T11:58:59\", \n        locale_country=\"us\", \n        locale_language=\"en\", \n        timezone=\"America/Los_Angeles\")\n\n# change properties to update\nsms.locale_country = \"fr\"\nsms.opted_in = \"2020-02-13T11:58:59\"\n\nresponse = sms.update()\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n  \"ok\": true,\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/channels/sms/{msisdn}/{sender}": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/channels/sms/15035556789/12345 HTTP/1.1\nAuthorization: Bearer <authorization token>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nChannelRequest channelRequest = ChannelRequest.newSmsLookupRequest(\"15035556789\",\"12345\");\nResponse <ChannelResponse> response = client.execute(channelRequest);\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\nsms = ua.Sms(airship, sender='12345', msisdn='15035556789')\nchannel_info = sms.lookup()\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nsms_channel = UA::Sms.new(client: airship)\nsms_channel.msisdn = '15035556789'\nsms_channel.sender = '12345'\nsms_channel.lookup\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nData-Attribute: channel\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\": true,\n   \"channel\": {\n      \"channel_id\": \"84e36d69-873b-4ffe-81cd-e74c9f002057\",\n      \"device_type\": \"sms\",\n      \"installed\": true,\n      \"push_address\": null,\n      \"named_user_id\": null,\n      \"alias\": null,\n      \"tags\": [],\n      \"tag_groups\": {\n         \"ua_channel_type\": [\n            \"sms\"\n         ],\n         \"ua_sender_id\": [\n            \"US:12345\"\n         ],\n         \"ua_opt_in\": [\n            \"true\"\n         ]\n      },\n      \"created\": \"2020-04-27T22:06:21\",\n      \"opt_in\": true,\n      \"last_registration\": \"2020-05-14T19:51:38\"\n   }\n}}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/channels/subscription_lists": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/channels/subscription_lists HTTP/1.1\nAuthorization: Basic <App Auth>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n   \"subscription_lists\": [\n      {\n         \"action\":\"subscribe\",\n         \"list_id\":\"intriguing_ideas\"\n      },\n      {\n         \"action\":\"unsubscribe\",\n         \"list_id\":\"animal_facts\"\n      }\n   ],\n   \"audience\": {\n      \"ios_channel\": [\n         \"b8f9b663-0a3b-cf45-587a-be880946e881\"\n      ],\n      \"email_address\": [\n         \"homer@springfield.net\",\n         \"nick@nite.org\"\n      ]\n   }\n}\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\n\nsubscription_list = ua.SubscriptionList(airship)\n\nsubscription_list.subscribe(list_id=\"intriguing_ideas\",\n                            audience=ua.email(\"nick@nite.org\")\n                           )\n\nsubscription_list.unsubscribe(list_id=\"animal_facts\", \n                              audience=ua.ios_channel(\n                                 \"b8f9b663-0a3b-cf45-587a-be880946e881\"\n                                 )\n                              )\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\n SubscriptionList subscriptionList = SubscriptionList.newBuilder()\n       .setListId(\"big_deals\")\n       .setAction(SubscriptionListAction.SUBSCRIBE)\n       .build();\n\n SubscriptionListPayload payload = SubscriptionListPayload.newBuilder()\n       .addSubscriptionList(subscriptionList)\n       .setAudience(ChannelAudience.newBuilder()\n                .addDeviceId(ChannelAudienceType.ANDROID_CHANNEL, \"002b4104-c94f-418d-be86-ead3214b3244\").build())\n       .build();\n\n SubscriptionListRequest request  = SubscriptionListRequest.newRequest(payload);\n Response<SubscriptionListResponse> response = client.execute(request);\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/channels/tags": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/channels/tags HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n   \"audience\": {\n      \"ios_channel\": \"b8f9b663-0a3b-cf45-587a-be880946e881\",\n      \"android_channel\": \"13863b3c-f860-4bbf-a9f1-4d785379b8a2\"\n   },\n   \"add\": {\n      \"my_fav_tag_group1\": [\"tag1\", \"tag2\", \"tag3\"],\n      \"my_fav_tag_group2\": [\"tag1\", \"tag2\", \"tag3\"],\n      \"my_fav_tag_group3\": [\"tag1\", \"tag2\", \"tag3\"]\n   }\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nChannelTagRequest request = ChannelTagRequest.newRequest()\n        .addIOSChannel(\"b8f9b663-0a3b-cf45-587a-be880946e881\")\n        .addAndroidChannel(\"13863b3c-f860-4bbf-a9f1-4d785379b8a2\")\n        .addTags(\"my_fav_tag_group1\", ImmutableSet.of(\"tag1\", \"tag2\", \"tag3\"))\n        .addTags(\"my_fav_tag_group2\", ImmutableSet.of(\"tag1\", \"tag2\", \"tag3\"))\n        .addTags(\"my_fav_tag_group3\", ImmutableSet.of(\"tag1\", \"tag2\", \"tag3\"));\n\nResponse response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\nchannel_tags = ua.devices.ChannelTags(airship)\nios_audience = ['b8f9b663-0a3b-cf45-587a-be880946e881']\nandroid_audience = ['13863b3c-f860-4bbf-a9f1-4d785379b8a2']\nchannel_tags.set_audience(ios_audience, android_audience\n)\nchannel_tags.add('my_fav_tag_group1', ['tag1', 'tag2', 'tag3'])\nchannel_tags.remove('my_fav_tag_group2', 'tag4')\nchannel_tags.send()\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nchannel_tags = UA::ChannelTags.new(client: airship)\nios_audience = 'b8f9b663-0a3b-cf45-587a-be880946e881'\nandroid_audience = '13863b3c-f860-4bbf-a9f1-4d785379b8a2'\nchannel_tags.set_audience(\n    ios: ios_audience,\n    android: android_audience\n)\nchannel_tags.add(group_name: 'my_fav_tag_group1', tags: ['tag1', 'tag2', 'tag3'])\nchannel_tags.remove(group_name: 'my_fav_tag_group2', tags: 'tag4')\nchannel_tags.send_request\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\": true,\n   \"warnings\": [\"The following tag groups do not exist: my_fav_tag_group2\", \"The following tag groups are deactivated: my_fav_tag_group3\"]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/channels/uninstall": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/channels/uninstall HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n[\n   {\n      \"channel_id\": \"b8f9b663-0a3b-cf45-587a-be880946e881\",\n      \"device_type\": \"ios\"\n   },\n   {\n      \"channel_id\": \"13863b3c-f860-4bbf-a9f1-4d785379b8a2\",\n      \"device_type\": \"android\"\n   }\n]\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\nchannel_uninstall = ua.ChannelUninstall(airship)\nchannel = {\n   \"channel_id\": 'b8f9b663-0a3b-cf45-587a-be880946e881',\n   \"device_type\": \"ios\"\n   }\n\nchannel_uninstall.uninstall(channel)\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\ncu = UA::ChannelUninstall.new(client: airship)\n\nchans = [{\"channel_id\" => \"b8f9b663-0a3b-cf45-587a-be880946e881\",\n          \"device_type\" => \"ios\"},\n         {\"channel_id\" => \"13863b3c-f860-4bbf-a9f1-4d785379b8a2\",\n          \"device_type\" => \"android\"}]\n\ncu.uninstall(channels: chans)\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\n Set<ChannelUninstallDevice> channels = ImmutableSet.of(\n       new ChannelUninstallDevice(\"00f74677-4616-4958-bd91-30e949814d2c\", ChannelUninstallDeviceType.IOS),\n       new ChannelUninstallDevice(\"007f7156-9b82-4cb6-a2f9-e2c8e7fce13d\", ChannelUninstallDeviceType.ANDROID)\n );\n\n ChannelUninstallPayload payload = ChannelUninstallPayload.newBuilder()\n       .setChannels(channels)\n       .build();\n\n ChannelUninstallRequest request = ChannelUninstallRequest.newRequest(payload);\n Response<ChannelUninstallResponse> response = client.execute(request);\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 202 Accepted\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/channels/{channel_id}": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/channels/9c36e8c7-5a73-47c0-9716-99fd3d4197d5 HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nChannelRequest request = ChannelRequest.newRequest(\"9c36e8c7-5a73-47c0-9716-99fd3d4197d5\");\nResponse<ChannelResponse> response = client.execute(request);\nChannelView channel = response.getBody().get().getChannelView().get();\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\nchannel = ua.ChannelInfo(airship).lookup('9c36e8c7-5a73-47c0-9716-99fd3d4197d5')\nprint (channel.channel_id, channel.device_type, channel.tags,\n      channel.push_address, channel.named_user_id, channel.opt_in)\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nchannel_client = UA::ChannelInfo.new(client: airship)\nchannel_info = channel_client.lookup(uuid: '9c36e8c7-5a73-47c0-9716-99fd3d4197d5')\nputs(channel_info)\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\": true,\n   \"channel\": {\n      \"channel_id\": \"9c36e8c7-5a73-47c0-9716-99fd3d4197d5\",\n      \"device_type\": \"ios\",\n      \"installed\": true,\n      \"opt_in\": false,\n      \"background\": true,\n      \"push_address\": \"FE66489F304DC75B8D6E8200DFF8A456E8DAEACEC428B427E9518741C92C6660\",\n      \"created\": \"2020-08-08T20:41:06\",\n      \"last_registration\": \"2020-05-01T18:00:27\",\n      \"named_user_id\": \"some_id_that_maps_to_your_systems\",\n      \"alias\": null,\n      \"tags\": [\n         \"tag1\",\n         \"tag2\"\n      ],\n      \"tag_groups\": {\n         \"tag_group_1\": [\"tag1\", \"tag2\"],\n         \"tag_group_2\": [\"tag1\", \"tag2\"]\n      },\n      \"ios\": {\n         \"badge\": 0,\n         \"quiettime\": {\n            \"start\": null,\n            \"end\": null\n         },\n         \"tz\": \"America/Los_Angeles\"\n      }\n   }\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/contacts/scoped/{contact_id}": {
      "post": [
        {
          "description": "Example: Scoped Contact Batch Operations\n",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/contacts/scoped/77721a11-7ffa-4362-9bdb-f27ca891f9de HTTP/1.1\nAuthorization: Basic <application or master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n  \"scoped\": [{\n    \"scope\": [\"web\", \"email\", \"app\"],\n    \"subscription_lists\": {\n      \"subscribe\": [\"subscription_1\", \"subscription_2\"],\n      \"unsubscribe\": [\"subscription_3\"]\n    }\n  }]\n}\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/create-and-send": {
      "post": [
        {
          "description": "Example Create and Send Using Email",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/create-and-send HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n  \"audience\": {\n    \"create_and_send\" : [\n      {\n        \"ua_address\": \"new@email.com\",\n        \"ua_commercial_opted_in\": \"2020-11-29T10:34:22\"\n      },\n      {\n        \"ua_address\" : \"ben@icetown.com\",\n        \"ua_commercial_opted_in\": \"2020-11-29T12:45:10\"\n      }\n    ]\n  },\n  \"device_types\" : [ \"email\" ],\n  \"notification\" : {\n    \"email\": {\n      \"subject\": \"Welcome to the Winter Sale! \",\n      \"html_body\": \"<h1>Seasons Greetings</h1><p>Check out our winter deals!</p><p><a data-ua-unsubscribe=\\\"1\\\" title=\\\"unsubscribe\\\" href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\">Unsubscribe</a></p>\",\n      \"plaintext_body\": \"Greetings! Check out our latest winter deals! [[ua-unsubscribe href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\"]]\",\n      \"message_type\": \"commercial\",\n      \"sender_name\": \"Airship\",\n      \"sender_address\": \"team@airship.com\",\n      \"reply_to\": \"no-reply@airship.com\",\n      \"click_tracking\": false,\n      \"open_tracking\": false\n    }\n  },\n  \"campaigns\": {\n      \"categories\": [\"winter sale\", \"west coast\"]\n  }\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nString htmlBodyString = \"<h1>Seasons Greetings</h1><p>Check out our winter deals!</p><p><a data-ua-unsubscribe=\\\"1\\\" title=\\\"unsubscribe\\\" href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\">Unsubscribe</a></p>\";\nString plaintextBodyString = \"Greetings! Check out our latest winter deals! [[ua-unsubscribe href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\"]]\";\n\nEmailChannel newChannel = EmailChannel.newBuilder()\n        .setAddress(\"new@email.com\")\n        .setCommertialOptedIn(DateTime.parse(\"2020-11-29T10:34:22Z\"))\n        .build();\n\nEmailChannel benChannel = EmailChannel.newBuilder()\n        .setAddress(\"ben@icetown.com\")\n        .setTransactionalOptedIn(DateTime.parse(\"2020-11-29T12:45:10Z\"))\n        .build();\n\nCreateAndSendAudience audience = new CreateAndSendAudience(EmailChannels.newBuilder()\n        .addChannel(newChannel)\n        .addChannel(benChannel)\n        .build());\n\nCreateAndSendEmailPayload createAndSendEmailPayload = CreateAndSendEmailPayload.newBuilder()\n        .setSubject(\"Welcome to the Winter Sale! \")\n        .setHtmlBody(htmlBodyString)\n        .setPlaintextBody(plaintextBodyString)\n        .setMessageType(MessageType.TRANSACTIONAL)\n        .setSenderName(\"Airship\")\n        .setSenderAddress(\"team@airship.com\")\n        .setReplyTo(\"no-reply@airship.com\")\n        .build();\n\nNotification notification = Notification.newBuilder()\n        .addDeviceTypeOverride(DeviceType.EMAIL, createAndSendEmailPayload)\n        .build();\n\nCampaigns campaign = Campaigns.newBuilder()\n        .addCategory(\"winter sale\")\n        .addCategory(\"west coast\")\n        .build();\n\nCreateAndSendPayload payload = CreateAndSendPayload.newBuilder()\n        .setAudience(audience)\n        .setNotification(notification)\n        .setCampaigns(campaign)\n        .build();\n\nCreateAndSendRequest request = CreateAndSendRequest.newRequest(payload);\nResponse<String> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\nemails = [ua.Email(airship=airship,\n                  address='new@email.com',\n                  commercial_opted_in='2020-11-29T10:34:22'),\n          ua.Email(airship=airship,\n                  address='ben@icetown.com',\n                  commercial_opted_in='2020-11-29T12:45:10')]\nnotification = ua.notification(\n    email=ua.email(\n            subject='Welcome to the Winter Sale!',\n            html_body='<h1>Seasons Greetings</h1><p>Check out our winter deals!</p><p><a data-ua-unsubscribe=\\\"1\\\" title=\\\"unsubscribe\\\" href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\">Unsubscribe</a></p>',\n            plaintext_body='Greetings! Check out our latest winter deals! [[ua-unsubscribe href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\"]]',\n            message_type='commercial',\n            sender_name='Airship',\n            sender_address='team@airship.com',\n            reply_to='no-reply@airship.com'\n        )\n)\ncampaigns = ua.campaigns(categories=['winter sale', 'west coast'])\ncreate_and_send = ua.CreateAndSendPush(airship=airship,\n                                      channels=emails)\ncreate_and_send.campaigns = campaigns\ncreate_and_send.notification = notification\ncreate_and_send.device_types = ua.device_types('email')\nresponse = create_and_send.send()\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nemail_notification = UA::EmailNotification.new(client: airship)\nemail_notification.bypass_opt_in_level = false\nemail_notification.html_body = \"<h1>Seasons Greetings</h1><p>Check out our winter deals!</p><p><a data-ua-unsubscribe=\\\"1\\\" title=\\\"unsubscribe\\\" href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\">Unsubscribe</a></p>\"\nemail_notification.message_type = 'transactional'\nemail_notification.plaintext_body = 'Greetings! Check out our latest winter deals! [[ua-unsubscribe href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\"]]'\nemail_notification.reply_to = 'no-reply@airship.com'\nemail_notification.sender_address = 'team@airship.com'\nemail_notification.sender_name = 'Airship'\nemail_notification.subject = 'Welcome to the Winter Sale!'\noverride = email_notification.email_override\nsend_it = UA::CreateAndSend.new(client: airship)\nsend_it.addresses = [\n  {\n    \"ua_address\": \"new@email.com\",\n    \"ua_commercial_opted_in\": \"2020-11-29T10:34:22\"\n  },\n  {\n    \"ua_address\": \"ben@icetown.com\",\n    \"ua_commercial_opted_in\": \"2020-11-29T12:45:10\"\n  }\n]\nsend_it.device_types = [ \"email\" ]\nsend_it.campaigns = [\"winter sale\", \"west coast\"]\nsend_it.notification = email_notification.email_override\nsend_it.create_and_send\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Example Create and Send with Stored Template",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/create-and-send HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n  \"audience\": {\n    \"create_and_send\" : [\n      {\n        \"ua_address\": \"new@email.com\",\n        \"ua_commercial_opted_in\": \"2020-11-29T10:34:22\",\n        \"name\": \"New Person, Esq.\",\n        \"location\": \"City, State\"\n      },\n      {\n        \"ua_address\" : \"ben@icetown.com\",\n        \"ua_commercial_opted_in\": \"2020-11-29T12:45:10\",\n        \"name\": \"Ben Wyatt\",\n        \"location\": \"Pawnee, IN\"\n      }\n    ]\n  },\n  \"device_types\": [\n      \"email\"\n  ],\n  \"notification\": {\n      \"email\": {\n        \"bcc\": [\n            \"blind@copy.com\"\n        ],\n        \"message_type\": \"commercial\",\n        \"reply_to\": \"no-reply@airship.com\",\n        \"sender_address\": \"team@airship.com\",\n        \"sender_name\": \"Airship\",\n        \"template\": {\n            \"template_id\": \"9335bb2a-2a45-456c-8b53-42af7898236a\"\n        }\n      }\n  }\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nEmailChannel newChannel = EmailChannel.newBuilder()\n        .setAddress(\"new@email.com\")\n        .setCommertialOptedIn(DateTime.parse(\"2020-11-29T10:34:22Z\"))\n        .build();\n\nEmailChannel benChannel = EmailChannel.newBuilder()\n        .setAddress(\"ben@icetown.com\")\n        .setTransactionalOptedIn(DateTime.parse(\"2020-11-29T12:45:10Z\"))\n        .build();\n\nCreateAndSendAudience audience = new CreateAndSendAudience(EmailChannels.newBuilder()\n        .addChannel(newChannel)\n        .addChannel(benChannel)\n        .build());\n\nEmailTemplate template = EmailTemplate.newBuilder()\n        .setTemplateId(\"9335bb2a-2a45-456c-8b53-42af7898236a\")\n        .build();\n\nCreateAndSendEmailPayload createAndSendEmailPayload = CreateAndSendEmailPayload.newBuilder()\n        .setEmailTemplate(template)\n        .setMessageType(MessageType.TRANSACTIONAL)\n        .setSenderName(\"Airship\")\n        .setSenderAddress(\"team@airship.com\")\n        .setReplyTo(\"no-reply@airship.com\")\n        .build();\n\nNotification notification = Notification.newBuilder()\n        .addDeviceTypeOverride(DeviceType.EMAIL, createAndSendEmailPayload)\n        .build();\n\nCreateAndSendPayload payload = CreateAndSendPayload.newBuilder()\n        .setAudience(audience)\n        .setNotification(notification)\n        .build();\n\nCreateAndSendRequest request = CreateAndSendRequest.newRequest(payload);\nResponse<String> response = client.execute(request);\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nemail_notification = UA::EmailNotification.new(client: airship)\nemail_notification.message_type = 'transactional'\nemail_notification.reply_to = 'no-reply@airship.com'\nemail_notification.sender_address = 'team@airship.com'\nemail_notification.sender_name = 'Airship'\nemail_notification.template_id = \"9335bb2a-2a45-456c-8b53-42af7898236a\"\ninline_template = email_notification.email_with_inline_template\nsend_it = UA::CreateAndSend.new(client: airship)\nsend_it.addresses = [\n  {\n    \"ua_address\": \"new@email.com\",\n    \"ua_commercial_opted_in\": \"2020-11-29T10:34:22\"\n  },\n  {\n    \"ua_address\": \"ben@icetown.com\",\n    \"ua_commercial_opted_in\": \"2020-11-29T12:45:10\"\n  }\n]\nsend_it.device_types = [ \"email\" ]\nsend_it.notification = inline_template\nsend_it.create_and_send\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 202 Accepted\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true,\n    \"operation_id\": \"67c65146-c27f-431f-b54a-83aca694fdd3\",\n    \"push_ids\": [\n        \"c0eead17-333b-4f86-8a42-9fb7be1ed627\"\n    ],\n    \"message_ids\": [],\n    \"content_urls\": []\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/create-and-send/validate": {
      "post": [
        {
          "description": "Example Validating Create-and-send Payload",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/create-and-send/validate HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n  \"audience\": {\n    \"create_and_send\" : [\n      {\n        \"ua_address\": \"new@email.com\",\n        \"ua_commercial_opted_in\": \"2020-11-29T10:34:22\"\n      },\n      {\n        \"ua_address\" : \"ben@icetown.com\",\n        \"ua_commercial_opted_in\": \"2020-11-29T12:45:10\"\n      }\n    ]\n  },\n  \"device_types\" : [ \"email\" ],\n  \"notification\" : {\n    \"email\": {\n      \"subject\": \"Welcome to the Winter Sale! \",\n      \"html_body\": \"<h1>Seasons Greetings</h1><p>Check out our winter deals!</p><p><a data-ua-unsubscribe=\\\"1\\\" title=\\\"unsubscribe\\\" href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\">Unsubscribe</a></p>\",\n      \"plaintext_body\": \"Greetings! Check out our latest winter deals! [[ua-unsubscribe href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\"]]\",\n      \"message_type\": \"commercial\",\n      \"sender_name\": \"Airship\",\n      \"sender_address\": \"team@airship.com\",\n      \"reply_to\": \"no-reply@airship.com\"\n    }\n  },\n  \"campaigns\": {\n      \"categories\": [\"winter sale\", \"west coast\"]\n  }\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nString htmlBodyString = \"<h1>Seasons Greetings</h1><p>Check out our winter deals!</p><p><a data-ua-unsubscribe=\\\"1\\\" title=\\\"unsubscribe\\\" href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\">Unsubscribe</a></p>\";\nString plaintextBodyString = \"Greetings! Check out our latest winter deals! [[ua-unsubscribe href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\"]]\";\n\nEmailChannel newChannel = EmailChannel.newBuilder()\n        .setAddress(\"new@email.com\")\n        .setCommertialOptedIn(DateTime.parse(\"2020-11-29T10:34:22Z\"))\n        .build();\n\nEmailChannel benChannel = EmailChannel.newBuilder()\n        .setAddress(\"ben@icetown.com\")\n        .setTransactionalOptedIn(DateTime.parse(\"2020-11-29T12:45:10Z\"))\n        .build();\n\nCreateAndSendAudience audience = new CreateAndSendAudience(EmailChannels.newBuilder()\n        .addChannel(newChannel)\n        .addChannel(benChannel)\n        .build());\n\nCreateAndSendEmailPayload createAndSendEmailPayload = CreateAndSendEmailPayload.newBuilder()\n        .setSubject(\"Welcome to the Winter Sale! \")\n        .setHtmlBody(htmlBodyString)\n        .setPlaintextBody(plaintextBodyString)\n        .setMessageType(MessageType.TRANSACTIONAL)\n        .setSenderName(\"Airship\")\n        .setSenderAddress(\"team@airship.com\")\n        .setReplyTo(\"no-reply@airship.com\")\n        .build();\n\nNotification notification = Notification.newBuilder()\n        .addDeviceTypeOverride(DeviceType.EMAIL, createAndSendEmailPayload)\n        .build();\n\nCampaigns campaign = Campaigns.newBuilder()\n        .addCategory(\"winter sale\")\n        .addCategory(\"west coast\")\n        .build();\n\nCreateAndSendPayload payload = CreateAndSendPayload.newBuilder()\n        .setAudience(audience)\n        .setNotification(notification)\n        .setCampaigns(campaign)\n        .build();\n\nCreateAndSendRequest request = CreateAndSendRequest.newRequest(payload)\n        .setValidateOnly(true);\nResponse<String> response = client.execute(request);\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nemail_notification = UA::EmailNotification.new(client: airship)\nemail_notification.bypass_opt_in_level = false\nemail_notification.html_body = \"<h1>Seasons Greetings</h1><p>Check out our winter deals!</p><p><a data-ua-unsubscribe=\\\"1\\\" title=\\\"unsubscribe\\\" href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\">Unsubscribe</a></p>\"\nemail_notification.message_type = 'transactional'\nemail_notification.plaintext_body = 'Greetings! Check out our latest winter deals! [[ua-unsubscribe href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\"]]'\nemail_notification.reply_to = 'no-reply@airship.com'\nemail_notification.sender_address = 'team@airship.com'\nemail_notification.sender_name = 'Airship'\nemail_notification.subject = 'Welcome to the Winter Sale!'\noverride = email_notification.email_override\nsend_it = UA::CreateAndSend.new(client: airship)\nsend_it.addresses = [\n  {\n    \"ua_address\": \"new@email.com\",\n    \"ua_commercial_opted_in\": \"2020-11-29T10:34:22\"\n  }\n]\nsend_it.device_types = [ \"email\" ]\nsend_it.campaigns = [\"winter sale\", \"west coast\"]\nsend_it.notification = email_notification.email_override\nsend_it.validate\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\" : true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/custom-events": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/custom-events HTTP/1.1\nAuthorization: Bearer <authorization token>\nX-UA-Appkey: <application key>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n[\n   {\n      \"occurred\": \"2020-05-02T02:31:22\",\n      \"user\": {\n         \"named_user_id\": \"hugh.manbeing\"\n      },\n      \"body\": {\n         \"name\": \"purchased\",\n         \"value\": 239.85,\n         \"transaction\": \"886f53d4-3e0f-46d7-930e-c2792dac6e0a\",\n         \"interaction_id\": \"your.store/us/en_us/pd/shoe/pid-11046546/pgid-10978234\",\n         \"interaction_type\": \"url\",\n         \"properties\": {\n            \"description\": \"Sneaker purchase\",\n            \"brand\": \"Victory Sneakers\",\n            \"colors\": [\n             \"red\",\n             \"blue\"\n            ],\n            \"items\": [\n               {\n                  \"text\": \"New Line Sneakers\",\n                  \"price\": \"$ 79.95\"\n               },\n               {\n                  \"text\": \"Old Line Sneakers\",\n                  \"price\": \"$ 79.95\"\n               },\n               {\n                  \"text\": \"Blue Line Sneakers\",\n                  \"price\": \"$ 79.95\"\n               }\n            ],\n            \"name\": \"Hugh Manbeing\",\n            \"userLocation\": {\n               \"state\": \"CO\",\n               \"zip\": \"80202\"\n            }\n         },\n         \"session_id\": \"22404b07-3f8f-4e42-a4ff-a996c18fa9f1\"\n      }\n   }\n]\n"
            },
            {
              "lang": "python",
              "source": "import datetime\nimport urbanairship as ua\n\nairship = ua.Airship(key=<app_key>, token=<bearer_token>)\n\nevent = ua.CustomEvent(\n   airship=airship,\n   name='purchased', \n   user=ua.named_user(\"hugh.manbeing\")\n)\n\nevent.session_id = \"22404b07-3f8f-4e42-a4ff-a996c18fa9f1\"\nevent.occurred = datetime(2020, 5, 2, 2, 31, 22)\nevent.interaction_id = \"your.store/us/en_us/pd/shoe/pid-11046546/pgid-10978234\"\nevent.interaction_type = \"url\"\nevent.value = 239.84\nevent.transaction = \"886f53d4-3e0f-46d7-930e-c2792dac6e0a\"\nevent.session_id = \"22404b07-3f8f-4e42-a4ff-a996c18fa9f1\"\nevent.properties = {\"key\":\"value\", \"another\": {\"this\":\"nested\"}}\n\nresponse = event.send()\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .setBearerToken(\"<bearer token>\")\n        .build();\n\nCustomEventUser customEventUser = CustomEventUser.newBuilder()\n        .setNamedUserId(\"hugh.manbeing\")\n        .build();\n\nCustomEventPropertyValue customEventProperty = CustomEventPropertyValue.of(\"Victory Sneakers\");\n\nList<CustomEventPropertyValue> items = new ArrayList<>();\nitems.add(CustomEventPropertyValue.of(\"New Line Sneakers\"));\nitems.add(CustomEventPropertyValue.of(\"Old Line Sneakers\"));\n\nDateTime occurred = new DateTime(2020, 05, 02, 02, 31, 22, DateTimeZone.UTC);\n\nCustomEventBody customEventBody = CustomEventBody.newBuilder()\n        .setName(\"purchased\")\n        .addPropertiesEntry(\"brand\", customEventProperty)\n        .addPropertiesEntry(\"items\", CustomEventPropertyValue.of(items))\n        .build();\n\nCustomEventPayload customEventPayload = CustomEventPayload.newBuilder()\n        .setCustomEventBody(customEventBody)\n        .setCustomEventUser(customEventUser)\n        .setOccurred(occurred)\n        .build();\n\nCustomEventRequest customEventRequest = CustomEventRequest.newRequest(customEventPayload);\nResponse<CustomEventResponse> response = client.execute(customEventRequest);\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>', token: '<token>')\n\nexample_events = [\n  UA.custom_events(\n    body: UA.custom_events_body(\n      interaction_id: \"https://docs.airship.com/api/ua/#schemas-customeventobject\",\n      interaction_type: \"url\",\n      name: \"example\",\n      properties: {\n        \"who\" => \"Alf\",\n        \"where\" => \"In the garage!\",\n        \"from\" => \"Melmac\"\n      },\n      session_id: \"8d168d40-bc9b-4359-800c-a546918354ac\",\n      transaction: \"d768f61f-73ba-495f-9e16-b3b9c3b598b7\",\n      value: 1\n    ),\n    occurred: \"2021-10-01T00:00:00\",\n    user: UA.custom_events_user(named_user_id: \"Gordon Shumway\")\n  )\n]\nevent = Urbanairship::CustomEvents::CustomEvent.new(client: airship)\nevent.events = example_events\nevent.create\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\": true,\n   \"operation_id\": \"8c61c0c4-95b0-45a6-bc38-733f7fcb8979\"\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/experiments": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/experiments HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\nairship = ua.Airship('<app key>', '<master secret>')\nab_test = ua.ABTest(airship)\nresponse = ab_test.list_experiments()\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nab_test = UA::AbTest.new(client: airship)\nab_test.limit = 5\nab_test.list_ab_test\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Length: 123\nData-Attribute: experiments\nCount: 2\nTotal-Count: 2\nContent-Type: application/vnd.urbanairship+json; version=3\n\n {\n   \"ok\" : \"true\",\n   \"count\" : 2,\n   \"total_count\" : 2,\n   \"experiments\" : [{\n     \"name\" : \"Experiment 1\",\n     \"control\" : 0.33,\n     \"audience\" : \"all\",\n     \"device_types\": [ \"ios\", \"android\" ],\n     \"variants\" : [{\n       \"push\" : {\n         \"notification\" : {\n           \"alert\" : \"message 1\"\n         }\n       },\n       \"id\" : 0,\n     },\n     {\n       \"push\" : {\n           \"notification\" : {\n             \"alert\" : \"message 2\"\n           }\n       },\n       \"id\" : 1,\n     }],\n     \"id\" : \"b5bc3dd1-9ea4-4208-b5f1-9e7ac3fe0502\",\n     \"created_at\" : \"2020-03-03T21:08:05\",\n     \"push_id\" : \"07cec298-6b8c-49f9-8e03-0448a06f4aac\"\n   }, {\n     \"name\" : \"Experiment 2\",\n     \"description\" : \"The second experiment\",\n     \"audience\" : \"all\",\n     \"device_types\": [ \"ios\", \"android\" ],\n     \"variants\" : [{\n       \"push\" : {\n         \"notification\" : {\n           \"alert\" : \"message 1\"\n         }\n       },\n       \"id\" : 0,\n     },\n     {\n       \"push\" : {\n           \"notification\" : {\n             \"alert\" : \"message 2\"\n           }\n       },\n       \"id\" : 1,\n     }],\n     \"id\" : \"e464aa7e-be40-4994-a290-1bbada7187d8\",\n     \"created_at\" : \"2020-03-03T21:08:05\",\n     \"push_id\" : \"07cec298-6b8c-49f9-8e03-0448a06f4aac\"\n   }]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/experiments HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n    \"name\": \"Experiment 1\",\n    \"audience\": {\"tag\": \"earlyBirds\"},\n    \"device_types\": [ \"ios\", \"android\" ],\n    \"variants\": [\n        {\n            \"push\": {\n                \"notification\": {\n                    \"alert\": \"message 1\"\n                }\n            }\n        },\n        {\n            \"push\": {\n                \"notification\": {\n                    \"alert\": \"message 2\"\n                }\n            }\n        }\n    ]\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nSchedule schedule = Schedule.newBuilder()\n        .setScheduledTimestamp(DateTime.now().plusMinutes(5))\n        .build();\n\nVariant variantOne = Variant.newBuilder()\n        .setPushPayload(VariantPushPayload.newBuilder()\n        .setNotification(Notification.newBuilder()\n                .setAlert(\"message 1\")\n                .build()\n        )\n        .build())\n        .setSchedule(schedule)\n        .build();\n\nVariant variantTwo = Variant.newBuilder()\n        .setPushPayload(VariantPushPayload.newBuilder()\n        .setNotification(Notification.newBuilder()\n                .setAlert(\"message 2\")\n                .build()\n        )\n        .build())\n        .setSchedule(schedule)\n        .build();\n\nExperiment experiment = Experiment.newBuilder()\n        .setName(\"Experiment 1\")\n        .setDescription(\"Testing description\")\n        .setDeviceTypes(DeviceTypeData.of(DeviceType.IOS, DeviceType.ANDROID))\n        .setAudience(Selectors.tag(\"earlyBirds\"))\n        .addVariant(variantOne)\n        .addVariant(variantTwo)\n        .build();\n\nExperimentRequest request = ExperimentRequest.newRequest(experiment);\nResponse<ExperimentResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\npush_1 = airship.create_push()\npush_1.notification = ua.notification(alert='message 1')\npush_2 = airship.create_push()\npush_2.notification = ua.notification(alert='message 2')\nvariants = [\n    ua.Variant(push=push_1),\n    ua.Variant(push=push_2)\n]\nexperiment = ua.Experiment(\n    audience=ua.tag('earlyBirds'),\n    name='Experiment 1',\n    device_types=ua.device_types('ios', 'android'),\n    variants=variants\n)\nab_test = ua.ABTest(airship=airship)\nresponse = ab_test.create(experiment=experiment)\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nvariant_one = UA::Variant.new(client: airship)\nvariant_one.push = {\n    \"notification\": {\n        \"alert\": \"message 1\"\n    }\n}\nvariant_two = UA::Variant.new(client: airship)\nvariant_two.push = {\n    \"notification\": {\n        \"alert\": \"message 2\"\n    }\n}\nexperiment = UA::Experiment.new(client: airship)\nexperiment.name = 'Experiment 1'\nexperiment.description = 'Example experiment'\nexperiment.audience = UA.tag('earlyBirds')\nexperiment.device_types = ['ios','android']\nexperiment.variants << variant_one.payload\nexperiment.variants << variant_two.payload\nab_test = UA::AbTest.new(client: airship)\nab_test.experiment_object = experiment.payload\nab_test.create_ab_test\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 201 Created\nContent-Length: 123\nLocation: https://go.urbanairship.com/api/experiments/0f7704e9-5dc0-4f7d-9964-e89055701b0a\nContent-Type: application/vnd.urbanairship+json; version=3\n\n  {\n    \"ok\" : \"true\",\n    \"operation_id\" : \"03ca94a3-2b27-42f6-be7e-41efc2612cd4\",\n    \"experiment_id\" : \"0f7704e9-5dc0-4f7d-9964-e89055701b0a\",\n    \"push_id\" : \"7e13f060-594c-11e4-8ed6-0800200c9a66\"\n  }\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/experiments/scheduled": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/experiments/scheduled HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\nairship = ua.Airship('<app key>', '<master secret>')\nab_test = ua.ABTest(airship)\nresponse = ab_test.list_scheduled_experiment()\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nab_test = UA::AbTest.new(client: airship)\nab_test.list_scheduled_ab_test\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Length: 123\nData-Attribute: experiments\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": \"true\",\n    \"count\": 2,\n    \"total_count\": 2,\n    \"experiments\": [\n        {\n            \"id\": \"0f7704e9-5dc0-4f7d-9964-e89055701b0a\",\n            \"name\": \"Experiment 1\",\n            \"audience\": \"all\",\n            \"device_types\": [ \"ios\", \"android\" ],\n            \"variants\": [\n                {\n                    \"id\": 0,\n                    \"schedule\": {\n                        \"scheduled_time\": \"2020-11-17T20:58:00Z\"\n                    },\n                    \"push\": {\n                        \"notification\": {\n                            \"alert\": \"message 1\"\n                        }\n                    }\n                },\n                {\n                    \"id\": 1,\n                    \"schedule\": {\n                        \"scheduled_time\": \"2020-11-17T20:58:00Z\"\n                    },\n                    \"push\": {\n                        \"notification\": {\n                            \"alert\": \"message 2\"\n                        }\n                    }\n                }\n            ]\n        },\n        {\n            \"id\": \"29705c10-5951-11e4-8ed6-0800200c9a66\",\n            \"name\": \"Experiment 2\",\n            \"audience\": \"all\",\n            \"device_types\": [ \"ios\", \"android\" ],\n            \"variants\": [\n                {\n                    \"id\": 0,\n                    \"schedule\": {\n                        \"scheduled_time\": \"2020-12-17T20:58:00Z\"\n                    },\n                    \"push\": {\n                        \"notification\": {\n                            \"alert\": \"message 1\"\n                        }\n                    }\n                },\n                {\n                    \"id\": 1,\n                    \"schedule\": {\n                        \"scheduled_time\": \"2020-12-17T20:58:00Z\"\n                    },\n                    \"push\": {\n                        \"notification\": {\n                            \"alert\": \"message 2\"\n                        }\n                    }\n                }\n            ]\n        }\n    ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/experiments/scheduled/{experiment_id}": {
      "delete": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "DELETE /api/experiments/scheduled/0f7704e9-5dc0-4f7d-9964-e89055701b0a HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nExperimentDeleteRequest request = ExperimentDeleteRequest.newRequest(\"0f7704e9-5dc0-4f7d-9964-e89055701b0a\");\nResponse<ExperimentResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\n\nab_test = ua.ABTest(airship)\nab_test.experiment_id = \"0f7704e9-5dc0-4f7d-9964-e89055701b0a\"\n\nresponse = ab_test.delete()\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nab_test = UA::AbTest.new(client: airship)\nab_test.experiment_id = '0f7704e9-5dc0-4f7d-9964-e89055701b0a'\nab_test.delete_ab_test\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Length: 123\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n  \"ok\" : \"true\",\n  \"operation_id\" : \"03ca94a3-2b27-42f6-be7e-41efc2612cd4\"\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/experiments/validate": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/experiments/validate HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n    \"name\": \"Experiment 1\",\n    \"audience\": {\"tag\": \"earlyBirds\"},\n    \"device_types\": [ \"ios\", \"android\" ],\n    \"variants\": [\n        {\n            \"push\": {\n                \"notification\": {\n                    \"alert\": \"message 1\"\n                }\n            }\n        },\n        {\n            \"push\": {\n                \"notification\": {\n                    \"alert\": \"message 2\"\n                }\n            }\n        }\n    ]\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nSchedule schedule = Schedule.newBuilder()\n        .setScheduledTimestamp(DateTime.now().plusMinutes(5))\n        .build();\n\nVariant variantOne = Variant.newBuilder()\n        .setPushPayload(VariantPushPayload.newBuilder()\n        .setNotification(Notification.newBuilder()\n                .setAlert(\"message 1\")\n                .build()\n        )\n        .build())\n        .setSchedule(schedule)\n        .build();\n\nVariant variantTwo = Variant.newBuilder()\n        .setPushPayload(VariantPushPayload.newBuilder()\n        .setNotification(Notification.newBuilder()\n                .setAlert(\"message 2\")\n                .build()\n        )\n        .build())\n        .setSchedule(schedule)\n        .build();\n\nExperiment experiment = Experiment.newBuilder()\n        .setName(\"Experiment 1\")\n        .setDescription(\"Testing description\")\n        .setDeviceTypes(DeviceTypeData.of(DeviceType.IOS, DeviceType.ANDROID))\n        .setAudience(Selectors.tag(\"earlyBirds\"))\n        .addVariant(variantOne)\n        .addVariant(variantTwo)\n        .build();\n\nExperimentRequest request = ExperimentRequest.newRequest(experiment).setValidateOnly(true);\nResponse<ExperimentResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\npush_1 = airship.create_push()\npush_1.notification = ua.notification(alert='message 1')\npush_2 = airship.create_push()\npush_2.notification = ua.notification(alert='message 2')\nvariants = [\n  ua.Variant(push=push_1),\n  ua.Variant(push=push_2)\n]\nexperiment = ua.Experiment(\n  audience=ua.tag('earlyBirds'),\n  name='Experiment 1',\n  device_types=ua.device_types('ios', 'android'),\n  variants=variants\n)\nab_test = ua.ABTest(airship=airship)\nresponse = ab_test.validate(experiment=experiment)\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nvariant_one = UA::Variant.new(client: airship)\nvariant_one.push = {\n    \"notification\": {\n        \"alert\": \"message 1\"\n    }\n}\nvariant_two = UA::Variant.new(client: airship)\nvariant_two.push = {\n    \"notification\": {\n        \"alert\": \"message 2\"\n    }\n}\nexperiment = UA::Experiment.new(client: airship)\nexperiment.name = 'Experiment 1'\nexperiment.description = 'Example experiment'\nexperiment.audience = UA.tag('earlyBirds')\nexperiment.device_types = ['ios','android']\nexperiment.variants << variant_one.payload\nexperiment.variants << variant_two.payload\nab_test = UA::AbTest.new(client: airship)\nab_test.experiment_object = experiment.payload\nab_test.validate_ab_test\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Length: 123\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n  \"ok\" : \"true\",\n  \"operation_id\" : \"03ca94a3-2b27-42f6-be7e-41efc2612cd4\"\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/experiments/{experiment_id}": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/experiments/0f7704e9-5dc0-4f7d-9964-e89055701b0a HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\nab_test = ua.ABTest(airship)\nresponse = ab_test.lookup(experiment_id='0f7704e9-5dc0-4f7d-9964-e89055701b0a')\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\nUA = Urbanairship\n\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\nab_test = UA::AbTest.new(client: airship)\n\nab_test.experiment_id = '0f7704e9-5dc0-4f7d-9964-e89055701b0a'\nab_test.lookup_ab_test\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Length: 123\nData-Attribute: experiment\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\" : \"true\",\n   \"experiment\" : {\n      \"id\" : \"0f7704e9-5dc0-4f7d-9964-e89055701b0a\",\n      \"push_id\": \"d00f07b0-594c-11e4-8ed6-0800200c9a66\",\n      \"name\" : \"Experiment 1\",\n      \"audience\" : \"all\",\n      \"device_types\": [ \"ios\", \"android\" ],\n      \"variants\" : [{\n            \"push\" : {\n               \"notification\" : {\n                  \"alert\" : \"message 1\"\n               }\n            },\n            \"id\" : 0,\n         },\n         {\n            \"push\" : {\n               \"notification\" : {\n               \"alert\" : \"message 2\"\n            }\n         },\n         \"id\" : 1,\n     }]\n   }\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/feeds": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/feeds/ HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n   \"feed_url\": \"http://example.com/atom.xml\",\n   \"template\": {\n      \"audience\": \"all\",\n      \"device_types\": [ \"ios\", \"android\" ],\n      \"notification\": {\n         \"alert\": \"Check this out! - {{ title }}\",\n         \"ios\": {\n            \"alert\": \"New item! - {{ title }}\"\n         }\n      }\n   }\n}\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 201 Created\nLocation: https://go.urbanairship.com/api/feeds/SL_QBv8nT2yw5W9m_kDhQA/\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"feed_url\": \"http://example.com/atom.xml\",\n   \"last_checked\": null,\n   \"url\": \"https://go.urbanairship.com/api/feeds/SL_QBv8nT2yw5W9m_kDhQA/\",\n   \"id\": \"SL_QBv8nT2yw5W9m_kDhQA\",\n   \"api_version\": \"v3\",\n   \"template\": {\n      \"audience\": \"all\",\n      \"device_types\": [ \"ios\", \"android\" ],\n      \"notification\": {\n         \"alert\": \"Check this out! - {{ title }}\",\n         \"ios\": {\n            \"alert\": \"New item! - {{ title }}\"\n         }\n      }\n   }\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/feeds/{feed_id}": {
      "delete": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "DELETE /api/feeds/SL_QBv8nT2yw5W9m_kDhQA/ HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 204 No Content\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/feeds/SL_QBv8nT2yw5W9m_kDhQA/ HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"feed_url\": \"http://example.com/atom.xml\",\n   \"last_checked\": \"2020-03-08 21:52:21\",\n   \"url\": \"https://go.urbanairship.com/api/feeds/SL_QBv8nT2yw5W9m_kDhQA/\",\n   \"id\": \"SL_QBv8nT2yw5W9m_kDhQA\",\n   \"api_version\": \"v3\",\n   \"template\": {\n      \"audience\": \"all\",\n      \"device_types\": [ \"ios\", \"android\" ],\n      \"notification\": {\n         \"alert\": \"New Item! - {{ title }}\"\n      }\n   }\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "put": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "PUT /api/feeds/SL_QBv8nT2yw5W9m_kDhQA/ HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n   \"template\": {\n      \"audience\": { \"tag\": \"new_customer\" },\n      \"device_types\": [ \"android\" ],\n      \"notification\": {\n         \"alert\": \"New item! - {{ title }}\"\n      }\n   }\n}\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/lists": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/lists HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nStaticListListingRequest request = StaticListListingRequest.newRequest();\nResponse<StaticListListingResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\nstatic_list = ua.devices.StaticLists(airship)\n\nfor list in static_list:\n    print(\n        list.name,\n        list.description,\n        list.extra,\n        list.created,\n        list.last_updated,\n        list.channel_count,\n        list.status\n    )\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nstatic_lists = UA::StaticLists.new(client: airship)\n\nstatic_lists.each do |static_list|\n    puts(static_list)\nend\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nData-Attribute: lists\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\" : true,\n   \"lists\" : [\n      {\n         \"name\" : \"platinum_members\",\n         \"description\" : \"loyalty program platinum members\",\n         \"extra\" : { \"key\" : \"value\" },\n         \"created\" : \"2020-04-08T20:41:06\",\n         \"last_modified\" : \"2020-05-01T18:00:27\",\n         \"channel_count\": 3145,\n         \"status\": \"ready\"\n      },\n      {\n         \"name\": \"gold_members\",\n         \"description\": \"loyalty program gold member\",\n         \"extra\": { \"key\": \"value\" },\n         \"created\": \"2020-04-08T20:41:06\",\n         \"last_updated\": \"2020-05-01T18:00:27\",\n         \"channel_count\": 678,\n         \"status\": \"ready\"\n      }\n   ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/lists HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n   \"name\" : \"platinum_members\",\n   \"description\" : \"loyalty program platinum members\",\n   \"extra\" : {\n      \"key\" : \"value\"\n   }\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nStaticListRequest request = StaticListRequest.newRequest(\"platinum_members\")\n                .setDescription(\"loyalty program platinum members\")\n                .addExtra(\"key\", \"value\");\n\nResponse<String> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\nstatic_list = ua.devices.StaticList(airship, 'platinum_members')\nstatic_list.description = 'loyalty program platinum members'\nstatic_list.extra = {'key': 'value'}\nresponse = static_list.create()\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nstatic_list = UA::StaticList.new(client: airship)\nstatic_list.name = 'platinum_members'\nstatic_list.create(description: 'loyalty program platinum members')\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nLocation: https://go.urbanairship.com/api/lists/platinum_members\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\" : true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/lists/{list_name}": {
      "delete": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "DELETE /api/lists/platinum_members HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nStaticListDeleteRequest request = StaticListDeleteRequest.newRequest(\"platinum_members\");\nResponse<String> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\nstatic_list = ua.devices.StaticList(airship, 'platinum_members')\nresponse = static_list.delete()\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nstatic_list = UA::StaticList.new(client: airship)\nstatic_list.name = 'platinum_members'\nstatic_list.delete\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 204 No Content\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/lists/platinum_members/ HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nStaticListLookupRequest request = StaticListLookupRequest.newRequest(\"platinum_members\");\n\nResponse<String> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\nstatic_list = ua.devices.StaticList(airship, 'platinum_members')\nresponse = static_list.lookup()\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nstatic_list = UA::StaticList.new(client: airship)\nstatic_list.name = 'platinum_members'\nstatic_list.lookup\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nData-Attribute: static_list\nLink: <https://go.urbanairship.com/api/platinum_members/list/?start=uuid101&limit=100>; rel=next\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\" : true,\n   \"name\" : \"platinum_members\",\n   \"description\" : \"loyalty program platinum members\",\n   \"extra\" : { \"key\" : \"value\" },\n   \"created\" : \"2020-04-08T20:41:06\",\n   \"last_updated\" : \"2020-05-01T18:00:27\",\n   \"channel_count\" : 1000,\n   \"status\" : \"ready\"\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "put": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "PUT /api/lists/platinum_members HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n   \"name\" : \"platinum_members\",\n   \"description\" : \"loyalty program platinum members\",\n   \"extra\" : {\n      \"key\" : \"value\"\n   }\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nStaticListRequest request = StaticListRequest.newUpdateRequest(\"platinum_members\")\n                .setDescription(\"loyalty program platinum members\")\n                .addExtra(\"key\", \"value\");\n\nResponse<String> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\nstatic_list = ua.devices.StaticList(airship, 'platinum_members')\nstatic_list.description = 'loyalty program platinum members'\nstatic_list.extra = {'key': 'value'}\nresponse = static_list.update()\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nstatic_list = UA::StaticList.new(client: airship)\nstatic_list.name = 'platinum_members'\nstatic_list.update(description: 'loyalty program platinum members')\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\" : true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/lists/{list_name}/csv": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/lists/foobar/csv HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+csv; version=3\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\n\ncsv = ua.StaticList.download(airship=airship, list_name=\"foobar\")\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nStaticListDownloadRequest request = StaticListDownloadRequest.newRequest(\"foobar\");\nResponse<String> response = client.execute(request);\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: text/csv\n\nios_channel,6d56ab7e-2c78-4ba9-ab11-d9b664ca2b32\nios_channel,d5ebe607-a3e6-4601-b97e-83ec604223fe\nios_channel,fa599af7-43e4-4862-a570-1470bf6f53ff\nandroid_channel,0e91d0f2-c65d-4b40-b968-b9f8e8b0c987\nandroid_channel,c346a3ce-5754-4d02-8ee5-500ce470a0b7\nandroid_channel,e9a01369-5f74-4167-b660-df84014a2e57\namazon_channel,0356d138-d1d9-4572-b321-e1b67f4cd658\namazon_channel,24dc9a76-45fe-4b17-8ed7-841f96b658ad\namazon_channel,4d6b59f8-6d8c-4151-8b13-cd58d6ac8c6e\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "put": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "PUT /api/lists/platinum_members/csv HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: text/csv\n\nnamed_user,customer-42\nnamed_user,room-27\nios_channel,5i4c91s5-9tg2-k5zc-m592150z5634\nweb_channel,d132f5b7-abcf-4920-aeb3-9132ddac3d5a\nandroid_channel,52b2b587-0152-4134-a8a0-38ae6933c88a\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nFile dataDirectory = new File(\"src/data\");\nString filePath = dataDirectory.getAbsolutePath() + \"/platinum.csv\";\nStaticListUploadRequest request = StaticListUploadRequest.newRequest(\"platinum_members\", filePath);\n\nResponse<String> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\nstatic_list = ua.devices.StaticList(airship, 'platinum_members')\ncsv_file = open('path', 'rb')\nresp = static_list.upload(csv_file)\ncsv_file.close()\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nstatic_list = UA::StaticList.new(client: airship)\nstatic_list.name = 'platinum_members'\nFile.open('csv_file', 'rb') do |csv|\n    static_list.upload(csv_file: csv, gzip: false)\nend\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 202 Accepted\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\" : true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/named_users": {
      "get": [
        {
          "description": "Example: Named User Lookup",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/named_users/?id=user-456 HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nNamedUserListingRequest request = NamedUserListingRequest.newRequest(\"user-456\");\nResponse<NamedUserListingResponse> response = client.execute(request);\nNamedUserView namedUser = response.getBody().get().getNamedUserView().get();\n\n// The named user ID\nString namedUserId = namedUser.getNamedUserId();\n\n// Map of tag groups and the associated sets of tags\nImmutableMap<String, ImmutableSet<String>> namedUserTags = namedUser.getNamedUserTags();\n\n// All channel objects associated with the named user\nImmutableSet<ChannelView> channelViews = namedUser.getChannelViews();\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\nnamed_user = ua.NamedUser(airship, 'user-456')\nresp = named_user.lookup()\nprint(resp)\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nnamed_user = UA::NamedUser.new(client: airship)\nnamed_user.named_user_id = 'user-456'\nuser = named_user.lookup\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n  \"ok\": true,\n  \"named_user\": {\n      \"named_user_id\": \"user-456\",\n      \"tags\": {\n        \"my_fav_tag_group\": [\n            \"tag1\",\n            \"tag2\"\n        ]\n      },\n      \"subscription_lists\": [\n        {\n          \"list_ids\": [\"example_listId-1\", \"example_listId-5\"],\n          \"scope\": \"web\"\n        },\n        {\n          \"list_ids\": [\"example_listId-2\", \"example_listId-3\"],\n          \"scope\": \"app\"\n        },\n        {\n          \"list_ids\": [\"example_listId-2\"],\n          \"scope\": \"web\"\n        },\n        {\n          \"list_ids\": [\"example_listId-3\"],\n          \"scope\": \"email\"\n        },\n        {\n          \"list_ids\": [\"example_listId-4\"],\n          \"scope\": \"sms\"\n        }\n      ],\n      \"attributes\": {\n        \"item_purchased\": \"Fur removal tool\",\n        \"cats_name\": \"Sammy\",\n        \"pets_age\": 12\n      },\n      \"user_attributes\": {\n        \"ua_country\": \"US\",\n        \"ua_language\": \"en\",\n        \"ua_tz\": \"America/Los_Angeles\"\n      },\n      \"channels\": [\n        {\n            \"channel_id\": \"dceafd02-b852-4305-83df-98b65fa40dd4\",\n            \"device_type\": \"ios\",\n            \"installed\": true,\n            \"opt_in\": true,\n            \"push_address\": \"FFFF\",\n            \"created\": \"2020-04-08T20:41:06\",\n            \"last_registration\": \"2020-05-01T18:00:27\",\n            \"tags\": [\n              \"meow\"\n            ]\n        }\n      ]\n  }\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Example: Named User Listing",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/named_users HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nNamedUserListingRequest request = NamedUserListingRequest.newRequest();\nResponse<NamedUserListingResponse> response = client.execute(request);\nImmutableList<NamedUserView> namedUsers = response.getBody().get().getNamedUserViews().get();\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\nnamed_user_list = ua.NamedUserList(airship)\n\nfor n in named_user_list:\n    print(n.named_user_id)\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nnamed_user_list = UA::NamedUserList.new(client: airship)\nnamed_user_list.each do |named_user|\n    puts(named_user)\nend\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nData-Attribute: named_users\nLink: <https://go.urbanairship.com/api/named_users?start=user-1234>; rel=next\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"next_page\": \"https://go.urbanairship.com/api/named_users?start=user-1234\",\n   \"named_users\": [\n      {\n         \"named_user_id\": \"user-id-1234\",\n         \"tags\": {\n            \"my_fav_tag_group\": [\"tag1\", \"tag2\"]\n         },\n         \"subscription_lists\": [\n         {\n            \"list_ids\": [\"example_listId-1\", \"example_listId-5\"],\n            \"scope\": \"web\"\n         },\n         {\n            \"list_ids\": [\"example_listId-2\", \"example_listId-3\"],\n            \"scope\": \"app\"\n         },\n         {\n            \"list_ids\": [\"example_listId-2\"],\n            \"scope\": \"web\"\n         },\n         {\n            \"list_ids\": [\"example_listId-3\"],\n            \"scope\": \"email\"\n         }\n         ],\n         \"attributes\":{\n            \"item_purchased\":\"Fur removal tool\",\n            \"cats_name\":\"fluffy butt\",\n            \"pets_age\":2\n         },\n         \"user_attributes\": {\n            \"ua_country\": \"US\",\n            \"ua_language\": \"en\",\n            \"ua_tz\": \"America/Los_Angeles\"\n         },\n         \"channels\": [\n            {\n               \"channel_id\": \"dceafd02-b852-4305-83df-98b65fa40dd5\",\n               \"device_type\": \"ios\",\n               \"installed\": true,\n               \"opt_in\": true,\n               \"push_address\": \"FFFF\",\n               \"created\": \"2020-04-08T20:41:06\",\n               \"last_registration\": \"2020-05-01T18:00:27\",\n               \"alias\": \"xxxx\",\n               \"tags\": [\"asdf\"],\n               \"ios\": {\n                  \"badge\": 0,\n                  \"quiettime\": {\n                     \"start\": \"22:00\",\n                     \"end\": \"06:00\"\n                  },\n                  \"tz\": \"America/Los_Angeles\"\n               }\n            }\n         ]\n      }\n   ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/named_users/associate": {
      "post": [
        {
          "description": "Example: Associate an iOS channel with a named user",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/named_users/associate HTTP/1.1\nAuthorization: Basic <application or master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n   \"channel_id\": \"df6a6b50-9843-0304-d5a5-743f246a4946\",\n   \"device_type\": \"ios\",\n   \"named_user_id\": \"user-id-1234\"\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nNamedUserRequest request = NamedUserRequest.newAssociationRequest()\n        .setChannel(\"df6a6b50-9843-0304-d5a5-743f246a4946\", ChannelType.IOS)\n        .setNamedUserId(\"user-id-1234\");\n\nResponse<String> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\nnamed_user = ua.NamedUser(airship, 'user-id-1234')\nresp = named_user.associate('df6a6b50-9843-0304-d5a5-743f246a4946', 'ios')\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nnamed_user = UA::NamedUser.new(client: airship)\nnamed_user.named_user_id = 'user-id-1234'\nnamed_user.associate(channel_id: 'df6a6b50-9843-0304-d5a5-743f246a4946', device_type: 'ios')\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Example: Associate a web channel with named user (do not declare device type)",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/named_users/associate HTTP/1.1\nAuthorization: Basic <application or master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n   \"channel_id\": \"wf6a6b50-9843-0304-d5a5-743f246a4946\",\n   \"named_user_id\": \"user-id-1234\"\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nNamedUserRequest request = NamedUserRequest.newAssociationRequest()\n        .setChannel(\"wf6a6b50-9843-0304-d5a5-743f246a4946\", ChannelType.WEB)\n        .setNamedUserId(\"user-id-1234\");\n\nResponse<String> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\nnamed_user = ua.NamedUser(airship, 'user-id-1234')\nresp = named_user.associate('wf6a6b50-9843-0304-d5a5-743f246a4946', 'web')\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nnamed_user = UA::NamedUser.new(client: airship)\nnamed_user.named_user_id = 'user-id-1234'\nnamed_user.associate(channel_id: 'wf6a6b50-9843-0304-d5a5-743f246a4946')\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Example: Associate an email channel with named user",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/named_users/associate HTTP/1.1\nAuthorization: Basic <application or master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n   \"email_address\": \"monopoly.man@boardwalk.com\",\n   \"named_user_id\": \"user-id-1234\"\n}\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\nnamed_user = ua.NamedUser(airship=airship, named_user_id=\"user-id-1234\")\nresp = named_user.email_associate(email_address=\"monopoly.man@boardwalk.com\")\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nNamedUserRequest request = NamedUserRequest.newAssociationRequest()\n        .setChannel(\"em6a6b50-9843-0304-d5a5-743f246a4946\", ChannelType.EMAIL)\n        .setNamedUserId(\"user-id-1234\");\n\nResponse<String> response = client.execute(request);\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nnamed_user = UA::NamedUser.new(client: airship)\nnamed_user.named_user_id = 'user-id-1234'\nnamed_user.associate(channel_id: 'em6a6b50-9843-0304-d5a5-743f246a4946')\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/named_users/disassociate": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/named_users/disassociate HTTP/1.1\nAuthorization: Basic <application or master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n   \"channel_id\": \"df6a6b50-9843-0304-d5a5-743f246a4946\",\n   \"device_type\": \"ios\",\n   \"named_user_id\": \"user-id-1234\"\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nNamedUserRequest request = NamedUserRequest.newDisassociationRequest()\n        .setChannel(\"df6a6b50-9843-0304-d5a5-743f246a4946\", ChannelType.IOS);\n\nResponse<String> response = client.execute(request);\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nnamed_user = UA::NamedUser.new(client: airship)\nnamed_user.disassociate(channel_id: 'df6a6b50-9843-0304-d5a5-743f246a4946', device_type: 'ios')\n"
            },
            {
              "lang": "python",
              "source": "\nimport urbanairship as ua\n\nairship = ua.Airship('app_key', 'master_secret')\nnamed_user = ua.NamedUser(airship, 'user-id-1234')\nresp = named_user.disassociate('df6a6b50-9843-0304-d5a5-743f246a4946', 'ios')\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Example: Disassociate an email channel from named user",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/named_users/disassociate HTTP/1.1\nAuthorization: Basic <application or master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n   \"email_address\": \"monopoly.man@gotojail.com\",\n   \"named_user_id\": \"user-id-1234\"\n}\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\nnamed_user = ua.NamedUser(airship=airship, named_user_id=\"user-id-1234\")\nresp = named_user.email_disassociate(email_address=\"monopoly.man@gotojail.com\")\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nNamedUserRequest request = NamedUserRequest.newDisassociationRequest()\n        .setChannel(\"em6a6b50-9843-0304-d5a5-743f246a4946\", ChannelType.EMAIL)\n        .setNamedUserId(\"user-id-1234\");\n\nResponse<String> response = client.execute(request);\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nnamed_user = UA::NamedUser.new(client: airship)\nnamed_user.disassociate(channel_id: 'em6a6b50-9843-0304-d5a5-743f246a4946')\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/named_users/scoped/{named_user_id}": {
      "post": [
        {
          "description": "Example: Named User Scoped Batch Operations\n",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/named_users/scoped/b8f9b663-0a3b-cf45-587a-be880946e881 HTTP/1.1\nAuthorization: Basic <application or master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n   \"scoped\": [\n      {\n          \"scope\": [\"app\"],\n          \"subscription_lists\": {\n              \"subscribe\": [\"stickers\", \"gifs\"],\n              \"unsubscribe\": [\"cookies\"]\n          }\n      },\n      {\n          \"scope\": [\"web\"],\n          \"subscription_lists\": {\n              \"subscribe\": [\"daily_snacks\", \"brunch\"],\n              \"unsubscribe\": [\"promotions\"]\n          }\n      }\n   ]\n}\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/named_users/tags": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/named_users/tags HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n  \"audience\": {\n      \"named_user_id\": [\n        \"user-1\",\n        \"user-2\",\n        \"user-3\"\n      ]\n  },\n  \"add\": {\n      \"crm\": [\n        \"tag1\",\n        \"tag2\",\n        \"tag3\"\n      ],\n      \"loyalty\": [\n        \"tag1\",\n        \"tag4\",\n        \"tag5\"\n      ]\n  },\n  \"remove\": {\n      \"loyalty\": [\n        \"tag6\",\n        \"tag7\"\n      ]\n  }\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nNamedUserTagRequest request = NamedUserTagRequest.newRequest()\n        .addNamedUsers(\"user-1\", \"user-2\", \"user-3\")\n        .addTags(\"crm\", ImmutableSet.of(\"tag1\", \"tag2\", \"tag3\"))\n        .addTags(\"loyalty\", ImmutableSet.of(\"tag1\", \"tag4\", \"tag5\"))\n        .removeTags(\"loyalty\", ImmutableSet.of(\"tag6\", \"tag7\"));\n\nResponse<String> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\nnamed_user = ua.NamedUser(airship, 'user-1')\n\nresp1 = named_user.tag(\n    'loyalty',\n    add=['tag2', 'tag3', 'tag4'],\n    remove='tag1'\n)\n\nresp2 = named_user.tag(\n    'crm',\n    set=['tag5', 'tag6']\n)\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nnamed_user_tags = UA::NamedUserTags.new(client: airship)\nnamed_user_ids = ['user-1', 'user-2', 'user-3']\nnamed_user_tags.set_audience(user_ids: named_user_ids)\nnamed_user_tags.add(group_name: 'crm', tags: ['tag1', 'tag2', 'tag3'])\nnamed_user_tags.remove(group_name: 'loyalty', tags: ['tag6', 'tag7'])\nnamed_user_tags.send_request\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/named_users/uninstall": {
      "post": [
        {
          "description": "Example: Delete all users and their associated channels",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/named_users/uninstall HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n   \"named_user_id\": [\"user-id-1234\",\"user-id-5678\"]\n}\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\n\nresponse = ua.NamedUser.uninstall(\n            airship=airship, \n            named_users=[\"user-id-1234\", \"user-id-5678\"]\n          )\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nnamed_user_uninstall = UA::NamedUserUninstaller.new(client: airship)\nnamed_user_uninstall.named_user_ids = ['user-id-1234']\nnamed_user_uninstall.uninstall\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nNamedUserUninstallRequest namedUserUninstallRequest = NamedUserUninstallRequest\n        .newUninstallRequest(ImmutableList.of(\"user-id-1234\",\"user-id-5678\"));\n\nResponse<String> response = client.execute(namedUserUninstallRequest);\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/named_users/{named_user_id}": {
      "post": [
        {
          "description": "Create a named user by associating an email and sms channel and setting tags and attributes.\n",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/named_users/john_doe HTTP/1.1\nAuthorization: Basic <application or master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n  \"associate\": [\n      {\n        \"email_address\": \"john@company.com\"\n      },\n      {\n        \"channel_id\": \"f5346fa3-99f1-496d-be37-2895ef58f5a5\",\n        \"device_type\": \"sms\"\n      }\n  ],\n  \"tags\": {\n      \"set\": {\n          \"subscription_status\": [\"gold\"],\n          \"favorites\" : [\"sports\", \"stocks\"]\n      }\n  },\n  \"attributes\": [\n    {\n      \"action\": \"set\",\n      \"key\": \"name\",\n      \"value\": \"John\"\n    }\n  ]\n}\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\n\nassociate = [\n  {\"email_address\": \"john@company.com\"}, \n  {\"channel_id\": \"f5346fa3-99f1-496d-be37-2895ef58f5a5\", \"device_type\": \"sms\"}\n]\ntags = {\n  \"set\": {\n      \"subscription_status\": [\"gold\"],\n      \"favorites\" : [\"sports\", \"stocks\"]\n      }\n}\nattributes = [\n    {\n      \"action\": \"set\",\n      \"key\": \"name\",\n      \"value\": \"John\"\n    }\n  ]\n\nnamed_user = ua.NamedUser(\n  airship=airship, \n  named_user_id=\"john_doe\"\n)\n\nresponse = named_user.update(\n  associate=associate, \n  tags=tags, \n  attributes=attributes\n)\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nNamedUserUpdateChannel namedUserUpdateChannel = NamedUserUpdateChannel.newBuilder()\n        .addChannel(NamedUserUpdateDeviceType.ANDROID_CHANNEL, \"aa2ae18c-f4b0-48ac-a859-55f26d2a7439\")\n        .build();\n\nAttribute lastName = Attribute.newBuilder()\n        .setAction(AttributeAction.SET)\n        .setKey(\"pseudo\")\n        .setValue(\"Pataki\")\n        .build();\n\nNamedUserUpdatePayload namedUserUpdatePayload = NamedUserUpdatePayload.newBuilder()\n        .addAttribute(lastName)\n        .addTags(\"go\", List.of(\"test1\",\"test2\"))\n        .removeTags(\"go\",List.of(\"test3\",\"test4\"))\n        .addNamedUserUpdateChannel(namedUserUpdateChannel)\n        .setAction(NamedUserUpdateChannelAction.ASSOCIATE)\n        .build();\n\nNamedUserUpdateRequest request = NamedUserUpdateRequest.newRequest(\"john\", namedUserUpdatePayload);\nResponse<NamedUserUpdateResponse> response = client.execute(request);\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/named_users/{named_user_id}/attributes": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/named_users/my_named_user/attributes HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n    \"attributes\": [\n        {\n            \"action\": \"set\",\n            \"key\": \"firstName\",\n            \"value\": \"Gyuri\",\n            \"timestamp\": \"2020-09-19 12:00:00\"\n        },\n        {\n            \"action\": \"remove\",\n            \"key\": \"birthDate\",\n            \"timestamp\": \"2020-09-19 12:00:00\"\n        },\n        {\n            \"action\": \"set\",\n            \"key\": \"lastName\",\n            \"value\": \"Pataki\",\n            \"timestamp\": \"2020-09-19 12:00:00\"\n        }\n    ]\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nAttribute firstName = Attribute.newBuilder()\n        .setAction(AttributeAction.SET)\n        .setKey(\"firstName\")\n        .setValue(\"Gyuri\")\n        .setTimeStamp(DateTime.parse(\"2020-09-19T12:00:00Z\"))\n        .build();\n\nAttribute birthDate = Attribute.newBuilder()\n        .setAction(AttributeAction.REMOVE)\n        .setKey(\"birthDate\")\n        .setTimeStamp(DateTime.parse(\"2020-09-19T12:00:00Z\"))\n        .build();\n\nAttribute lastName = Attribute.newBuilder()\n        .setAction(AttributeAction.SET)\n        .setKey(\"lastName\")\n        .setValue(\"Pataki\")\n        .setTimeStamp(DateTime.parse(\"2020-09-19T12:00:00Z\"))\n        .build();\n\nNamedUserAttributePayload payload = NamedUserAttributePayload.newBuilder()\n        .addAttribute(firstName)\n        .addAttribute(birthDate)\n        .addAttribute(lastName)\n        .build();\n\nNamedUserAttributeRequest request = NamedUserAttributeRequest.newRequest(\"my_named_user\", payload);\nResponse<NamedUserAttributeResponse> response = client.execute(request);\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/pipelines": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/pipelines/ HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\nairship = ua.Airship('<app key>', '<master secret>')\n\nfor automation in ua.Automation(airship).list_automations():\n  print(automation)\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nautomation = UA::Automation.new(client: airship)\nautomation.limit = 5\nautomation.list_automations\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true,\n    \"pipelines\": [\n      {\n          \"creation_time\": \"2020-03-20T18:37:23\",\n          \"enabled\": true,\n          \"immediate_trigger\": {\n            \"tag_added\": { \"tag\": \"bought_shoes\" }\n          },\n          \"last_modified_time\": \"2020-03-20T19:35:12\",\n          \"name\": \"Shoe buyers\",\n          \"outcome\": {\n            \"push\": {\n                \"audience\": \"triggered\",\n                \"device_types\": [ \"android\" ],\n                \"notification\": { \"alert\": \"So you like shoes, huh?\" }\n            }\n          },\n          \"status\": \"live\",\n          \"uid\": \"3987f98s-89s3-cx98-8z89-89adjkl29zds\",\n          \"url\": \"https://go.urbanairship.com/api/pipelines/3987f98s-89s3-cx98-8z89-89adjkl29zds\"\n      },\n      {\n          \"...\"\n      }\n    ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/pipelines HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n    \"name\":\"The Darkest Pipeline\",\n    \"enabled\":true,\n    \"immediate_trigger\":\"first_open\",\n    \"outcome\":{\n      \"push\":{\n          \"audience\":\"triggered\",\n          \"device_types\":[\n            \"ios\",\n            \"android\",\n            \"web\"\n          ],\n          \"notification\":{\n            \"alert\":\"Cool goatee, Abed\"\n          }\n      }\n    },\n    \"timing\":{\n      \"delay\":{\n          \"seconds\":7200\n      },\n      \"schedule\":{\n          \"type\":\"local\",\n          \"miss_behavior\":\"wait\",\n          \"dayparts\":[\n            {\n                \"days_of_week\":[\n                  \"thursday\"\n                ],\n                \"allowed_times\":[\n                  {\n                      \"preferred\":\"21:30:00\"\n                  }\n                ]\n            }\n          ]\n      }\n    }\n}\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\nairship = ua.Airship('<app key>', '<master secret>')\n\nautomation = ua.Automation(airship)\npipeline = ua.Pipeline(\n    name='The Darkest Pipeline',\n    enabled=True,\n    immediate_trigger=['first_open'],\n    outcome={\n        'audience': 'triggered',\n        'device_types': ua.device_types('ios', 'android', 'web'),\n        'notification': ua.notification(alert='Cool goatee, Abed')\n    },\n    timing={\n        delay': {'seconds': 7200},\n        'schedule': {\n            'type': 'local',\n            'miss_behavior': 'wait',\n            'dayparts': [{\n                'days_of_week': ['thursday'],\n                'allowed_times': [\n                    {'preferred': '21:30:00'}\n                ]\n            }]\n        }\n    }\n)\nresponse = automation.create(pipeline.payload)\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\npipeline = UA::Pipeline.new(client: airship)\npipeline.enabled = true\npipeline.immediate_trigger = \"first_open\"\npipeline.outcome = {\n    \"push\": {\n        \"audience\": \"triggered\",\n        \"device_types\": ['ios','android','web'],\n        \"notification\": {\n            \"alert\": \"Cool goatee, Abed\"\n        }\n    }\n}\nautomation = UA::Automation.new(client: airship)\nautomation.pipeline_object = pipeline.payload\ndetails = automation.create_automation\nputs(details)\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 201 Created\nContent-Length: 123\nData-Attribute: pipeline_urls\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true,\n    \"operation_id\": \"86ad9239-373d-d0a5-d5d8-04fed18f79bc\",\n    \"pipeline_urls\": [\n      \"https://go.urbanairship/api/pipelines/86ad9239-373d-d0a5-d5d8-04fed18f79bc\"\n    ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/pipelines/deleted": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/pipelines/deleted/ HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\nairship = ua.Airship('<app key>', '<master secret>')\nresponse = ua.Automation(airship).list_deleted_automations()\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nautomation = UA::Automation.new(client: airship)\nautomation.start = 2020-11-23\nautomation.list_deleted_automations\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true,\n    \"pipelines\": [\n      {\n          \"deletion_time\": \"2020-03-31T20:54:45\",\n          \"pipeline_id\": \"0sdicj23-fasc-4b2f-zxcv-0baf934f0d69\"\n      },\n      {\n          \"...\"\n      }\n    ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/pipelines/validate": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/pipelines/validate HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n    \"name\":\"The Darkest Pipeline\",\n    \"enabled\":true,\n    \"immediate_trigger\":\"first_open\",\n    \"outcome\":{\n      \"push\":{\n          \"audience\":\"triggered\",\n          \"device_types\":[\n            \"ios\",\n            \"android\"\n          ],\n          \"notification\":{\n            \"alert\":\"Cool goatee, Abed\"\n          }\n      }\n    },\n    \"timing\":{\n      \"delay\":{\n          \"seconds\":7200\n      },\n      \"schedule\":{\n          \"type\":\"local\",\n          \"miss_behavior\":\"wait\",\n          \"dayparts\":[\n            {\n                \"days_of_week\":[\n                  \"thursday\"\n                ],\n                \"allowed_times\":[\n                  {\n                      \"preferred\":\"21:30:00\"\n                  }\n                ]\n            }\n          ]\n      }\n    }\n}\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\nairship = ua.Airship('<app key>', '<master secret>')\n\nautomation = ua.Automation(airship)\npipeline = ua.Pipeline(\n    name='The Darkest Pipeline',\n    enabled=True,\n    immediate_trigger=['first_open'],\n    outcome={\n        'audience': 'triggered',\n        'device_types': ua.device_types('ios', 'android', 'web'),\n        'notification': ua.notification(alert='Cool goatee, Abed')\n    },\n    timing={\n        delay': {'seconds': 7200},\n        'schedule': {\n            'type': 'local',\n            'miss_behavior': 'wait',\n            'dayparts': [{\n                'days_of_week': ['thursday'],\n                'allowed_times': [\n                    {'preferred': '21:30:00'}\n                ]\n            }]\n        }\n    }\n)\nresponse = automation.validate(pipeline.payload)\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\npipeline = UA::Pipeline.new(client: airship)\npipeline.enabled = true\npipeline.immediate_trigger = \"first_open\"\npipeline.outcome = {\n    \"push\": {\n        \"audience\": \"triggered\",\n        \"device_types\": ['ios','android','web'],\n        \"notification\": {\n            \"alert\": \"Cool goatee, Abed\"\n        }\n    }\n}\nautomation = UA::Automation.new(client: airship)\nautomation.pipeline_object = pipeline.payload\nautomation.validate_automation\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Length: 11\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/pipelines/{pipeline_id}": {
      "delete": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "DELETE /api/pipelines/0f927674-918c-31ef-51ca-e96fdd234da4 HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\nairship = ua.Airship('<app key>', '<master secret>')\nresponse = ua.Automation(airship).delete('0f927674-918c-31ef-51ca-e96fdd234da4')\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nautomation = UA::Automation.new(client: airship)\nautomation.pipeline_id = '0f927674-918c-31ef-51ca-e96fdd234da4'\nautomation.delete_automation\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 204 No Content\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/pipelines/4d3ff1fd-9ce6-5ea4-5dc9-5ccbd38597f4 HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\nairship = ua.Airship('<app key>', '<master secret>')\nresponse = ua.Automation(airship).lookup('4d3ff1fd-9ce6-5ea4-5dc9-5ccbd38597f4')\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nautomation = UA::Automation.new(client: airship)\nautomation.pipeline_id = '4d3ff1fd-9ce6-5ea4-5dc9-5ccbd38597f4'\nautomation.lookup_automation\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true,\n    \"pipeline\": {\n      \"creation_time\": \"2020-02-14T19:19:19\",\n      \"enabled\": true,\n      \"immediate_trigger\": { \"tag_added\": \"new_customer\" },\n      \"last_modified_time\": \"2020-03-01T12:12:54\",\n      \"name\": \"New customer\",\n      \"outcome\": {\n          \"push\": {\n            \"audience\": \"triggered\",\n            \"device_types\": [ \"ios\", \"android\" ],\n            \"notification\": { \"alert\": \"Hello new customer!\" }\n          }\n      },\n      \"status\": \"live\",\n      \"uid\": \"86ad9239-373d-d0a5-d5d8-04fed18f79bc\",\n      \"url\": \"https://go.urbanairship/api/pipelines/86ad9239-373d-d0a5-d5d8-04fed18f79bc\"\n    }\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "put": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "PUT /api/pipelines/0f927674-918c-31ef-51ca-e96fdd234da4 HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json;\n\n{\n    \"enabled\": true,\n    \"immediate_trigger\": {\n      \"tag_added\": \"new_customer\"\n    },\n    \"outcome\": {\n      \"push\": {\n          \"audience\": \"triggered\",\n          \"device_types\": [\n            \"ios\"\n          ],\n          \"notification\": {\n            \"alert\": \"Hello new customer!\"\n          }\n      }\n    }\n}\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\nairship = ua.Airship('<app key>', '<master secret>')\n\nautomation = ua.Automation(airship)\npipeline = ua.Pipeline(\n    enabled=True,\n    immediate_trigger={\n        'tag_added': 'new_customer'\n    },\n    outcome={\n        'audience': 'triggered',\n        'device_types': ua.device_types('ios'),\n        'notification': ua.notification(alert='Hello new customer!')\n    }\n)\nresponse = automation.update(\n    pipeline_id='0f927674-918c-31ef-51ca-e96fdd234da4',\n    pipeline=pipeline.payload\n)\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\npipeline = UA::Pipeline.new(client: airship)\npipeline.enabled = true\npipeline.immediate_trigger = {\n  \"tag_added\": {\n     \"tag\": \"new_customer\",\n     \"group\": \"crm\"\n    }\n}\npipeline.outcome = {\n  \"push\": {\n     \"audience\": \"triggered\",\n     \"device_types\": [\"ios\"],\n     \"notification\": {\n         \"alert\": \"Hello new customer!\"\n        }\n    }\n}\nautomation = UA::Automation.new(client: airship)\nautomation.pipeline_id = '0f927674-918c-31ef-51ca-e96fdd234da4'\nautomation.pipeline_object = pipeline.payload\nautomation.update_automation\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/push": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/push HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n    \"audience\": {\n        \"ios_channel\": \"9c36e8c7-5a73-47c0-9716-99fd3d4197d5\"\n    },\n    \"notification\": {\n        \"alert\": \"Hello!\"\n    },\n    \"device_types\": [ \"ios\" ]\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nPushPayload payload = PushPayload.newBuilder()\n        .setAudience(Selectors.iosChannel(\"9c36e8c7-5a73-47c0-9716-99fd3d4197d5\"))\n        .setNotification(Notifications.alert(\"Hello!\"))\n        .setDeviceTypes(DeviceTypeData.of(DeviceType.IOS))\n        .build();\n\nPushRequest request = PushRequest.newRequest(payload);\nResponse<PushResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship(key=\"<app key>\", secret=\"<master secret>\", location=\"<us|eu>\")\n\npush = airship.create_push()\npush.audience = ua.ios_channel('9c36e8c7-5a73-47c0-9716-99fd3d4197d5')\npush.notification = ua.notification(alert='Hello!')\npush.device_types = ua.device_types('ios')\npush.send()\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\npush = airship.create_push\npush.audience = UA.or( UA.ios_channel('9c36e8c7-5a73-47c0-9716-99fd3d4197d5'))\npush.notification = UA.notification(alert: 'Hello!')\npush.device_types = UA.device_types(['ios'])\npush.send_push\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 202 Accepted\nData-Attribute: push_ids\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true,\n    \"operation_id\": \"df6a6b50-9843-0304-d5a5-743f246a4946\",\n    \"push_ids\": [\n        \"9d78a53b-b16a-c58f-b78d-181d5e242078\"\n    ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Example Push with Localizations",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/push HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n   \"device_types\": [ \"ios\", \"android\" ],\n   \"audience\": {\n      \"tag\": \"needs_a_greeting\",\n      \"group\": \"new_customer\"\n   },\n   \"notification\": {\n      \"alert\": \"Hi!\"\n   },\n   \"localizations\": [\n       {\n          \"language\": \"de\",\n          \"country\": \"AT\",\n          \"notification\": {\n             \"alert\": \"Grüss Gott\"\n          }\n       },\n       {\n          \"language\": \"de\",\n          \"country\": \"DE\",\n          \"notification\": {\n             \"alert\": \"Guten Tag\"\n          }\n       }\n    ]\n }\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship(key=\"<app key>\", secret=\"<master secret>\", location=\"<us|eu>\")\n\npush = airship.create_push()\n\npush.audience = ua.tag_group(tag_group=\"new_customer\", tag=\"needs_a_greeting\")\npush.notification = ua.notification(alert='Hello!')\npush.localizations = [\n   ua.localization(country='at', language='de', notification=ua.notification(alert=\"Grüss Gott\")),\n   ua.localization(country='de', language='de', notification=ua.notification(alert=\"Guten Tag\")),\n]\npush.device_types = ua.device_types('ios')\npush.send()\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nLocalization localization = Localization.newBuilder()\n        .setCountry(\"AT\")\n        .setLanguage(\"de\")\n        .setNotification(Notifications.alert(\"Grüss Gott\"))\n        .build();\n\nPushPayload payload = PushPayload.newBuilder()\n        .setAudience(Selectors.or(Selectors.tagWithGroup(\"needs_a_greeting\", \"new_customer\")))\n        .addLocalization(localization)\n        .setNotification(Notifications.alert(\"Hi!\"))\n        .setDeviceTypes(DeviceTypeData.of(DeviceType.IOS, DeviceType.ANDROID))\n        .build();\n\nPushRequest request = PushRequest.newRequest(payload);\nResponse<PushResponse> response = client.execute(request);\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\npush = airship.create_push\npush.audience = UA.tag(\"needs_a_greeting\", group:'new_customer')\npush.notification = UA.notification(alert: 'Hi!')\npush.device_types = UA.device_types(['ios'])\npush.localizations = {\n  \"language\": \"de\",\n  \"country\": \"AT\",\n  \"notification\": {\n  \"alert\": \"Grüss Gott\"\n  }\n}\npush.send_push\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 202 Accepted\nData-Attribute: push_ids\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true,\n    \"operation_id\": \"df6a6b50-9843-0304-d5a5-743f246a4946\",\n    \"push_ids\": [\n        \"9d78a53b-b16a-c58f-b78d-181d5e242078\",\n        \"1cbfbfa2-08d1-92c2-7119-f8f7f670f5f6\",\n        \"939c3796-a755-413b-a36b-3026b1f92df8\"\n    ],\n    \"localized_ids\": [\n       \"1a38a2ba-c174-d32f-d01b-481a5d241934\"\n    ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Example Email being sent using Push API with Template ID",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/push HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n    \"audience\": {\n        \"tag\": \"needs_a_greeting\",\n        \"group\": \"new_customer\"\n    },\n    \"device_types\": [\n        \"email\"\n    ],\n    \"notification\": {\n      \"email\": {\n        \"message_type\": \"commercial\",\n        \"reply_to\": \"no-reply@airship.com\",\n        \"sender_address\": \"team@airship.com\",\n        \"sender_name\": \"Airship\",\n        \"template\": {\n            \"template_id\": \"876624ff-0120-4364-bf02-dba3d0cb5b85\"\n        }\n      }\n    }\n}\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 202 Accepted\nData-Attribute: push_ids\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true,\n    \"operation_id\": \"be97b696-8d6b-4aec-ac50-c9cfc4be57d6\",\n    \"push_ids\": [\n        \"72ce9ade-aa71-4fbe-b960-246f1a2ca9ee\"\n    ],\n    \"message_ids\": [],\n    \"content_urls\": [],\n    \"localized_ids\": []\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/push/validate": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/push/validate HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n    \"audience\": {\n        \"ios_channel\": \"9c36e8c7-5a73-47c0-9716-99fd3d4197d5\"\n    },\n    \"notification\": {\n        \"alert\": \"Hello!\"\n    },\n    \"device_types\": [ \"ios\" ]\n}\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship(key=\"<app key>\", secret=\"<master secret>\", location=\"<us|eu>\")\n\npush = airship.create_push()\npush.audience = ua.ios_channel('9c36e8c7-5a73-47c0-9716-99fd3d4197d5')\npush.notification = ua.notification(alert='Hello!')\npush.device_types = ua.device_types('ios')\npush.validate()\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nPushPayload payload = PushPayload.newBuilder()\n        .setAudience(Selectors.iosChannel(\"9c36e8c7-5a73-47c0-9716-99fd3d4197d5\"))\n        .setNotification(Notifications.alert(\"Hello!\"))\n        .setDeviceTypes(DeviceTypeData.of(DeviceType.IOS))\n        .build();\n\nPushRequest request = PushRequest.newRequest(payload).setValidateOnly(true);\nResponse<PushResponse> response = client.execute(request);\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/regions": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/regions/?limit=100&start=100 HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nData-Attribute: regions\nLink: <https://go.urbanairship.com/api/regions?limit=100&start=100>; rel=next\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\": true,\n   \"next_page\": \"https://go.urbanairship.com/api/regions?limit=100&start=100\",\n   \"count\": 100,\n   \"regions\": [\n       {\n           \"region_id\": \"abe5deb3-01d0-436e-8c5d-94b6421a01e0\",\n           \"name\": \"My Favorite Place\",\n           \"created_at\": \"2020-06-09T12:34:56\",\n           \"updated_at\": \"2020-06-09T12:34:56\",\n           \"geofence\": {\n               \"type\": \"POLYGON\",\n               \"points\": [\n                   {\n                       \"latitude\": 90.0,\n                       \"longitude\": 120.0\n                   },\n                   {\n                       \"latitude\": 45.0,\n                       \"longitude\": 120.0\n                   },\n                   {\n                       \"latitude\": 0.0,\n                       \"longitude\": 0.0\n                   }\n               ]\n           },\n           \"beacons\": [\n               {\n                   \"name\": \"entryway\",\n                   \"id\": \"VLSHZAOEXOFCMLDVTKFQ\"\n               },\n               {\n                   \"name\": \"Exhibit A\",\n                   \"id\": \"ZAQYMNOZKRFCRPYEUCZI\"\n               }\n           ],\n           \"attributes\": {\n               \"store_name\": \"Tonali's Donuts\"\n           },\n           \"source_info\": {\n               \"source\": \"GIMBAL\",\n               \"region_id\": \"C56654BC0C3243D6A4B7A3673560D6F8\",\n               \"vendor_href\": \"https://manager.gimbal.com/api/v2/places/C56654BC0C3243D6A4B7A3673560D6F8\"\n           }\n       }\n   ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/regions/{region_id}": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/regions/7d4d9a5c-eff5-40f2-b648-4352c166e878 HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nData-Attribute: region\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true,\n    \"region\": {\n        \"region_id\": \"7dbd9a5c-eff5-40f2-b648-4352c1668878\",\n        \"created_at\": \"2020-08-24T23:15:22.900\",\n        \"updated_at\": \"2020-08-24T23:15:22.900\",\n        \"name\": \"Alberta Park\",\n        \"source_info\": {\n            \"source\": \"GIMBAL\",\n            \"region_id\": \"C56654BC0C3243D6A4B7A3673560D6F8\",\n            \"vendor_href\": \"https://manager.gimbal.com/api/v2/places/C56654BC0C3243D6A4B7A3673560D6F8\"\n        },\n        \"geofence\": {\n            \"type\": \"CIRCLE\",\n            \"center\": {\n                \"latitude\": 45.56447530000002,\n                \"longitude\": -122.64461097354126\n            },\n            \"radius\": 200\n        },\n        \"attributes\": {\n             \"park_name\": \"alberta\",\n             \"type\": \"park\"\n        }\n    }\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/reports/devices": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/reports/devices HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nDevicesReportRequest request = DevicesReportRequest.newRequest()\n        .setDate(DateTime.parse(\"2020-08-28T10:34:22Z\"));\n\nResponse<DevicesReportResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "from datetime import datetime\nimport urbanairship as ua\nairship = ua.Airship('<app key>', '<master secret>')\n\ndate = datetime(2020, 8, 28)\nresponse = ua.reports.DevicesReport(airship).get(date)\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nd = UA::DevicesReport.new(client: airship)\ndevices = d.get(date: '2020/08/28')\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"total_unique_devices\": 13186,\n    \"date_closed\": \"2020-08-28 00:00:00\",\n    \"date_computed\": \"2020-08-29 13:30:45\",\n    \"counts\": {\n        \"ios\": {\n            \"unique_devices\": 231,\n            \"opted_in\": 142,\n            \"opted_out\": 89,\n            \"uninstalled\": 2096\n        },\n        \"android\": {\n            \"unique_devices\": 11795,\n            \"opted_in\": 226,\n            \"opted_out\": 11569,\n            \"uninstalled\": 1069\n        },\n        \"amazon\": {\n            \"unique_devices\": 29,\n            \"opted_in\": 22,\n            \"opted_out\": 7,\n            \"uninstalled\": 9\n        },\n        \"sms\": {\n            \"unique_devices\": 26,\n            \"opted_in\": 23,\n            \"opted_out\": 3,\n            \"uninstalled\": 17\n        }\n    }\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/reports/events": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/reports/events?start=2020-08-01T10:00:00.000Z&end=2020-08-15T20:00:00.000Z&precision=MONTHLY&page_size=20 HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nDateTime startDate = DateTime.parse(\"2022-01-01T10:00:00\");\nDateTime endDate =  DateTime.parse(\"2023-01-01T10:00:00\");\n\nCustomEventsDetailsListingRequest customEventsDetailsListingRequest = CustomEventsDetailsListingRequest\n        .newRequest(startDate, endDate)\n        .setPageSize(10)\n        .setPrecision(Precision.MONTHLY)\n        .setPage(2);\n\nResponse<CustomEventsDetailsListingResponse> response = client.execute(customEventsDetailsListingRequest);\nList<CustomEventsDetailResponse> customEventsDetailResponses = response.getBody().get().getEvents().get();\n"
            },
            {
              "lang": "python",
              "source": "from datetime import datetime\nimport urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\nstart_date = datetime(2020, 8, 1)\nend_date = datetime(2020, 8, 15)\nfor event in ua.CustomEventsList(airship, start_date, end_date, precision=\"MONTHLY\"):\n  print(event)\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true,\n    \"total_value\": 2,\n    \"total_count\": 709,\n    \"next_page\": \"https://go.urbanairship.com/api/reports/events?start=2020-08-01T10:00:00.000Z&end=2020-08-15T20:00:00.000Z&precision=MONTHLY&page_size=20&page=2\",\n    \"events\": [\n        {\n            \"name\": \"banner_image\",\n            \"conversion\": \"indirect\",\n            \"location\": \"ua_mcrap\",\n            \"count\": 1,\n            \"value\": 1\n        },\n        {\n            \"name\": \"bounce\",\n            \"conversion\": \"direct\",\n            \"location\": \"custom\",\n            \"count\": 23,\n            \"value\": 0\n        },\n        {\n            \"name\": \"button-click-Do it \",\n            \"conversion\": \"direct\",\n            \"location\": \"in_app_message\",\n            \"count\": 1,\n            \"value\": 0\n        },\n        {\n            \"name\": \"button-click-Get Notifications\",\n            \"conversion\": \"unattributed\",\n            \"location\": \"in_app_message\",\n            \"count\": 3,\n            \"value\": 0\n        },\n        {\n            \"name\": \"button-click-RATE NOW\",\n            \"conversion\": \"direct\",\n            \"location\": \"in_app_message\",\n            \"count\": 1,\n            \"value\": 0\n        },\n        {\n            \"name\": \"button-click-Rate the app.\",\n            \"conversion\": \"direct\",\n            \"location\": \"in_app_message\",\n            \"count\": 1,\n            \"value\": 0\n        }\n    ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/reports/experiment/detail/{push_id}/{variant_id}": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/reports/experiment/detail/b43ae1b2-3ff6-4c02-adb2-79deac0bbb19/2 HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\n\nexperiment_report = ua.ExperimentReport(airship)\nvariant_report = experiment_report.get_variant(\n  push_id=\"b43ae1b2-3ff6-4c02-adb2-79deac0bbb19\",\n  variant=2\n)\nprint(variant_report)\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"app_key\": \"some_app_key\",\n    \"experiment_id\": \"a7806815-6483-4cb9-9d74-bc3b4f3dc1b8\",\n    \"push_id\": \"b43ae1b2-3ff6-4c02-adb2-79deac0bbb19\",\n    \"created\": \"2020-02-25 23:03:12\",\n    \"variant\": 2,\n    \"variant_name\": \"thing_two\",\n    \"sends\": 64,\n    \"direct_responses\": 3,\n    \"influenced_responses\": 1,\n    \"platforms\": {\n        \"android\": {\n            \"direct_responses\": 0,\n            \"influenced_responses\": 0,\n            \"sends\": 22\n        },\n        \"ios\": {\n            \"direct_responses\": 0,\n            \"influenced_responses\": 1,\n            \"sends\": 36\n        },\n        \"amazon\": {\n            \"direct_responses\": 0,\n            \"influenced_responses\": 0,\n            \"sends\": 0\n        },\n        \"web\": {\n            \"direct_responses\": 3,\n            \"indirect_responses\": 0,\n            \"sends\": 6\n        }\n    }\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/reports/experiment/overview/{push_id}": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/reports/experiment/overview/b43ae1b2-3ff6-4c02-adb2-79deac0bbb19 HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\n\nexperiment_report = ua.ExperimentReport(airship)\noverview_report = experiment_report.get_overview(\n                    push_id=\"b43ae1b2-3ff6-4c02-adb2-79deac0bbb19\"\n                  )\nprint(overview_report)\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"app_key\": \"some_app_key\",\n   \"experiment_id\": \"a7806815-6483-4cb9-9d74-bc3b4f3dc1b8\",\n   \"push_id\": \"b43ae1b2-3ff6-4c02-adb2-79deac0bbb19\",\n   \"created\": \"2020-02-25 23:03:12\",\n   \"sends\": 532,\n   \"direct_responses\": 50,\n   \"influenced_responses\": 60,\n   \"web_clicks\": 6,\n   \"web_sessions\": 8,\n   \"variants\": [\n      {\n         \"id\" : 0,\n         \"name\": \"call to action\",\n         \"audience_pct\": 45.0,\n         \"sends\": 238,\n         \"direct_responses\": 32,\n         \"direct_response_pct\": 13.44,\n         \"indirect_responses\": 0,\n         \"indirect_response_pct\": 0.0\n      },\n      {\n         \"id\" : 1,\n         \"name\": \"gentle reminder\",\n         \"audience_pct\": 45.0,\n         \"sends\": 251,\n         \"direct_responses\": 20,\n         \"direct_response_pct\": 7.97,\n         \"indirect_responses\": 4,\n         \"indirect_response_pct\": 1.59\n      }\n   ],\n   \"control\": {\n     \"audience_pct\": 10.0,\n     \"sends\": 50,\n     \"responses\": 1,\n     \"response_rate_pct\": 2.0\n   }\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/reports/opens": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/reports/opens?start=2020-08-01%2010:00&end=2020-08-15%2020:00&precision=MONTHLY HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nPlatformStatsRequest request = PlatformStatsRequest.newRequest(PlatformStatsRequestType.APP_OPENS)\n        .setStart(DateTime.parse(\"2020-08-01T10:34:22Z\"))\n        .setEnd(DateTime.parse(\"2020-08-15T10:34:22Z\"))\n        .setPrecision(Precision.MONTHLY);\n\nResponse<PlatformStatsResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "from datetime import datetime\nimport urbanairship as ua\nairship = ua.Airship('<app key>', '<master secret>')\n\nstart_date = datetime(2020, 8, 1)\nend_date = datetime(2020, 8, 15)\n\nlisting = ua.AppOpensList(airship=airship,\n                        start_date=start_date,\n                        end_date=end_date,\n                        precision='MONTHLY')\nfor resp in listing:\n  print(resp.date, resp.android, resp.ios)\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nlisting = UA::AppOpensList.new(\n    client: airship,\n    start_date: '2020-08-01',\n    end_date: '2020-08-15',\n    precision: 'MONTHLY')\nlisting.each do |app_opens|\n    puts(app_opens)\nend\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"opens\": [\n        {\n            \"date\": \"2020-08-01 00:00:00\",\n            \"ios\": 350,\n            \"android\": 250\n        }\n    ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": "tru"
        }
      ]
    },
    "/api/reports/optins": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/reports/optins?start=2020-08-01%2010:00&end=2020-08-15%2020:00&precision=MONTHLY HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nPlatformStatsRequest request = PlatformStatsRequest.newRequest(PlatformStatsRequestType.OPT_INS)\n        .setStart(DateTime.parse(\"2020-08-01T10:34:22Z\"))\n        .setEnd(DateTime.parse(\"2020-08-15T10:34:22Z\"))\n        .setPrecision(Precision.MONTHLY);\n\nResponse<PlatformStatsResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "from datetime import datetime\nimport urbanairship as ua\nairship = ua.Airship('<app key>', '<master secret>')\n\nstart_date = datetime(2020, 8, 1)\nend_date = datetime(2020, 8, 15)\n\nlisting = ua.OptInList(airship=airship,\n                        start_date=start_date,\n                        end_date=end_date,\n                        precision='MONTHLY')\nfor resp in listing:\n  print(resp.date, resp.android, resp.ios)\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nlisting = UA::OptInList.new(\n    client: airship,\n    start_date: '2020-08-01',\n    end_date: '2020-08-15',\n    precision: 'MONTHLY')\nlisting.each do |opt_ins|\n    puts(opt_ins)\nend\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"optins\": [\n      {\n         \"android\": 50,\n         \"date\": \"2020-05-01 00:00:00\",\n         \"ios\": 500\n      }\n   ],\n   \"next_page\": \"https://go.urbanairship.com/api/reports/...\"\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/reports/optouts": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/reports/optouts?start=2020-08-01%2010:00&end=2020-08-15%2020:00&precision=MONTHLY HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nPlatformStatsRequest request = PlatformStatsRequest.newRequest(PlatformStatsRequestType.OPT_OUTS)\n        .setStart(DateTime.parse(\"2020-08-01T10:34:22Z\"))\n        .setEnd(DateTime.parse(\"2020-08-15T10:34:22Z\"))\n        .setPrecision(Precision.MONTHLY);\n\nResponse<PlatformStatsResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "from datetime import datetime\nimport urbanairship as ua\nairship = ua.Airship('<app key>', '<master secret>')\n\nstart_date = datetime(2020, 8, 1)\nend_date = datetime(2020, 8, 15)\n\nlisting = ua.OptOutList(airship=airship,\n                      start_date=start_date,\n                      end_date=end_date,\n                      precision='MONTHLY')\nfor resp in listing:\n  print(resp.date, resp.android, resp.ios)\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nlisting = UA::OptOutList.new(\n    client: airship,\n    start_date: '2020-08-01',\n    end_date: '2020-08-15',\n    precision: 'MONTHLY')\nlisting.each do |opt_outs|\n    puts(opt_outs)\nend\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"optouts\": [\n      {\n         \"android\": 5,\n         \"date\": \"2020-05-01 00:00:00\",\n         \"ios\": 25\n      }\n   ],\n   \"next_page\": \"https://go.urbanairship.com/api/reports/...\"\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/reports/responses": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/reports/responses?start=2020-05-01%2010:00&end=2020-05-30%2010:00&precision=MONTHLY HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nResponseReportRequest request = ResponseReportRequest\n        .newRequest(DateTime.parse(\"2020-05-01T10:34:22Z\"),\n                    DateTime.parse(\"2020-05-30T10:34:22Z\"),\n                    Precision.MONTHLY);\n\nResponse<ResponseReportResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "from datetime import datetime\nimport urbanairship as ua\nairship = ua.Airship('<app key>', '<master secret>')\n\nstart_date = datetime(2020, 5, 1)\nend_date = datetime(2020, 5, 30)\nlisting = ua.ResponseReportList(airship=airship,\n                                start_date=start_date,\n                                end_date=end_date,\n                                precision='MONTHLY')\nfor resp in listing:\n  print(resp.date, resp.android, resp.ios)\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nlisting = UA::ResponseReportList.new(\n    client: airship,\n    start_date: '2020-05-01',\n    end_date: '2020-05-30',\n    precision: 'MONTHLY'\n)\nlisting.each do |resp|\n    puts(resp)\nend\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"next_page\": \"https://go.urbanairship.com/api/reports/...\",\n   \"responses\": [\n      {\n         \"android\": {\n            \"direct\": 25,\n            \"influenced\": 118\n         },\n         \"date\": \"2020-05-01 00:00:00\",\n         \"ios\": {\n            \"direct\": 16,\n            \"influenced\": 87\n         }\n      }\n   ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/reports/responses/list": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/reports/responses/list?start=2020-08-01%2010:00&end=2020-08-15%2010:00&limit=20 HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nPushListingRequest request = PushListingRequest.newRequest()\n        .setStart(DateTime.parse(\"2020-08-01T10:34:22Z\"))\n        .setEnd(DateTime.parse(\"2020-08-15T10:34:22Z\"))\n        .setLimit(20);\n\nResponse<PushListingResponse> response = client.execute(request);\n\n// Get the first item in an array of push info responses. You can use all of the getters\n// listed in the \"Individual Push Response Statistics\" section.\nPushInfoResponse pushInfo = response.getBody().get().getPushInfoList().get().get(0);\n"
            },
            {
              "lang": "python",
              "source": "from datetime import datetime\nimport urbanairship as ua\nairship = ua.Airship('<app key>', '<master secret>')\n\nstart_date = datetime(2020, 8, 1)\nend_date = datetime(2020, 8, 15)\n\nlisting = ua.ResponseList(airship=airship,\n                          start_date=start_date,\n                          end_date=end_date)\nfor resp in listing:\n  print(resp.date, resp.android, resp.ios)\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nresponse_list = UA::ResponseList.new(\n    client: airship,\n    start_date: '2020-08-01',\n    end_date: '2020-08-30',\n    limit: 20,\n    push_id_start: 'start_id'\n)\nresponse_list.each do |resp|\n    puts(resp)\nend\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"next_page\": \"https://go.urbanairship.com/api/reports/responses/list?start=2020-08-01+10%...\",\n    \"pushes\": [\n        {\n            \"push_uuid\": \"f4db3752-a982-4a2b-994e-7b5fd1c7f02f\",\n            \"push_time\": \"2020-08-15 02:12:22\",\n            \"push_type\": \"UNICAST_PUSH\",\n            \"group_id\": \"4e768dc7-4ebc-4206-890a-60b5627763a7\",\n            \"direct_responses\": 0,\n            \"sends\": 1,\n            \"open_channels_sends\": {\n                \"platforms\": []\n            }\n        },\n        {\n            \"push_uuid\": \"5a4ade58-fbd3-43a2-ac3c-e834ee190151\",\n            \"push_time\": \"2020-08-14 19:58:15\",\n            \"push_type\": \"UNICAST_PUSH\",\n            \"group_id\": \"c5664e1f-106e-4616-9820-7d9ecce8a3f3\",\n            \"direct_responses\": 1,\n            \"sends\": 2,\n            \"open_channels_sends\": {\n                \"platforms\": []\n            }\n        }\n    ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/reports/responses/{push_id}": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/reports/responses/90f28bc6-6c9b-4c99-b970-973afc266e08 HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nPushInfoRequest request = PushInfoRequest.newRequest(\"90f28bc6-6c9b-4c99-b970-973afc266e08\");\n\nResponse<PushInfoResponse> response = client.execute(request);\nPushInfoResponse pushInfo = response.getBody().get();\n\n// Number of sends\nint sends = pushInfo.getSends();\n// Number of direct responses to the push\nint directResponses = pushInfo.getDirectResponses();\n// When the push was sent\nDateTime date = pushInfo.getPushTime();\n// The push type - can be one of BROADCAST_PUSH, SCHEDULED_PUSH, TAG_PUSH, UNICAST_PUSH\nPushInfoResponse.PushType type = pushInfo.getPushType();\n// The unique identifier for the push\nUUID pushId = pushInfo.getPushId();\n"
            },
            {
              "lang": "python",
              "source": "from datetime import datetime\nimport urbanairship as ua\nairship = ua.Airship('<app key>', '<master secret>')\n\npush_id = '90f28bc6-6c9b-4c99-b970-973afc266e08'\nresponse = ua.IndividualResponseStats(airship).get(push_id)\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nd = UA::IndividualResponseStats.new(client: airship)\nstatistics = d.get(push_id: '90f28bc6-6c9b-4c99-b970-973afc266e08')\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"push_uuid\": \"90f28bc6-6c9b-4c99-b970-973afc266e08\",\n   \"push_time\": \"2020-02-25 23:03:12\",\n   \"push_type\": \"UNICAST_PUSH\",\n   \"sends\": 167,\n   \"direct_responses\": 15,\n   \"open_channels_sends\": {\n      \"platforms\": [\n        {\n           \"id\": \"PLATFORM_NAME\",\n           \"sends\": 22\n        },\n        {\n           \"id\": \"ANOTHER_PLATFORM\",\n           \"sends\": 145\n        }\n      ]\n   }\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/reports/sends": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/reports/sends?start=2020-05-01%2010:00&end=2020-05-30%2020:00&precision=MONTHLY HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nPlatformStatsRequest request = PlatformStatsRequest.newRequest(PlatformStatsRequestType.SENDS)\n        .setStart(DateTime.parse(\"2020-05-01T10:34:22Z\"))\n        .setEnd(DateTime.parse(\"2020-05-30T10:34:22Z\"))\n        .setPrecision(Precision.MONTHLY);\n\nResponse<PlatformStatsResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\nfrom datetime import datetime\n\nairship = ua.Airship('<app key>', '<master secret>')\nstart_date = datetime(2020, 5, 1)\nend_date = datetime(2020, 5, 30)\nprecision = 'MONTHLY'\nlisting = ua.reports.PushList(airship, start_date, end_date, precision)\n\nfor resp in listing:\n  print(resp.date, resp.android, resp.ios)\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nlisting = UA::PushList.new(\n    client: airship,\n    start_date: '2020/05/01',\n    end_date: '2020/05/30',\n    precision: 'MONTHLY'\n)\nlisting.each do |resp|\n    puts(resp)\nend\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"sends\": [\n      {\n         \"android\": 50,\n         \"date\": \"2020-05-01 00:00:00\",\n         \"ios\": 500\n      }\n   ],\n   \"next_page\": \"https://go.urbanairship.com/api/reports/...\"\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/reports/timeinapp": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/reports/timeinapp?start=2020-05-01%2010:00&end=2020-05-15%2020:00&precision=MONTHLY HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nPlatformStatsRequest request = PlatformStatsRequest.newRequest(PlatformStatsRequestType.TIME_IN_APP)\n        .setStart(DateTime.parse(\"2020-05-01T10:34:22Z\"))\n        .setEnd(DateTime.parse(\"2020-05-15T10:34:22Z\"))\n        .setPrecision(Precision.MONTHLY);\n\nResponse<PlatformStatsResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\nfrom datetime import datetime\n\nairship = ua.Airship('<app key>', '<master secret>')\nstart_date = datetime(2020, 5, 1)\nend_date = datetime(2020, 5, 15)\nprecision = 'MONTHLY'\nlisting = ua.reports.TimeInAppList(airship, start_date, end_date, precision)\nfor resp in listing:\n    print(resp.date, resp.android, resp.ios)\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nlisting = UA::TimeInAppList.new(\n    client: airship,\n    start_date: '2020-05-01',\n    end_date: '2020-05-30',\n    precision: 'MONTHLY')\nlisting.each do |time_in_app|\n    puts(time_in_app)\nend\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"timeinapp\": [\n      {\n         \"android\": 50,\n         \"date\": \"2020-05-01 00:00:00\",\n         \"ios\": 500\n      }\n   ],\n   \"next_page\": \"https://go.urbanairship.com/api/reports/...\"\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/reports/web/interaction": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/reports/web/interaction?app_key=ZGIwZTY3YjEtZTRiMi00ZG&start=2020-05-01%2010:00&end=2020-05-03%2020:00&precision=HOURLY HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "python",
              "source": "import datetime\nimport urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\n\nfor response in ua.WebResponseReport(\n  airship=airship,\n  start_date=datetime.datetime(2020, 5, 1),\n  end_date=datetime.datetime(2020, 5, 3),\n  precision=\"HOURLY\"\n):\n  print(response)\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"app_key\": \"ZGIwZTY3YjEtZTRiMi00ZG\",\n   \"end\": \"2020-05-03 00:00:00\",\n   \"precision\": \"HOURLY\",\n   \"start\": \"2020-05-01 00:00:00\",\n   \"total_counts\": [\n      {\"counts\": {\"clicks\": 36, \"sessions\": 55 }, \"date\": \"2020-05-01 10:00:00\"},\n      {\"counts\": {\"clicks\": 50, \"sessions\": 79 }, \"date\": \"2020-05-01 11:00:00\"},\n      {\"...\"},\n      {\"...\"},\n      {\"counts\": {\"clicks\": 67, \"sessions\": 75 }, \"date\": \"2020-05-03 20:00:00\"}\n  ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/schedules": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/schedules HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nScheduleListingRequest request = ScheduleListingRequest.newRequest();\nResponse<ListAllSchedulesResponse> response = client.execute(request);\nList<SchedulePayloadResponse> schedules = response.getBody().get().getSchedules();\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\nairship = ua.Airship('<app key>', '<master secret>')\n\nfor schedule in ua.ScheduledList(airship):\n    print(\n    schedule.name, schedule.url, schedule.push_ids,\n    schedule.schedule, schedule.push\n    )\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nscheduled_push_list = UA::ScheduledPushList.new(client: airship)\nscheduled_push_list.each do |schedule|\n    puts(schedule)\nend\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nCount: 2\nData-Attribute: schedules\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true,\n    \"count\": 2,\n    \"total_count\": 4,\n    \"next_page\": \"https://go.urbanairship.com/api/schedules/?start=5c69320c-3e91-5241-fad3-248269eed104&limit=2&order=asc\",\n    \"schedules\": [\n        {\n            \"url\": \"http://go.urbanairship/api/schedules/2d69320c-3c91-5241-fac4-248269eed109\",\n            \"schedule\": { },\n            \"push\": { }\n        },\n        {\n            \"url\": \"http://go.urbanairship/api/schedules/2d69320c-3c91-5241-fac4-248269eed10A\",\n            \"schedule\": { },\n            \"push\": { }\n        }\n    ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/schedules HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n[\n  {\n    \"name\": \"Morning People\",\n    \"schedule\": {\n        \"scheduled_time\": \"2020-06-03T09:15:00\"\n    },\n    \"push\": {\n        \"audience\": { \"tag\": \"earlyBirds\" },\n        \"notification\": { \"alert\": \"Good Day Sunshine\" },\n        \"device_types\": [ \"ios\", \"android\" ]\n    }\n  },\n  {\n    \"name\": \"Everybody Else\",\n    \"schedule\": {\n        \"best_time\": {\n          \"send_date\": \"2020-06-03\"\n        }\n    },\n    \"push\": {\n        \"audience\": { \"tag\": \"normalPeople\" },\n        \"notification\": { \"alert\": \"Stay Up Late\" },\n        \"device_types\": [ \"ios\", \"android\" ]\n    }\n  }\n]\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nSchedulePayload schedulePayload = SchedulePayload.newBuilder()\n        .setName(\"Morning People\")\n        .setSchedule(Schedule.newBuilder()\n                .setScheduledTimestamp(DateTime.parse(\"2020-06-03T09:15:00Z\"))\n                .build())\n        .setPushPayload(PushPayload.newBuilder()\n                .setDeviceTypes(DeviceTypeData.of(DeviceType.IOS, DeviceType.ANDROID))\n                .setNotification(Notifications.alert(\"Good Day Sunshine\"))\n                .setAudience(Selectors.tag(\"earlyBirds\"))\n                .build())\n        .build();\n\nScheduleRequest scheduleRequest = ScheduleRequest.newRequest(schedulePayload);\nResponse<ScheduleResponse> response = client.execute(scheduleRequest);\n"
            },
            {
              "lang": "python",
              "source": "import datetime\nimport urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\nsched = airship.create_scheduled_push()\nsched.name = 'Morning People'\nsched.schedule = ua.scheduled_time(\n  datetime.datetime.(2020, 6, 3, 9, 15, 0)\n)\nsched.push = airship.create_push()\nsched.push.audience = ua.tag('earlyBirds')\nsched.push.notification = ua.notification(alert='Good Day Sunshine')\nsched.push.device_types = ['ios', 'android']\nsched.send()\n\nresponse = sched.send()\nprint ('Created schedule. URL:', response.schedule_url)\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\npush = airship.create_push\npush.audience = UA.tag('earlyBirds')\npush.notification = UA.notification(alert: 'Morning People')\npush.device_types = UA.device_types(['ios','android'])\n\nschedule = airship.create_scheduled_push\nschedule.push = push\nschedule.name = \"Morning People\"\nschedule.schedule = UA.scheduled_time(Time.now.utc + 60)\nresponse = schedule.send_push\nprint (\"Created schedule. url: \" + response.schedule_url)\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Example schedule with localizations",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/schedules HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n[\n  {\n    \"name\": \"Greetings\",\n    \"schedule\": {\n        \"best_time\": {\n          \"send_date\": \"2020-11-15\"\n        }\n    },\n    \"push\": {\n        \"device_types\": [\n          \"ios\",\n          \"android\"\n        ],\n        \"audience\": {\n          \"tag\": \"needs_a_greeting\",\n          \"group\": \"new_customer\"\n        },\n        \"notification\": {\n          \"alert\": \"Hi!\"\n        },\n        \"localizations\": [\n          {\n              \"language\": \"de\",\n              \"country\": \"AT\",\n              \"notification\": {\n                \"alert\": \"Grüss Gott\"\n              }\n          },\n          {\n              \"language\": \"de\",\n              \"country\": \"DE\",\n              \"notification\": {\n                \"alert\": \"Guten Tag\"\n              }\n          }\n        ]\n    }\n  }\n]\n"
            },
            {
              "lang": "python",
              "source": "import datetime\nimport urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\n\nsched = airship.create_scheduled_push()\nsched.name = 'Greetings'\nsched.schedule = ua.best_time(datetime.datetime(2020, 11, 15))\n\nsched.push = airship.create_push()\nsched.push.audience = ua.tag_group(tag_group=\"new_customer\", tag=\"needs_a_greeting\")\nsched.push.notification = ua.notification(alert='Good Day!')\nsched.push.device_types = ['ios', 'android']\nsched.push.localizations = [\n    ua.localization(country='at', language='de', notification=ua.notification(alert=\"Grüss Gott\")),\n    ua.localization(country='de', language='de', notification=ua.notification(alert=\"Guten Tag\")),\n ]\n\nresponse = sched.send()\nprint ('Created schedule. URL:', response.schedule_url)\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nLocalization one = Localization.newBuilder()\n        .setCountry(\"AT\")\n        .setLanguage(\"de\")\n        .setNotification(Notifications.alert(\"Grüss Gott\"))\n        .build();\n\nLocalization two = Localization.newBuilder()\n        .setCountry(\"DE\")\n        .setLanguage(\"de\")\n        .setNotification(Notifications.alert(\"Guten Tag\"))\n        .build();\n\nSchedulePayload schedulePayload = SchedulePayload.newBuilder()\n        .setName(\"Greetings\")\n        .setSchedule(Schedule.newBuilder()\n                .setBestTime(BestTime.newBuilder()\n                        .setSendDate(DateTime.parse(\"2020-11-15T00:00:00Z\"))\n                        .build())\n                .build())\n        .setPushPayload(PushPayload.newBuilder()\n                .setDeviceTypes(DeviceTypeData.of(DeviceType.IOS, DeviceType.ANDROID))\n                .setNotification(Notifications.alert(\"Hi!\"))\n                .setAudience(Selectors.tagWithGroup(\"needs_a_greeting\", \"new_customer\"))\n                .addLocalization(one)\n                .addLocalization(two)\n                .build())\n        .build();\n\nScheduleRequest scheduleRequest = ScheduleRequest.newRequest(schedulePayload);\nResponse<ScheduleResponse> response = client.execute(scheduleRequest);\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\npush = airship.create_push\npush.audience = UA.tag('needs_a_greeting', group:'new_customer')\npush.notification = UA.notification(alert: 'Hi!')\npush.device_types = UA.device_types(['ios', 'android'])\npush.localizations = {\n  \"language\": \"de\",\n  \"country\": \"AT\",\n  \"notification\": {\n  \"alert\": \"Grüss Gott\"\n  }\n}\n\nschedule = airship.create_scheduled_push\nschedule.push = push\nschedule.name = \"Greetings\"\nschedule.schedule = UA.scheduled_time(Time.now.utc + 60)\nresponse = schedule.send_push\nprint (\"Created schedule. url: \" + response.schedule_url)\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 201 Created\nData-Attribute: schedule_urls\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\": true,\n   \"operation_id\": \"efb18e92-9a60-6689-45c2-82fedab36399\",\n   \"schedule_urls\": [\n        \"https://go.urbanairship.com/api/schedules/eac2ace6-349a-41a2-b874-5496d7bf0100\",\n        \"https://go.urbanairship.com/api/schedules/6c7c9bf5-cb2b-47cb-b27f-f85981391c4e\"\n    ],\n    \"schedule_ids\": [\n        \"eac2ace6-349a-41a2-b874-5496d7bf0100\",\n        \"6c7c9bf5-cb2b-47cb-b27f-f85981391c4e\"\n    ],\n   \"schedules\": [\n      {\n         \"url\": \"https://go.urbanairship.com/api/schedules/eac2ace6-349a-41a2-b874-5496d7bf0100\",\n         \"schedule\": {\n            \"scheduled_time\": \"2020-06-03T09:15:00\"\n         },\n         \"name\": \"Morning People\",\n         \"push\": {\n            \"audience\": { \"tag\": \"earlyBirds\" },\n            \"notification\": { \"alert\": \"Good Day Sunshine\" },\n            \"device_types\": [ \"ios\", \"android\" ]\n         },\n         \"push_ids\": [ \"83046227-9b06-4114-9f23-0df349792bbd\" ]\n      }\n      {\n          \"url\": \"https://go.urbanairship.com/api/schedules/6c7c9bf5-cb2b-47cb-b27f-f85981391c4e\",\n          \"schedule\": {\n            \"best_time\": {\n              \"send_date\": \"2020-06-03\"\n            }\n          },\n          \"name\": \"Everybody Else\",\n          \"push\": {\n            \"audience\": { \"tag\": \"normalPeople\" },\n            \"notification\": { \"alert\": \"Stay Up Late\" },\n            \"device_types\": [ \"ios\", \"android\" ]\n         },\n         \"push_ids\": [ \"8438e81-bb31-82a9-5feb-e7fd5b21ca7e\" ]\n      }\n   ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/schedules/create-and-send": {
      "post": [
        {
          "description": "Example Scheduled Create and Send",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/schedules/create-and-send HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n  \"schedule\": {\n    \"scheduled_time\" : \"2020-11-11T12:00:00\"\n  },\n  \"name\" : \"scheduled winter sale email\",\n  \"push\" : {\n    \"audience\": {\n      \"create_and_send\" : [\n        {\n          \"ua_address\": \"new@email.com\",\n          \"ua_commercial_opted_in\": \"2020-11-29T10:34:22\"\n        },\n        {\n          \"ua_address\" : \"ben@icetown.com\",\n          \"ua_commercial_opted_in\": \"2020-11-29T12:45:10\"\n        }\n      ]\n    },\n    \"device_types\" : [ \"email\" ],\n    \"notification\" : {\n      \"email\": {\n        \"subject\": \"Welcome to the Winter Sale! \",\n        \"html_body\": \"<h1>Seasons Greetings</h1><p>Check out our winter deals!</p><p><a data-ua-unsubscribe=\\\"1\\\" title=\\\"unsubscribe\\\" href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\">Unsubscribe</a></p>\",\n        \"plaintext_body\": \"Greetings! Check out our latest winter deals! [[ua-unsubscribe href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\"]]\",\n        \"message_type\": \"commercial\",\n        \"sender_name\": \"Airship\",\n        \"sender_address\": \"team@airship.com\",\n        \"reply_to\": \"no-reply@airship.com\"\n      }\n    },\n    \"campaigns\": {\n        \"categories\": [\"winter sale\", \"west coast\"]\n    }\n  }\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nString htmlBodyString = \"<h1>Seasons Greetings</h1><p>Check out our winter deals!</p><p><a data-ua-unsubscribe=\\\"1\\\" title=\\\"unsubscribe\\\" href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\">Unsubscribe</a></p>\";\nString plaintextBodyString = \"Greetings! Check out our latest winter deals! [[ua-unsubscribe href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\"]]\";\n\nEmailChannel newChannel = EmailChannel.newBuilder()\n        .setAddress(\"new@email.com\")\n        .setCommertialOptedIn(DateTime.parse(\"2020-11-29T10:34:22Z\"))\n        .build();\n\nEmailChannel benChannel = EmailChannel.newBuilder()\n        .setAddress(\"ben@icetown.com\")\n        .setTransactionalOptedIn(DateTime.parse(\"2020-11-29T12:45:10Z\"))\n        .build();\n\nCreateAndSendAudience audience = new CreateAndSendAudience(EmailChannels.newBuilder()\n        .addChannel(newChannel)\n        .addChannel(benChannel)\n        .build());\n\nCreateAndSendEmailPayload createAndSendEmailPayload = CreateAndSendEmailPayload.newBuilder()\n        .setSubject(\"Welcome to the Winter Sale! \")\n        .setHtmlBody(htmlBodyString)\n        .setPlaintextBody(plaintextBodyString)\n        .setMessageType(MessageType.TRANSACTIONAL)\n        .setSenderName(\"Airship\")\n        .setSenderAddress(\"team@airship.com\")\n        .setReplyTo(\"no-reply@airship.com\")\n        .build();\n\nNotification notification = Notification.newBuilder()\n        .addDeviceTypeOverride(DeviceType.EMAIL, createAndSendEmailPayload)\n        .build();\n\nCampaigns campaign = Campaigns.newBuilder()\n        .addCategory(\"winter sale\")\n        .addCategory(\"west coast\")\n        .build();\n\nCreateAndSendPayload payload = CreateAndSendPayload.newBuilder()\n        .setAudience(audience)\n        .setNotification(notification)\n        .setCampaigns(campaign)\n        .build();\n\nCreateAndSendSchedulePayload schedulePayload = CreateAndSendSchedulePayload.newBuilder()\n        .setPayload(payload)\n        .setScheduleTime(DateTime.parse(\"2020-11-11T12:00:00\"))\n        .setName(\"scheduled winter sale email\")\n        .build();\n\nCreateAndSendScheduleRequest scheduleRequest = CreateAndSendScheduleRequest.newRequest(schedulePayload)\nResponse<String> response = client.execute(scheduleRequest);\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nemail_notification = UA::EmailNotification.new(client: airship)\nemail_notification.bypass_opt_in_level = false\nemail_notification.html_body = \"<h1>Seasons Greetings</h1><p>Check out our winter deals!</p><p><a data-ua-unsubscribe=\\\"1\\\" title=\\\"unsubscribe\\\" href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\">Unsubscribe</a></p>\"\nemail_notification.message_type = 'transactional'\nemail_notification.plaintext_body = 'Greetings! Check out our latest winter deals! [[ua-unsubscribe href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\"]]'\nemail_notification.reply_to = 'no-reply@airship.com'\nemail_notification.sender_address = 'team@airship.com'\nemail_notification.sender_name = 'Airship'\nemail_notification.subject = 'Welcome to the Winter Sale!'\noverride = email_notification.email_override\nsend_it = UA::CreateAndSend.new(client: airship)\nsend_it.addresses = [\n  {\n    \"ua_address\": \"new@email.com\",\n    \"ua_commercial_opted_in\": \"2020-10-28T10:34:22\"\n  }\n]\nsend_it.device_types = [ \"email\" ]\nsend_it.campaigns = [\"winter sale\", \"west coast\"]\nsend_it.notification = email_notification.email_override\nsend_it.name = \"scheduled winter sale email\"\nsend_it.scheduled_time = \"2020-12-08T11:06:00\"\nsend_it.schedule\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 202 Accepted\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n  \"ok\": true,\n  \"operation_id\": \"67c65146-c27f-431f-b54a-83aca694fdd3\",\n  \"push_ids\": [\n      \"8cf8b2a5-7655-40c2-a500-ff498e60453e\"\n  ],\n  \"schedule_urls\": [\n      \"http://go.urbanairship/api/schedules/2d69320c-3c91-5241-fac4-248269eed109\"\n  ],\n  \"schedules\": [\n      {\n        \"push\": {\n            \"audience\": {\n              \"create_and_send\": [\n                  {\n                    \"ua_address\": \"new@email.com\",\n                    \"ua_commercial_opted_in\": \"2020-11-29T10:34:22\"\n                  },\n                  {\n                    \"ua_address\": \"ben@icetown.com\",\n                    \"ua_commercial_opted_in\": \"2020-11-29T12:45:10\"\n                  }\n              ]\n            },\n            \"device_types\": [\n              \"email\"\n            ],\n            \"notification\": {\n              \"campaigns\": {\n                  \"categories\": [\n                    \"winter sale\",\n                    \"west coast\"\n                  ]\n              },\n              \"email\": {\n                  \"html_body\": \"<h1>Seasons Greetings</h1><p>Check out our winter deals!</p><p><a data-ua-unsubscribe=\\\"1\\\" title=\\\"unsubscribe\\\" href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\">Unsubscribe</a></p>\",\n                  \"message_type\": \"commercial\",\n                  \"plaintext_body\": \"Greetings! Check out our latest winter deals! [[ua-unsubscribe href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\"]]\",\n                  \"reply_to\": \"no-reply@airship.com\",\n                  \"sender_address\": \"team@airship.com\",\n                  \"sender_name\": \"Airship\",\n                  \"subject\": \"Welcome to the Winter Sale! \"\n              }\n            }\n        },\n        \"schedule\": {\n            \"scheduled_time\": \"2020-11-11T12:00:00\"\n        },\n        \"url\": \"http://go.urbanairship/api/schedules/2d69320c-3c91-5241-fac4-248269eed109\"\n      }\n  ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/schedules/{schedule_id}": {
      "delete": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "DELETE /api/schedules/b384ca54-0a1d-9cb3-2dfd-ae5964630e66 HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nScheduleDeleteRequest request = ScheduleDeleteRequest.newRequest(\"b384ca54-0a1d-9cb3-2dfd-ae5964630e66\");\nResponse<String> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\nairship = ua.Airship('<app key>', '<master secret>')\nschedule = ua.ScheduledPush.from_url(airship, 'https://go.urbanairship.com/api/schedules/b384ca54-0a1d-9cb3-2dfd-ae5964630e66')\n\n# Cancel schedule\nschedule.cancel()\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nschedule = airship.create_scheduled_push\nschedule = UA::ScheduledPush.from_url(client: airship, url: 'https://go.urbanairship.com/api/schedules/b384ca54-0a1d-9cb3-2dfd-ae5964630e66')\nschedule.cancel\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 204 No Content\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/schedules/5cde3564-ead8-9743-63af-821e12337812 HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nScheduleListingRequest request = ScheduleListingRequest.newRequest(\"5cde3564-ead8-9743-63af-821e12337812\");\nResponse<ListAllSchedulesResponse> response = client.execute(request);\nSchedulePayloadResponse schedule = response.getBody().get().getSchedules().get(0);\n// Get the schedule's name\nOptional<String> name = schedule.getName();\n// Get the push IDs\nSet<String> pushIds = schedule.getPushIds();\n// Get the scheduled time\nSchedule sched = schedule.getSchedule();\n// Get the associated push payload\nPushPayload payload = schedule.getPushPayload();\n// Get the URL\nOptional<String> url = schedule.getUrl();\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nschedule = airship.create_scheduled_push\nscheduled_push = UA::ScheduledPush.new(airship)\nschedule_details = scheduled_push.list(schedule_id: '5cde3564-ead8-9743-63af-821e12337812')\nputs(schedule_details)\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"name\": \"I would like to subscribe to your newsletter\",\n   \"schedule\": {\n      \"scheduled_time\": \"2020-04-01T18:45:30\"\n   },\n   \"push\": {\n      \"audience\": {\n         \"tag\": [\n            \"intriguing\",\n            \"ideas\"                       ]\n      },\n      \"notification\": {\n         \"alert\": \"Check your inbox!\"\n      },\n      \"device_types\": [ \"ios\", \"android\" ]\n   }\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "put": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "PUT /api/schedules/5cde3564-ead8-9743-63af-821e12337812 HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n   \"name\": \"I would like to subscribe to your newsletter\",\n   \"schedule\": {\n      \"scheduled_time\": \"2020-04-01T18:45:30\"\n   },\n   \"push\": {\n      \"audience\": {\n         \"tag\": [\n            \"intriguing\",\n            \"ideas\",\n            \"thought_leadership\"\n         ]\n      },\n      \"notification\": {\n         \"alert\": \"Check your inbox!\"\n      },\n      \"device_types\": [ \"ios\", \"android\" ]\n   }\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nSchedulePayload schedulePayload = SchedulePayload.newBuilder()\n        .setName(\"I would like to subscribe to your newsletter\")\n        .setSchedule(Schedule.newBuilder()\n                .setScheduledTimestamp(DateTime.parse(\"2020-04-01T18:45:00Z\"))\n                .build())\n        .setPushPayload(PushPayload.newBuilder()\n                .setDeviceTypes(DeviceTypeData.of(DeviceType.IOS, DeviceType.ANDROID))\n                .setNotification(Notifications.alert(\"Check your inbox!\"))\n                .setAudience(Selectors.tag(\"intriguing\"))\n                .build())\n        .build();\n\nScheduleRequest scheduleRequest = ScheduleRequest.newUpdateRequest(schedulePayload, \"5cde3564-ead8-9743-63af-821e12337812\");\nResponse<ScheduleResponse> response = client.execute(scheduleRequest);\n"
            },
            {
              "lang": "python",
              "source": "import datetime\nimport urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\nschedule = ua.ScheduledPush.from_url(airship, 'https://go.urbanairship.com/api/schedules/5cde3564-ead8-9743-63af-821e12337812')\n\n# change scheduled time to tomorrow\nschedule.schedule = ua.scheduled_time(\n    datetime.datetime.utcnow() + datetime.timedelta(days=1))\nresp = schedule.update()\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nschedule = airship.create_scheduled_push\nschedule = UA::ScheduledPush.from_url(client: airship, url: 'https://go.urbanairship.com/api/schedules/5cde3564-ead8-9743-63af-821e12337812')\n# change scheduled time to tomorrow\nschedule.schedule = UA.scheduled_time(Time.now.utc + (60 * 60 * 24))\nschedule.update\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Length: 123\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true,\n    \"operation_id\": \"7c56d013-5599-d66d-6086-6205115d85e2\",\n    \"schedule_urls\": [ \"https://go.urbanairship.com/api/schedules/0af1dead-e769-4b78-879a-7c4bb52d7c9e\" ],\n    \"schedules\": [\n        {\n            \"url\": \"https://go.urbanairship.com/api/schedules/0af1dead-e769-4b78-879a-7c4bb52d7c9e\",\n            \"schedule\": {\n                \"scheduled_time\": \"2020-04-01T18:45:30\"\n            },\n            \"name\": \"I would like to subscribe to your newsletter\",\n            \"push\": {\n                \"audience\": {\"tag\": [\"intriguing\", \"ideas\", \"thought_leadership\"] },\n                \"notification\": {\"alert\": \"Check your inbox!\"},\n                \"device_types\": [ \"ios\", \"android\" ]\n            },\n            \"push_ids\": [ \"48fb8e8a-ee51-4e2a-9a47-9fab9b13d846\" ]\n        }\n    ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/schedules/{schedule_id}/pause": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/schedules/5cde3564-ead8-9743-63af-821e12337812/pause HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\n\nsched = ua.ScheduledPush(airship)\nsched.url = \"http://go.urbanairship/api/schedules/5cde3564-ead8-9743-63af-821e12337812\"\n\nsched.pause()\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nScheduleStatusRequest pauseRequest = ScheduleStatusRequest.pauseScheduleRequest(\"68b2d71f-1c10-4592-bd96-2725aee0ae57\");\nResponse<String> pauseResponse = client.execute(pauseRequest);      \n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/schedules/{schedule_id}/resume": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/schedules/5cde3564-ead8-9743-63af-821e12337812/resume HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\n\nsched = ua.ScheduledPush(airship)\nsched.url = \"http://go.urbanairship/api/schedules/5cde3564-ead8-9743-63af-821e12337812\"\n\nsched.resume()\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nScheduleStatusRequest resumeRequest = ScheduleStatusRequest.resumeScheduleRequest(\"68b2d71f-1c10-4592-bd96-2725aee0ae57\");\nResponse<String> resumeResponse = client.execute(resumeRequest);\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/segments": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/segments/ HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nSegmentListingRequest request = SegmentListingRequest.newRequest();\nResponse<SegmentListingResponse> response = client.execute(request);\n\n// Get the first segment in the list\nSegmentListingView segment = response.getBody().get().getSegmentListingViews().get(0);\n\n// Get the segment display name\nString displayName = segment.getDisplayName();\n\n// Get the segment ID\nString id = segment.getSegmentId();\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\nsegment_list = ua.SegmentList(airship)\n\nfor segment in segment_list:\n  print(segment.display_name)\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nsegment_list = UA::SegmentList.new(client: airship)\n\nsegment_list.each do |segment|\n   puts(segment['display_name'])\nend\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nLink: <https://go.urbanairship.com/api/segments?limit=1&sort=id&order=asc&start=3832cf72-cb44-4132-a11f-eafb41b82f64>;rel=next\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"next_page\": \"https://go.urbanairship.com/api/segments?limit=1&sort=id&order=asc&start=3832cf72-cb44-4132-a11f-eafb41b82f64\",\n   \"segments\": [\n      {\n         \"creation_date\": 1346248822221,\n         \"display_name\": \"A segment\",\n         \"id\": \"00c0d899-a595-4c66-9071-bc59374bbe6b\",\n         \"modification_date\": 1346248822221\n      }\n   ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/segments HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n   \"display_name\": \"News but not sports\",\n   \"criteria\": {\n      \"and\": [\n         {\"tag\": \"news\"},\n         {\"not\":\n            {\"tag\": \"sports\"}\n         }\n      ]\n   }\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\n// Define the segment criteria\nSelector compound = Selectors.and(Selectors.tag(\"news\"), Selectors.not(Selectors.tag(\"sports\")));\n\nSegmentRequest request = SegmentRequest.newRequest();\nrequest.setCriteria(compound);\nrequest.setDisplayName(\"News but not sports\");\n\nResponse<String> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\nsegment = ua.Segment()\nsegment.display_name = \"Display Name\"\nsegment.criteria = {\"tag\": \"Existing Tag\"}\nresp = segment.create(airship)\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nsegment = UA::Segment.new(client: airship)\nsegment.display_name = 'Display Name'\nsegment.criteria = { 'tag' => 'existing_tag' }\nsegment.create\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 201 Created\nLocation: https://go.urbanairship.com/api/segments/f35da41d-59c1-4106-a192-9594bd480cb6\nContent-Type: application/vnd.urbanairship+json;version=3\n\n{\n   \"ok\": true,\n   \"segment_id\": \"f35da41d-59c1-4106-a192-9594bd480cb6\",\n   \"operation_id\": \"1d154121-951f-45b9-896d-e70718b5865b\"\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/segments/{segment_id}": {
      "delete": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "DELETE /api/segments/00c0d899-a595-4c66-9071-bc59374bbe6b HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nSegmentDeleteRequest request = SegmentDeleteRequest.newRequest(\"00c0d899-a595-4c66-9071-bc59374bbe6b\");\nResponse<String> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\nsegment = ua.Segment()\nsegment.from_id(airship, \"00c0d899-a595-4c66-9071-bc59374bbe6b\")\nresponse = segment.delete(airship)\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nsegment = UA::Segment.new(client: airship)\nsegment.from_id(id: '00c0d899-a595-4c66-9071-bc59374bbe6b')\nsegment.delete\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 204 No Content\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/segments/00c0d899-a595-4c66-9071-bc59374bbe6b HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nSegmentLookupRequest request = SegmentLookupRequest.newRequest(\"00c0d899-a595-4c66-9071-bc59374bbe6b\");\nResponse<SegmentView> response = client.execute(request);\n\n// Get the segment criteria\nSelector criteria = response.getBody().get().getCriteria();\n\n// Get the segment display name\nString displayName = response.getBody().get().getDisplayName();\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\nsegment = ua.Segment()\nresponse = segment.from_id(airship, \"00c0d899-a595-4c66-9071-bc59374bbe6b\")\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nsegment = UA::Segment.new(client: airship)\ndetails = segment.from_id(id: '00c0d899-a595-4c66-9071-bc59374bbe6b')\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"criteria\": {\n      \"and\": [\n         {\n            \"tag\": \"ipad\"\n         },\n         {\n            \"not\": {\n               \"tag\": \"foo\"\n            }\n         }\n      ]\n   },\n   \"display_name\": \"A segment\"\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "put": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "PUT /api/segments/00c0d899-a595-4c66-9071-bc59374bbe6b HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n   \"display_name\": \"Entertainment but not sports\",\n   \"criteria\": {\n      \"and\": [\n         {\"tag\": \"entertainment\"},\n         {\"not\":\n            {\"tag\": \"sports\"}\n         }\n      ]\n   }\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\n// Define the segment criteria\nSelector compound = Selectors.and(Selectors.tag(\"entertainment\"), Selectors.not(Selectors.tag(\"sports\")));\n\nSegmentRequest request = SegmentRequest.newUpdateRequest(\"00c0d899-a595-4c66-9071-bc59374bbe6b\");\nrequest.setCriteria(compound);\nrequest.setDisplayName(\"Entertainment but not sports\");\n\nResponse<String> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\nsegment = ua.Segment()\nsegment.from_id(airship, \"00c0d899-a595-4c66-9071-bc59374bbe6b\")\nsegment.display_name = \"Entertainment but not sports\"\nsegment.criteria = {'and': [{'tag': 'entertainment'},\n                            {'not': {'tag': 'sports'}}]}\nresponse = segment.update(airship)\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nsegment = UA::Segment.new(client: airship)\nsegment.from_id(id: '00c0d899-a595-4c66-9071-bc59374bbe6b')\nsegment.display_name = 'New Display Name'\nsegment.criteria = { 'tag' => 'new_tag' }\nsegment.update\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Length: 65\nContent-Type: application/vnd.urbanairship+json;version=3\n\n{\n   \"ok\": true,\n   \"operation_id\": \"1f93ca85-b8fd-4833-8d1a-6e2b7f4ceea9\"\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/sms/custom-response": {
      "post": [
        {
          "description": "SMS Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/sms/custom-response HTTP/1.1\nAuthorization: Bearer <authorization token>\nX-UA-Appkey: <app key>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n  \"sms\" : {\n      \"alert\": \"Your balance is $1234.56. Go to https://www.mybank.com/myaccount/my-balance?ua-tag-add=balance_prefs:sms to see more about your account.\",\n      \"shorten_links\": true\n  },\n  \"mobile_originated_id\" : \"28883743-4868-4083-ab5d-77ac4542531a\"\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setBearerToken(\"<token>\")\n        .build();\n\nCustomSmsResponseSmsPayload customSmsResponseChannelSms = CustomSmsResponseSmsPayload.newBuilder()\n        .setAlert(\"Your balance is $1234.56. Go to https://www.mybank.com/myaccount/my-balance?ua-tag-add=balance_prefs:sms to see more about your account.\")\n        .setMobileOriginatedId(\"28883743-4868-4083-ab5d-77ac4542531a\")\n        .setShortenLinks(true)\n        .build();\n\nCustomSmsResponseRequest customSmsResponseRequest = CustomSmsResponseRequest.newRequest(customSmsResponseChannelSms);\nResponse<CustomSmsResponseResponse> response = client.execute(customSmsResponseRequest);\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship(key=<app key>, token=<bearer_token>)\n\ncustom_response = ua.SmsCustomResponse(\n  airship=airship,\n  mobile_originated_id=\"28883743-4868-4083-ab5d-77ac4542531a\"\n)\n\ncustom_response.sms = ua.sms(\n  alert=\"Your balance is $1234.56. Go to https://www.mybank.com/myaccount/my-balance?ua-tag-add=balance_prefs:sms to see more about your account.\",\n  shorten_links=True,\n)\n\nr = custom_response.send()\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "MMS Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/sms/custom-response HTTP/1.1\nAuthorization: Bearer <bearer token>\nX-UA-Appkey: <app key>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n  \"mms\" : {\n    \"fallback_text\": \"See fun cat pics at https://example.com/cat/pics/12345678\",\n    \"slides\": [\n      {\n        \"media\": {\n          \"url\": \"https://example.com/cat/pics/12345678.gif\",\n          \"content_type\": \"image/gif\",\n          \"content_length\": 23098\n        }\n      }\n    ],\n    \"shorten_links\": true\n  },\n  \"mobile_originated_id\" : \"3e1e4fb3-2d3c-431e-96bf-9b235a12f84b\"\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setBearerToken(\"<token>\")\n        .build();\n\nMmsSlides mmsSlides = MmsSlides.newBuilder()\n        .setText(\"Test\")\n        .setMediaUrl(\"https://example.com/cat/pics/12345678.gif\")\n        .setMediaContentType(\"image/gif\")\n        .setMediaContentLength(23098)\n        .build();\n\nCustomSmsResponseMmsPayload customSmsResponseMmsPayload = CustomSmsResponseMmsPayload.newBuilder()\n        .setFallbackText(\"See fun cat pics at https://example.com/cat/pics/12345678\")\n        .setMobileOriginatedId(\"28883743-4868-4083-ab5d-77ac4542531a\")\n        .setSlides(mmsSlides)\n        .build();\n\nCustomSmsResponseRequest customSmsResponseRequest = customSmsResponseRequest.newRequest(customSmsResponseMmsPayload);\nResponse<CustomSmsResponseResponse> response = client.execute(customSmsResponseRequest);\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n      \"ok\": true,\n      \"operation_id\": \"f3d0993e-e3e1-4aae-b1c0-864a715bfaff\",\n      \"push_id\": \"7502abe6-e6ea-4f2b-906f-ebbab612c69e\"\n}\n"
            }
          ]
        }
      ]
    },
    "/api/sms/{msisdn}/keywords": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/sms/15035556789/keywords HTTP/1.1\nUser-Agent: Apache-HttpAsyncClient/4.0.1 (java 1.5)\nContent-Type: application/json\nAuthorization: Basic <user:pass>\nConnection: close\n\n{\n  \"keyword\" : \"stop\",\n  \"sender_ids\" : [ \"US:54321\", \"1234\"]\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nKeywordInteractionRequest request = KeywordInteractionRequest.newRequest(\"15035556789\")\n        .addKeyword(\"stop\")\n        .addSenderId(\"US:54321\")\n        .addSenderId(\"1234\");\n\nResponse<CustomSmsResponseResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "import datetime\nimport urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\n\ninteraction = ua.KeywordInteraction(\n                airship=airship,\n                keyword=\"stop\",\n                sender_ids=[\"US:54321\", \"1234\"]\n                timestamp=datetime.datetime(2021, 10, 8, 12, 0, 0)\n              )\nresponse = interaction.post()\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n  \"ok\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Example Failure Response",
          "examples": [
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 400 Bad Request\nContent-Type: application/json\n\n{\n  \"ok\" : false,\n  \"error\" : \"The following sender(s) are not configured for the 'stop' keyword: ['US:1234']\",\n  \"error_code\" : 400\n}\n"
            }
          ]
        }
      ]
    },
    "/api/subscription_lists": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/subscription_lists HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3;\n\n{\n   \"ok\" : true,\n   \"subscription_lists\": [\n       {\n           \"list_id\": \"example_listId-1\",\n           \"name\": \"A nice name readable name 1\",\n           \"channel_types\": [\"email\"]\n       },\n       {\n           \"list_id\": \"example_listId-2\",\n           \"name\": \"A nice readable name 2\",\n           \"description\": \"A very nice description for you.\",\n           \"channel_types\": [\"app\", \"web\"]\n       }\n   ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/subscription_lists/contacts/{contact_id}": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/subscription_lists/contacts/dc51e541-6d14-43fa-824b-700def260f64 HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3;\n\n{\n   \"ok\" : true,\n   \"subscription_lists\": [\n      {\n         \"list_ids\": [\"example_listId-2\", \"example_listId-4\"],\n         \"scope\": \"app\"\n      },\n      {\n         \"list_ids\": [\"example_listId-2\"],\n         \"scope\": \"web\"\n      }\n   ],\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/tag-lists": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/tag-lists HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\n\nlisting = ua.TagList.list(airship=airship)\n\nlisting.json()\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\nUA = Urbanairship\nairship = UA::Client.new(key: 'app_key', secret: 'master_secret')\n\ntag_list = UA::TagList.new(client: airship)\nlist_response = tag_list.list\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nTagListListingRequest tagListListingRequest = TagListListingRequest.newRequest();\nResponse<TagListListingResponse> response = client.execute(tagListListingRequest);\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nData-Tag: lists\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n  \"ok\" : true,\n  \"lists\" : [\n    {\n      \"name\" : \"ua_tags_foo\",\n      \"description\" : \"\",\n      \"extra\" : { \"key\": \"value\" },\n      \"add\":{\n        \"tag-group-name\": [\n          \"tag-value\"\n        ],\n        \"tag-group-name2\": [\n          \"tag-value2a\",\n          \"tag-velue2b\"\n        ]\n      },\n      \"remove\": {\n        \"tag-group-name3\": [\n          \"tag-value\"\n        ]\n      },\n      \"set\": {\n        \"tag-group-name4\": [\n          \"tag-value\"\n        ]\n      }\n      \"created\" : \"2013-08-08T20:41:06\",\n      \"last_updated\" : \"2014-05-01T18:00:27\",\n      \"channel_count\" : 0,\n      \"mutation_success_count\": 1000,\n      \"mutation_error_count\": 10,\n      \"error_path\":  \"https://go.urbanairship.com/api/tag-lists/users_a/errors\",\n      \"status\" : \"ready\"\n    },\n    {\n      \"...\" : \"...\"\n    }\n  ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/tag-lists HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n  \"name\":\"ua_tags_foobar\",\n  \"description\":\"Description of the file being uploaded\",\n  \"extra\":{\n      \"key\":\"value\",\n      \"another\":\"etc...\"\n  },\n  \"add\":{\n      \"tag-group-name\":[\n        \"tag-value\"\n      ],\n      \"tag-group-name2\":[\n        \"tag-value2a\",\n        \"tag-velue2b\"\n      ]\n  },\n  \"remove\":{\n      \"tag-group-name3\":[\n        \"tag-value\"\n      ]\n  },\n  \"set\":{\n      \"tag-group-name4\":[\n        \"tag-value\"\n      ]\n  }\n}\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 201 Created\nContent-Type: application/json\nLocation: https://go.urbanairship.com/api/tag-lists/ua_tags_foobar\n\n{\n  \"ok\" : true\n}\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\n\ntag_list = ua.TagList(\n  airship=airship, \n  list_name=\"ua_tags_my_new_list\", \n  description=\"First of many tags lists!\", \n  extra={\n      \"filename\": \"tags.csv\",\n      \"source\": \"CRM\"\n  }\n)\n\ntag_list.create()\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\nUA = Urbanairship\nairship = UA::Client.new(key: 'app_key', secret: 'master_secret')\ntags = {'tag_group_name': ['tag1', 'tag2']}\n\ntag_list = UA::TagList.new(client: airship)\ntag_list.name = 'ua_tags_list_name'\ntag_list.create(description: 'description', extra: {'key': 'value'}, add: tags)\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nTagListRequest tagListRequest = TagListRequest.newRequest()\n        .setName(\"ua_tags_my_new_list\");\n        .setDescription(\"First of many tags lists!\")\n        .addTags(\"tag_group1\", ImmutableSet.of(\"tag1\",\"tag2\"))\n        .removeTags(\"tag_group2\", ImmutableSet.of(\"tag3\",\"tag4\"))\n        .setTags(\"tag_group3\", ImmutableSet.of(\"tag4\",\"tag5\"))\n        .addExtra(\"test\",\"value\")\nResponse<String> response = client.execute(tagListRequest);\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/tag-lists/{list_name}/csv": {
      "put": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "PUT /api/tag-lists/foobar/csv HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: text/csv\n\nchannel_id\nc543f3a3-bc1d-4830-8dee-7532c6a23b9a\n6ba360a0-1f73-4ee7-861e-95f6c1ed6410\n15410d17-687c-46fa-bbd9-f255741a1523\nc2c64ef7-8f5c-470e-915f-f5e3da04e1df\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\n\ntag_list = ua.TagList(\n  airship=airship, \n  list_name=\"ua_tags_cool_list\", \n  description=\"example list\", \n)\n\ntag_list.upload(file_path=\"path/to/file.csv\")\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\nUA = Urbanairship\nairship = UA::Client.new(key: 'app_key', secret: 'master_secret')\n\ntag_list = UA::TagList.new(client: airship)\ntag_list.name = 'ua_tags_list_name'\ntag_list.upload(csv_file: 'file_content', gzip: true)\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n        \nTagListUploadRequest tagListUploadRequest = TagListUploadRequest.newRequest(\"ua_tags_cool_list\", \"path/to/file.csv\");\nResponse<String> response = client.execute(tagListUploadRequest);\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 202 Accepted\nContent-Type: application/json\n\n{\n  \"ok\" : true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Tag List CSV upload for SMS",
          "examples": [
            {
              "lang": "HTTP",
              "source": "PUT /api/tag-lists/foobar/csv HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: text/csv\n\nmsisdn,sms_sender,firstName\n5035556789,18588675309,Jane\n4155551212,18588675309,Rory\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\n\ntag_list = ua.TagList(\n  airship=airship, \n  list_name=\"foobar\", \n  description=\"example list\", \n)\n\ntag_list.upload(file_path=\"path/to/sms_file.csv\")\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\nUA = Urbanairship\nairship = UA::Client.new(key: 'app_key', secret: 'master_secret')\n\ntag_list = UA::TagList.new(client: airship)\ntag_list.name = 'ua_tags_list_name'\ntag_list.upload(csv_file: 'sms_file_content', gzip: true)\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nTagListUploadRequest tagListUploadRequest = TagListUploadRequest.newRequest(\"ua_tags_cool_list\", \"path/to/sms_file.csv.csv\");\nResponse<String> response = client.execute(tagListUploadRequest);\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 202 Accepted\nContent-Type: application/json\n\n{\n  \"ok\" : true\n}\n"
            }
          ]
        }
      ]
    },
    "/api/tag-lists/{list_name}/errors": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/tag-lists/foobar/csv HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+csv; version=3\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\n\ntag_list = ua.TagList(\n  airship=airship, \n  list_name=\"foobar\", \n  description=\"example list\", \n)\n\nerrors = tag_list.get_errors()\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\nUA = Urbanairship\nairship = UA::Client.new(key: 'app_key', secret: 'master_secret')\n\ntag_list = UA::TagList.new(client: airship)\nerror_csv = tag_list.errors\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nTagListErrorsRequest request = TagListErrorsRequest.newRequest(\"foobar\");\nResponse<String> response = client.execute(request);\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: text/csv\n\n8b4de669-16f1-4e71-9a1f-0c62a8235a65,ERROR,\"Unknown channel\"\nabcd,ERROR,\"Invalid msisdn\"\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/templates": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/templates HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nTemplateListingRequest request = TemplateListingRequest.newRequest();\nResponse<TemplateListingRequest> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\n\nfor template in ua.TemplateList(airship):\n  print (\n      template.template_id, template.created_at, template.modified_at,\n      template.last_used, template.name, template.description,\n      template.variables, template.push\n  )\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nData-Attribute: templates\nCount: 1\nTotal-Count: 1\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\" : true,\n    \"count\": 1,\n    \"total_count\": 1,\n    \"templates\": [\n        {\n            \"id\": \"ef34a8d9-0ad7-491c-86b0-aea74da15161\",\n            \"created_at\": \"2020-08-17T11:10:01Z\",\n            \"modified_at\": \"2020-08-17T11:10:01Z\",\n            \"last_used\": null,\n            \"name\": \"Welcome Message\",\n            \"description\": \"Our welcome message\",\n            \"variables\": [\n                {\n                    \"key\": \"TITLE\",\n                    \"name\": \"Title\",\n                    \"description\": \"e.g. Mr, Ms, Dr, etc.\",\n                    \"default_value\": \"\"\n                },\n                {\n                    \"key\": \"FIRST_NAME\",\n                    \"name\": \"First Name\",\n                    \"description\": \"Given name\",\n                    \"default_value\": null\n                },\n                {\n                    \"key\": \"LAST_NAME\",\n                    \"name\": \"Last Name\",\n                    \"description\": \"Family name\",\n                    \"default_value\": null\n                }\n            ],\n            \"push\": {\n                \"notification\": {\n                    \"alert\": \"Hello {{FIRST_NAME}}, this is your welcome message!\"\n                }\n            }\n        }\n    ],\n    \"next_page\": null,\n    \"prev_page\": null\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/templates HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n    \"name\": \"Welcome Message\",\n    \"description\": \"Our welcome message\",\n    \"variables\": [\n        {\n            \"key\": \"TITLE\",\n            \"name\": \"Title\",\n            \"description\": \"e.g. Mr, Ms, Dr, etc.\",\n            \"default_value\": \"\"\n        },\n        {\n            \"key\": \"FIRST_NAME\",\n            \"name\": \"First Name\",\n            \"description\": \"Given name\",\n            \"default_value\": null\n        },\n        {\n            \"key\": \"LAST_NAME\",\n            \"name\": \"Last Name\",\n            \"description\": \"Family name\",\n            \"default_value\": null\n        }\n    ],\n    \"push\": {\n        \"notification\": {\n            \"alert\": \"Hello {{FIRST_NAME}}, this is your welcome message!\"\n        }\n    }\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nTemplateVariable titleVariable = TemplateVariable.newBuilder()\n        .setKey(\"TITLE\")\n        .setName(\"Title\")\n        .setDescription(\"e.g. Mr, Ms, Dr, etc.\")\n        .setDefaultValue(\"\")\n        .build();\n\nTemplateVariable firstNameVariable = TemplateVariable.newBuilder()\n        .setKey(\"FIRST_NAME\")\n        .setName(\"First Name\")\n        .setDescription(\"Given name\")\n        .setDefaultValue(null)\n        .build();\n\nTemplateVariable lastNameVariable = TemplateVariable.newBuilder()\n        .setKey(\"LAST_NAME\")\n        .setName(\"Last Name\")\n        .setDescription(\"Family name\")\n        .setDefaultValue(\"\")\n        .build();\n\nPartialPushPayload partialPushPayload = PartialPushPayload.newBuilder()\n        .setNotification(Notification.newBuilder()\n                .setAlert(\"Hello {{TITLE}} {{FIRST_NAME}} {{LAST_NAME}}, this is your welcome message!\")\n                .build()\n        )\n        .build();\n\nTemplateRequest request = TemplateRequest.newRequest()\n        .setName(\"Welcome Message\")\n        .setDescription(\"Our welcome message\")\n        .addVariable(titleVariable)\n        .addVariable(firstNameVariable)\n        .addVariable(lastNameVariable)\n        .setPush(partialPushPayload);\n\nResponse<TemplateResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\nnew_template = ua.Template(airship)\nnew_template.name = 'Welcome Message'\nnew_template.description = 'Our welcome message'\nnew_template.variables = [\n    {\n        'key': 'TITLE',\n        'name': 'Title',\n        'description': 'e.g. Mr., Ms., Dr., etc.',\n        'default_value': ''\n    },\n    {\n        'key': 'FIRST_NAME',\n        'name': 'First Name',\n        'description': 'Given name',\n        'default_value': None\n    },\n    {\n        'key': 'LAST_NAME',\n        'name': 'Last Name',\n        'description': 'Family name',\n        'default_value': None\n    }\n]\nnew_template.push = {\n    'notification': {\n        'alert': 'Hello {{TITLE}} {{FIRST_NAME}} {{LAST_NAME}}, this is your welcome message!'\n    }\n}\nnew_template.create()\nprint (new_template.template_id)  # To get the template ID for future use\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 201 Created\nLocation: https://go.urbanairship.com/api/templates/ef34a8d9-0ad7-491c-86b0-aea74da15161\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\" : true,\n    \"operation_id\" : \"9ce808c8-7176-45dc-b79e-44aa74249a5a\",\n    \"template_id\": \"ef34a8d9-0ad7-491c-86b0-aea74da15161\"\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/templates/push": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/templates/push HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n    \"device_types\": [ \"ios\" ],\n    \"audience\": {\n       \"ios_channel\": \"b8f9b663-0a3b-cf45-587a-be880946e881\"\n    },\n    \"merge_data\": {\n        \"template_id\": \"ef34a8d9-0ad7-491c-86b0-aea74da15161\",\n        \"substitutions\": {\n            \"FIRST_NAME\": \"Bob\",\n            \"LAST_NAME\": \"Smith\",\n            \"TITLE\": \"\"\n        }\n    }\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nTemplatePushPayload payload = TemplatePushPayload.newBuilder()\n        .setAudience(Selectors.iosChannel(\"b8f9b663-0a3b-cf45-587a-be880946e881\"))\n        .setDeviceTypes(DeviceTypeData.of(DeviceType.IOS))\n        .setMergeData(TemplateSelector.newBuilder()\n                .setTemplateId(\"ef34a8d9-0ad7-491c-86b0-aea74da15161\")\n                .addSubstitution(\"FIRST_NAME\", \"Bob\")\n                .addSubstitution(\"LAST_NAME\", \"Smith\")\n                .addSubstitution(\"TITLE\", \"Mr.\")\n                .build())\n        .build();\n\nTemplatePushRequest request = TemplatePushRequest.newRequest()\n        .addTemplatePushPayload(payload);\n\nResponse<TemplateResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\npush = airship.create_template_push()\npush.audience = ua.ios_channel('b8f9b663-0a3b-cf45-587a-be880946e881')\npush.device_types = ua.device_types('ios')\npush.merge_data = ua.merge_data(\n    template_id='ef34a8d9-0ad7-491c-86b0-aea74da15161',\n    substitutions={\n        'FIRST_NAME': 'Bob',\n        'LAST_NAME': 'Smith',\n        'TITLE': ''\n    }\n)\nresponse = push.send()\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 202 Accepted\nContent-Length: 123\nData-Attribute: push_ids\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\" : true,\n    \"operation_id\" : \"df6a6b50-9843-0304-d5a5-743f246a4946\",\n    \"push_ids\": [\n        \"1cbfbfa2-08d1-92c2-7119-f8f7f670f5f6\"\n    ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/templates/push/validate": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/templates/push/validate HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n    \"device_types\": [ \"ios\" ],\n    \"audience\": {\n       \"ios_channel\": \"b8f9b663-0a3b-cf45-587a-be880946e881\"\n    },\n    \"merge_data\": {\n        \"template_id\": \"ef34a8d9-0ad7-491c-86b0-aea74da15161\",\n        \"substitutions\": {\n            \"FIRST_NAME\": \"Bob\",\n            \"LAST_NAME\": \"Smith\",\n            \"TITLE\": \"\"\n        }\n    }\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nTemplatePushPayload payload = TemplatePushPayload.newBuilder()\n        .setAudience(Selectors.iosChannel(\"b8f9b663-0a3b-cf45-587a-be880946e881\"))\n        .setDeviceTypes(DeviceTypeData.of(DeviceType.IOS))\n        .setMergeData(TemplateSelector.newBuilder()\n                .setTemplateId(\"ef34a8d9-0ad7-491c-86b0-aea74da15161\")\n                .addSubstitution(\"FIRST_NAME\", \"Bob\")\n                .addSubstitution(\"LAST_NAME\", \"Smith\")\n                .addSubstitution(\"TITLE\", \"Mr.\")\n                .build())\n        .build();\n\nTemplatePushRequest request = TemplatePushRequest.newRequest()\n        .addTemplatePushPayload(payload)\n        .setValidateOnly(true);\n\nResponse<TemplateResponse> response = client.execute(request);\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Length: 123\nData-Attribute: push_ids\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\" : true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/templates/schedules": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/templates/schedules HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n[\n    {\n        \"name\": \"Hello Bob\",\n        \"schedule\": {\n           \"scheduled_time\": \"2020-05-02T22:00:00Z\"\n        },\n        \"device_types\": [ \"ios\" ],\n        \"audience\": {\n           \"ios_channel\": \"b8f9b663-0a3b-cf45-587a-be880946e881\"\n        },\n        \"merge_data\": {\n            \"template_id\": \"ef34a8d9-0ad7-491c-86b0-aea74da15161\",\n            \"substitutions\": {\n                \"FIRST_NAME\": \"Bob\",\n                \"LAST_NAME\": \"Takahashi\",\n                \"TITLE\": null\n            }\n        }\n    },\n    {\n        \"name\": \"Hello Joe\",\n        \"schedule\": {\n           \"scheduled_time\": \"2020-05-05T18:00:00Z\"\n        },\n        \"device_types\": [ \"android\" ],\n        \"audience\": {\n           \"android_channel\": \"df6a6b50-9843-0304-d5a5-743f246a4946\"\n        },\n        \"merge_data\": {\n            \"template_id\": \"ef34a8d9-0ad7-491c-86b0-aea74da15161\",\n            \"substitutions\": {\n                \"FIRST_NAME\": \"Joe\",\n                \"LAST_NAME\": \"Smith\",\n                \"TITLE\": \"Sir\"\n            }\n        }\n    }\n]\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nTemplateScheduledPushPayload payload = TemplateScheduledPushPayload.newBuilder()\n        .setAudience(Selectors.iosChannel(\"b8f9b663-0a3b-cf45-587a-be880946e881\"))\n        .setDeviceTypes(DeviceTypeData.of(DeviceType.IOS))\n        .setMergeData(TemplateSelector.newBuilder()\n                .setTemplateId(\"ef34a8d9-0ad7-491c-86b0-aea74da15161\")\n                .addSubstitution(\"FIRST_NAME\", \"Bob\")\n                .addSubstitution(\"LAST_NAME\", \"Takahashi\")\n                .addSubstitution(\"TITLE\", \"Dr.\")\n                .build())\n        .setSchedule(Schedule.newBuilder()\n                .setScheduledTimestamp(DateTime.parse(\"2020-05-05T18:00:00Z\"))\n                .build())\n        .build();\n\nTemplateScheduledPushRequest request = TemplateScheduledPushRequest.newRequest()\n                                          .addTemplateScheduledPushPayload(payload);\nResponse<ScheduleResponse> response = client.execute(request);\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 202 Accepted\nContent-Length: 123\nData-Attribute: schedule_urls\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\" : true,\n    \"operation_id\" : \"efb18e92-9a60-6689-45c2-82fedab36399\",\n    \"schedule_urls\" : [\n        \"http://go.urbanairship/api/schedules/a0cef4f9-1fcd-47ef-b459-01f432b64043\",\n        \"http://go.urbanairship/api/schedules/fe2dab5e-f837-4707-8d0c-0e8c589ef4cf\"\n    ],\n    \"schedule_ids\" : [\n        \"a0cef4f9-1fcd-47ef-b459-01f432b64043\",\n        \"fe2dab5e-f837-4707-8d0c-0e8c589ef4cf\"\n    ],\n    \"schedules\" : [\n        {\n            \"url\" : \"http://go.urbanairship/api/schedules/a0cef4f9-1fcd-47ef-b459-01f432b64043\",\n            \"name\": \"Hello Joe\",\n            \"schedule\" : { \"...\" },\n            \"push\" : { \"...\" },\n            \"push_ids\": [ \"6a5ecb9c-46ee-4af4-9ced-9308121afaf9\" ]\n        },\n        {\n            \"url\" : \"http://go.urbanairship/api/schedules/fe2dab5e-f837-4707-8d0c-0e8c589ef4cf\",\n            \"name\": \"Hello Bob\",\n            \"schedule\" : { \"...\" },\n            \"push\" : { \"...\" },\n            \"push_ids\": [ \"5162bbf8-7de7-4040-a64d-e018b71f02f6\" ]\n        }\n    ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/templates/{template_id}": {
      "delete": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "DELETE /api/templates/ef34a8d9-0ad7-491c-86b0-aea74da15161 HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nTemplateDeleteRequest request = TemplateDeleteRequest.newRequest(\"ef34a8d9-0ad7-491c-86b0-aea74da15161\");\nResponse<TemplateResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\ntemplate_id = 'ef34a8d9-0ad7-491c-86b0-aea74da15161'\n\n# Delete via template lookup\nresponse = ua.Template(airship).lookup(template_id).delete()\n\n# OR, if you want to delete a template without fetching it from the API\nresponse = ua.Template(airship).delete(template_id)\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true,\n    \"operation_id\": \"a6394ff8-8a65-4494-ad06-677eb8b7ad6a\"\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/templates/ef34a8d9-0ad7-491c-86b0-aea74da15161 HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nTemplateListingRequest request = TemplateListingRequest.newRequest(\"ef34a8d9-0ad7-491c-86b0-aea74da15161\");\nResponse<TemplateListingResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\ntemplate_id = 'ef34a8d9-0ad7-491c-86b0-aea74da15161'\ntemplate = ua.Template(airship).lookup(template_id)\nprint (\n    template.template_id, template.created_at, template.modified_at,\n    template.last_used, template.name, template.description,\n    template.variables, template.push\n)\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nData-Attribute: template\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\" : true,\n    \"template\": {\n        \"id\": \"ef34a8d9-0ad7-491c-86b0-aea74da15161\",\n        \"created_at\": \"2020-08-17T11:10:02Z\",\n        \"modified_at\": \"2020-08-17T11:10:02Z\",\n        \"last_used\": null,\n        \"name\": \"Welcome Message\",\n        \"description\": \"Our welcome message\",\n        \"variables\": [\n            {\n                \"key\": \"TITLE\",\n                \"name\": \"Title\",\n                \"description\": \"e.g. Mr, Ms, Dr, etc.\",\n                \"default_value\": \"\"\n            },\n            {\n                \"key\": \"FIRST_NAME\",\n                \"name\": \"First Name\",\n                \"description\": \"Given name\",\n                \"default_value\": null\n            },\n            {\n                \"key\": \"LAST_NAME\",\n                \"name\": \"Last Name\",\n                \"description\": \"Family name\",\n                \"default_value\": null\n            }\n        ],\n        \"push\": {\n            \"notification\": {\n                \"alert\": \"Hello {{FIRST_NAME}}, this is your welcome message!\"\n            }\n        }\n    }\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/templates/ef34a8d9-0ad7-491c-86b0-aea74da15161 HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n    \"name\": \"Welcome Message\",\n    \"description\": \"Our welcome message\",\n    \"push\": {\n        \"notification\": {\n            \"alert\": \"Hello {{FIRST_NAME}} {{LAST_NAME}}, this is your welcome message!\"\n        }\n    }\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nPartialPushPayload partialPushPayload = PartialPushPayload.newBuilder()\n        .setNotification(Notification.newBuilder()\n                .setAlert(\"Hello {{FIRST_NAME}} {{LAST_NAME}}, this is your welcome message!\")\n                .build()\n        )\n        .build();\n\nTemplateRequest request = TemplateRequest.newRequest(\"ef34a8d9-0ad7-491c-86b0-aea74da15161\")\n        .setName(\"Welcome Message\")\n        .setDescription(\"Our welcome message\")\n        .setPush(partialPushPayload);\n\nResponse<TemplateResponse> response = client.execute(request);\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true,\n    \"operation_id\": \"df6a6b50-9843-0304-d5a5-743f246a4946\"\n}\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\ntemplate_id = 'ef34a8d9-0ad7-491c-86b0-aea74da15161'\nupdated_template = ua.Template(airship)\nupdated_template.push = {\n    'notification': {\n        'alert': 'Hi {{FIRST_NAME}} {{LAST_NAME}}!'\n    }\n}\nresponse = updated_template.update(template_id)\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Alternatively, call the lookup function on your updated template:",
          "examples": [
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship('<app key>', '<master secret>')\ntemplate_id = 'ef34a8d9-0ad7-491c-86b0-aea74da15161'\nupdated_template = ua.Template(airship).lookup(template_id)\nupdated_template.push = {\n    'notification': {\n        'alert': 'Greetings {{TITLE}} {{FIRST_NAME}} {{LAST_NAME}}!'\n    }\n}\nresponse = updated_template.update()\n"
            }
          ]
        }
      ]
    },
    "/api/user/messages/{push_id}": {
      "delete": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "DELETE /api/user/messages/(push_id) HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nairship = ua.Airship(key=\"<app key>\", secret=\"<master secret>\", location=\"<us|eu>\")\n\nua.Push.message_center_delete(airship=airship, \n                              push_id=\"941086fd-f7db-493b-a8a7-1f5a7dc6aae4\")\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\n InboxDeleteRequest request = InboxDeleteRequest.newRequest(\"68b2d71f-1c10-4592-bd96-2725aee0ae57\");\n Response<String> response = client.execute(request);\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 202 Accepted\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    }
  }
}