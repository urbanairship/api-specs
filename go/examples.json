{
  "components": {
    "schemas": {
      "absoluteWindow": [
        {
          "description": "Example absolute time window",
          "examples": [
            {
              "lang": "json",
              "source": "{ \"audience\":\n   {\n      \"date\": {\n         \"days\": {\n            \"start\": \"2020-01-01\",\n            \"end\": \"2020-01-15\"\n         }\n      }\n   }\n}\n"
            }
          ]
        }
      ],
      "actionsObject": [
        {
          "description": "Example tag actions",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"actions\": {\n      \"add_tag\": [\n         \"airship\",\n         \"blimp\"\n      ],\n      \"remove_tag\": [\n         \"boat\",\n         \"car\"\n      ],\n      \"share\": \"Check out Airship!\",\n      \"open\": {\n         \"type\": \"url\",\n         \"content\": \"http://www.urbanairship.com\"\n      },\n      \"app_defined\": {\n         \"some_app_defined_action\": \"some_value\"\n      }\n   }\n}\n"
            }
          ]
        },
        {
          "description": "Example landing page action",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"actions\": {\n      \"open\": {\n         \"type\": \"landing_page\",\n         \"content\": {\n            \"body\": \"<html>content</html>\",\n            \"content_type\": \"text/html\",\n            \"content_encoding\": \"utf-8\"\n         },\n         \"fallback_url\" : \"https://www.urbanairship.com/settings\"\n      }\n   }\n}\n"
            }
          ]
        },
        {
          "description": "Example open phone app",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"actions\": {\n      \"open\": {\n         \"type\": \"url\",\n         \"content\": \"tel:15035551234\"\n      }\n   }\n}\n"
            }
          ]
        },
        {
          "description": "Example deep link action",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"actions\": {\n      \"open\": {\n         \"type\": \"deep_link\",\n         \"content\": \"prefs\",\n         \"fallback_url\": \"https://www.urbanairship.com/settings\"\n      }\n   }\n}\n"
            }
          ]
        },
        {
          "description": "Example Subscription List action",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"actions\": {\n      \"subscription_list\": [\n         {\n            \"action\": \"subscribe\",\n            \"type\": \"contact\",\n            \"list_id\": \"cool_deals\",\n            \"scope\": \"app\"\n         }\n      ]\n   }\n}\n"
            }
          ]
        }
      ],
      "activityObject": [
        {
          "description": "Activity audience object",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"audience\": {\n      \"activity\": \"app_open\",\n      \"operator\": \"greater\",\n      \"value\": 2,\n      \"after\": 3,\n      \"precision\": \"days\",\n      \"where\": {\n         \"property\": \"/_triggering_push/campaigns/categories\",\n         \"operator\": \"equals\",\n         \"value\": \"neowise\"\n      }\n   }\n}\n"
            }
          ]
        }
      ],
      "alertItem": [
        {
          "description": "Example preference form alert item",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"type\": \"alert\",\n  \"id\": \"efe3e322-33c7-4157-b765-046b9cd2647a\",\n  \"display\": {\n    \"icon\": \"https://example.com/cool_icon.png\",\n    \"name\": \"Turn on notifications\",\n    \"description\": \"You're not opted into notifications. Don't miss out!\"\n  },\n  \"conditions\": [\n    {\n      \"type\": \"notification_opt_in\",\n      \"when_status\": \"opt_out\"\n    }\n  ],\n  \"button\": {\n    \"text\": \"Opt-in\",\n    \"content_description\": \"Enable notifications on this device\",\n    \"actions\": {\n      \"enable_feature\": \"user_notifications\"\n    }\n  }\n}\n"
            }
          ]
        }
      ],
      "amazonOverrideWithTemplate": [
        {
          "description": "Fire OS override with a template",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"amazon\": {\n      \"title\": \"Shoe sale on {{level}} floor!\",\n      \"alert\": \"All the shoes are on sale {{name}}!\",\n      \"summary\": \"Don't miss out!\",\n      \"icon\": \"shoes\",\n      \"icon_color\": \"{{iconColor}}\"\n   }\n}\n"
            }
          ]
        },
        {
          "description": "Fire OS override with a template_id",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"amazon\": {\n       \"template\": {\n           \"template_id\": \"608f1f6c-8860-c617-a803-b187b491568e\"\n       }\n   }\n}\n"
            }
          ]
        }
      ],
      "androidOverrideObject": [
        {
          "description": "Android override in a notification",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"android\": {\n      \"title\": \"Shoe sale\",\n      \"alert\": \"All the shoes are on sale!\",\n      \"summary\": \"Don't miss out!\",\n      \"extra\": {\n          \"url\": \"http://example.com\",\n          \"story_id\": \"1234\",\n          \"moar\": \"{\\\"key\\\": \\\"value\\\"}\"\n      },\n      \"icon\": \"shoes\",\n      \"icon_color\": \"#8B4513\",\n      \"notification_channel\": \"promos\"\n   }\n }\n"
            }
          ]
        },
        {
          "description": "Example wearable notification",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"android\": {\n      \"local_only\": true,\n      \"wearable\": {\n         \"background_image\": \"http://example.com/background.png\",\n         \"extra_pages\": [\n            {\n               \"title\": \"Page 1 title - optional title\",\n               \"alert\": \"Page 1 title - optional alert\"\n            },\n            {\n               \"title\": \"Page 2 title - optional title\",\n               \"alert\": \"Page 2 title - optional alert\"\n            }\n         ],\n         \"interactive\": {\n            \"type\": \"ua_yes_no_foreground\",\n            \"button_actions\": {\n               \"yes\": {\n                  \"add_tag\": \"butter\",\n                  \"remove_tag\": \"cake\",\n                  \"open\": {\n                     \"type\": \"url\",\n                     \"content\": \"http://www.urbanairship.com\"\n                  }\n               },\n               \"no\": {\n                  \"add_tag\": \"nope\"\n               }\n            }\n         }\n      }\n   }\n}\n"
            }
          ]
        },
        {
          "description": "Android override in a notification with notification_tag",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"android\": {\n       \"notification_tag\": \"push-xyz\"\n   }\n }\n"
            }
          ]
        }
      ],
      "androidOverrideWithTemplate": [
        {
          "description": "Android override with a template",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"android\": {\n      \"title\": \"Shoe sale on {{level}} floor!\",\n      \"alert\": \"All the shoes are on sale {{name}}!\",\n      \"summary\": \"Don't miss out!\",\n      \"icon\": \"shoes\",\n      \"icon_color\": \"{{iconColor}}\",\n      \"extra\": {\n            \"url\": \"http://example.com\",\n            \"story_id\": \"1234\",\n            \"moar\": \"{\\\"key\\\": \\\"value\\\"}\"\n      },\n      \"notification_channel\": \"promos\"\n   }\n}\n"
            }
          ]
        },
        {
          "description": "Android override with a template_id",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"android\": {\n      \"template\": {\n            \"template_id\": \"608f1f6c-8860-c617-a803-b187b491568e\"\n      },\n      \"extra\": {\n            \"url\": \"http://example.com\",\n            \"story_id\": \"1234\",\n            \"moar\": \"{\\\"key\\\": \\\"value\\\"}\"\n      },\n      \"notification_channel\": \"promos\"\n   }\n}\n"
            }
          ]
        }
      ],
      "atomicSelector": [
        {
          "description": "Example audience selection by tag",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"audience\": {\n      \"tag\": \"sfGiants\",\n      \"group\": \"favorite_teams\"\n   }\n}\n"
            }
          ]
        },
        {
          "description": "Example SMS channel audience",
          "examples": [
            {
              "lang": "json",
              "source": "{\n    \"audience\" : {\n        \"sms_id\" :  {\n            \"sender\" : \"12345\",\n            \"msisdn\" : \"15552243311\"\n        }\n    }\n}\n"
            }
          ]
        },
        {
          "description": "Example audience segment",
          "examples": [
            {
              "lang": "json",
              "source": "{\n    \"audience\" : {\n        \"segment\" : \"<segment-id>\"\n    }\n}\n"
            }
          ]
        },
        {
          "description": "Example audience of Named Users",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"audience\" : {\n      \"named_user\" : \"user-id-54320\"\n   }\n}\n"
            }
          ]
        },
        {
          "description": "Example audience of static list",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"audience\" : {\n      \"static_list\" : \"name_of_list\"\n   }\n}\n"
            }
          ]
        }
      ],
      "attributes": [
        {
          "description": "Example Attributes object",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"device_attributes\": {\n      \"ua_device_os\": \"10\",\n      \"ua_country\": \"US\",\n      \"ua_device_model\": \"SM-G973U\",\n      \"ua_local_tz\": \"America/Los_Angeles\",\n      \"ua_app_version\": \"2020-02-01T002322-goat\",\n      \"ua_location_settings\": \"true\",\n      \"ua_language\": \"en\",\n      \"ua_sdk_version\": \"13.1.0\",\n      \"ua_carrier\": \"Verizon \"\n   },\n   \"attributes\": {\n      \"first_name\": \"Cool\",\n      \"last_name\": \"Person\",\n      \"birthdate\": \"1983-03-15T00:00:00\",\n   }\n}\n"
            }
          ]
        }
      ],
      "attributesObject": [
        {
          "description": "Attributes assignment",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"attributes\": [\n    {\n      \"action\": \"remove\",\n      \"key\": \"minor_league\"\n    },\n    {\n      \"action\": \"set\",\n      \"key\": \"position\",\n      \"value\": \"LF\"\n    }\n  ]\n}\n"
            }
          ]
        }
      ],
      "audienceLimitsObject": [
        {
          "description": "Audience limits",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"options\": {\n    \"audience_limits\": {\n      \"max_recipients\": 1000\n    }\n  }\n}\n"
            }
          ]
        }
      ],
      "banListParametersObject": [
        {
          "description": "Ban List parameters",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"ban_list_parameters\": {\n    \"category\": \"api-cat\"\n  }\n}\n"
            }
          ]
        }
      ],
      "batchUpdateChannelRequestBody": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"tags\": {\n      \"add\": {\n         \"group1\": [\"tag1\"],\n         \"group2\": [\"tag3\"]\n      },\n      \"set\": {\n         \"group2\": [\"tag4\"]\n      }\n   },\n   \"attributes\": [\n      {\n         \"action\": \"remove\",\n         \"key\": \"minor_league\"\n      },\n      {\n         \"action\": \"set\",\n         \"key\": \"position\",\n         \"value\": \"LF\"\n      }\n   ],\n   \"subscription_lists\": [\n      {\n         \"action\": \"subscribe\",\n         \"list_id\": \"intriguing_ideas\"\n      },\n      {\n         \"action\": \"unsubscribe\",\n         \"list_id\": \"animal_facts\"\n      }\n   ]\n}\n"
            }
          ]
        }
      ],
      "billableChannelObject": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "json",
              "source": "{\n    \"device_type\": \"ios\",\n    \"channel_id\": \"b8f9b663-0a3b-cf45-587a-be880946e881\",\n    \"last_registration\": \"2023-08-01T18:00:27\",\n    \"uninstalled\": \"2022-08-01T19:00:27\"\n}\n"
            }
          ]
        }
      ],
      "billingCountObject": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"device_type\": \"ios\",\n  \"count\": 1234,\n  \"last_updated\": \"2023-10-01T18:00:27\"\n}\n"
            }
          ]
        }
      ],
      "bulkSendObject": [
        {
          "description": "Bulk send object",
          "examples": [
            {
              "lang": "json",
              "source": "{\n    \"audience\" : {\n        \"bulk_id\" : \"36d5a261-0454-40f5-b952-942c4b2b0f22\"\n    },\n    \"device_types\" : [ \"open::rcs\" ],\n    \"notification\" : {\n        \"alert\" : \"Welcome to the winter sale!!\"\n    },\n    \"campaigns\": {\n        \"categories\": [\"winter sale\", \"west coast\"]\n    }\n}            \n"
            }
          ]
        }
      ],
      "campaignsObject": [
        {
          "description": "Example campaigns in a push payload",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"audience\": \"all\",\n   \"notification\": {\n      \"alert\": \"Taco Kitten wins Kentucky Derby by a whisker\"\n   },\n   \"campaigns\": {\n      \"categories\": [\n         \"kittens\",\n         \"tacos\",\n         \"horse_racing\"\n      ]\n   },\n   \"device_types\": [ \"ios\", \"android\" ]\n}\n"
            }
          ]
        }
      ],
      "channelContactOperationIdentifyActionObject": [
        {
          "description": "Example identify contact operation",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"device_info\": {\n    \"device_type\": \"android\"\n  },\n  \"action\": {\n    \"type\": \"identify\",\n    \"named_user_id\": \"my-named-user\",\n    \"contact_id\": \"a29ce8c7-4a63-37cb-9716-dffd3d419c4a\"\n  }\n}\n"
            }
          ]
        }
      ],
      "channelContactOperationResetActionObject": [
        {
          "description": "Example reset contact operation",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"device_info\": {\n    \"device_type\": \"android\"\n  },\n  \"action\": {\n    \"type\": \"reset\"\n  }\n}\n"
            }
          ]
        }
      ],
      "channelContactOperationResolveActionObject": [
        {
          "description": "Example resolve contact operation",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"device_info\": {\n    \"device_type\": \"ios\"\n  },\n  \"action\": {\n    \"type\": \"resolve\"\n  }\n}\n"
            }
          ]
        }
      ],
      "channelListingObject": [
        {
          "description": "Example iOS channel",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"channel_id\": \"b8f9b663-0a3b-cf45-587a-be880946e881\",\n   \"device_type\": \"ios\",\n   \"installed\": true,\n   \"background\": true,\n   \"opt_in\": false,\n   \"push_address\": \"FE66489F304DC75B8D6E8200DFF8A456E8DAEACEC428B427E9518741C92C6660\",\n   \"created\": \"2020-08-08T20:41:06\",\n   \"last_registration\": \"2020-05-01T18:00:27\",\n   \"named_user_id\": \"some_id_that_maps_to_your_systems\",\n   \"alias\": null,\n   \"tags\": [\n      \"tag1\",\n      \"tag2\"\n   ],\n\n   \"tag_groups\": {\n      \"sports fan\": [\"Federer fan\", \"Messi fan\"],\n      \"music fan\": [ \"Beyonce\", \"Muse\" ],\n      \"ua_locale_country\": [ \"US\" ],\n      \"ua_locale_language\": [ \"en\" ]\n   },\n\n   \"ios\": {\n      \"badge\": 0,\n      \"quiettime\": {\n         \"start\": null,\n         \"end\": null\n      },\n      \"tz\": \"America/Los_Angeles\"\n   }\n}\n"
            }
          ]
        }
      ],
      "channelRequestBody": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "json",
              "source": "{  \"channel\" : {\n      \"device_type\": \"ios\",\n      \"opt_in\": true,\n      \"background\": true,\n      \"push_address\": \"FFFF\",\n      \"set_tags\": true,\n      \"tags\": [\"asdf\"],\n      \"ios\": { \"badge\": 0,\n               \"quiettime\": { \"start\": \"22:00\", \"end\": \"06:00\" },\n               \"tz\": \"America/Los_Angeles\" } },\n   \"identity_hints\": {\n      \"user_id\": \"eDAXv7aQTQaAaUHOXuePLQ\",\n      \"apid\": \"df6a6b50-9843-0304-d5a5-743f246a4946\" } }\n"
            }
          ]
        }
      ],
      "channelSubscriptionItem": [
        {
          "description": "Example preference form channel subscription item",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"type\": \"channel_subscription\",\n  \"id\": \"efe3e322-33c7-4157-b765-046b9cd2647a\",\n  \"display\": {\n    \"description\": \"Be the first to know about what's on sale each week.\",\n    \"name\": \"Weekly Special\"\n  },\n  \"subscription_id\": \"weekly_special\"\n}\n"
            }
          ]
        }
      ],
      "complexEventSelector": [
        {
          "description": "Compound event selector using 'and'",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"and\": [\n      {\n         \"key\": \"name\",\n         \"value\": {\n            \"equals\": \"POWER_LEVEL\"\n         }\n      },\n      {\n         \"key\": \"value\",\n         \"value\": {\n            \"greater_than\": 9000,\n            \"at_most\": 10000\n         }\n      }\n   ]\n}\n"
            }
          ]
        }
      ],
      "compoundSelector": [
        {
          "description": "Example with implicit `OR`",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"audience\" : {\n      \"tag\" : [\"apples\", \"oranges\", \"bananas\"]\n   }\n}\n"
            }
          ]
        },
        {
          "description": "Example with nested selectors",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"audience\": {\n      \"AND\": [\n         {\"OR\": [\n            {\"tag\": \"sports\"},\n            {\"tag\": \"entertainment\"}\n         ]},\n         {\"tag\": \"language_en\"}\n      ]\n   }\n}\n"
            }
          ]
        },
        {
          "description": "Example `NOT` selector",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"audience\": {\n      \"AND\": [\n         { \"tag\": \"Federer fan\" },\n         { \"NOT\":\n            { \"tag\": \"Messi fan\" }\n         }\n      ]\n   }\n}\n"
            }
          ]
        }
      ],
      "contactManagementItem": [
        {
          "description": "Example preference form contact management item (SMS)",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"type\": \"contact_management\",\n  \"platform\": \"sms\",\n  \"id\": \"efe3e322-33c7-4157-b765-046b9cd2647a\",\n  \"display\": {\n    \"name\": \"SMS\",\n    \"description\": \"Sign up for special promotions via text messaging\"\n  },\n  \"registration_options\": {\n    \"resend\": {\n      \"interval\": 120,\n      \"message\": \"Not yet verified\",\n      \"button\": {\n        \"text\": \"Resend\"\n      },\n      \"on_success\": {\n        \"name\": \"Verification resent\",\n        \"description\": \"Check your phone for a new verification text.\",\n        \"button\": {\n          \"text\": \"OK\"\n        }\n      }\n    },\n    \"error_messages\": {\n      \"invalid\": \"Please enter a valid phone number.\",\n      \"default\": \"Something went wrong, please try again.\"\n    },\n    \"country_label\": \"Country\",\n    \"msisdn_label\": \"Phone number\",\n    \"senders\": [\n      {\n        \"sender_id\": \"87503\",\n        \"placeholder_text\": \"XXX-XXX-XXXX\",\n        \"country_code\": \"US\",\n        \"country_calling_code\": \"1\",\n        \"display_name\": \"🇺🇸 +1\"\n      }\n    ]\n  },\n  \"empty_message\": \"Add your first phone number now!\",\n  \"add\": {\n    \"button\": {\n      \"text\": \"Add\",\n      \"content_description\": \"Add a phone number\"\n    },\n    \"view\": {\n      \"type\": \"prompt\",\n      \"display\": {\n        \"title\": \"Sign up\",\n        \"description\": \"Enter your number to sign up for sweet deals\",\n        \"footer\": \"By submitting, you agree to our [Terms and Conditions](https://example.com).\"\n      },\n      \"submit_button\": {\n        \"text\": \"Submit\"\n      },\n      \"cancel_button\": {\n        \"text\": \"Cancel\"\n      },\n      \"close_button\": {\n        \"content_description\": \"Close\"\n      },\n      \"on_submit\": {\n        \"name\": \"Success!\",\n        \"description\": \"Check your phone for a verification text.\",\n        \"button\": {\n          \"text\": \"OK\"\n        }\n      }\n    }\n  },\n  \"remove\": {\n    \"button\": {\n      \"content_description\": \"Remove phone number\"\n    },\n    \"view\": {\n      \"type\": \"prompt\",\n      \"display\": {\n        \"title\": \"Are you sure?\",\n        \"description\": \"You'll no longer receive texts.\",\n      },\n      \"submit_button\": {\n        \"text\": \"Yes, very sure\"\n      },\n      \"cancel_button\": {\n        \"text\": \"No wait\"\n      },\n      \"close_button\": {\n        \"content_description\": \"Close\"\n      },\n      \"on_submit\": {\n        \"name\": \"Sorry to see you go!\",\n        \"description\": \"You've been opted out.\",\n        \"button\": {\n          \"text\": \"OK\"\n        }\n      }\n    }\n  },\n}\n"
            }
          ]
        },
        {
          "description": "Example preference form contact management item (Email)",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"type\": \"contact_management\",\n  \"platform\": \"email\",\n  \"id\": \"efe3e322-33c7-4157-b765-046b9cd2647a\",\n  \"display\": {\n    \"name\": \"Email\",\n    \"description\": \"Sign up for special promotions via email\"\n  },\n  \"registration_options\": {\n    \"resend\": {\n      \"interval\": 120,\n      \"message\": \"Not yet verified\",\n      \"button\": {\n        \"text\": \"Resend\"\n      },\n      \"on_success\": {\n        \"name\": \"Verification resent\",\n        \"description\": \"Check your inbox for a new verification message.\",\n        \"button\": {\n          \"text\": \"OK\"\n        }\n      }\n    },\n    \"error_messages\": {\n      \"invalid\": \"Please enter a valid email address.\",\n      \"default\": \"Something went wrong, please try again.\"\n    },\n    \"address_label\": \"Email address\",\n    \"placeholder\": \"coolguy@example.com\",\n    \"properties\": {\n      \"source\": \"Cool Preference Center\"\n    }\n  },\n  \"empty_message\": \"No emails yet!\",\n  \"add\": {\n    \"button\": {\n      \"text\": \"Add\",\n      \"content_description\": \"Add an email address\"\n    },\n    \"view\": {\n      \"type\": \"prompt\",\n      \"display\": {\n        \"title\": \"Sign up\",\n        \"description\": \"Enter your email to sign up for sweet deals\",\n        \"footer\": \"By submitting, you agree to our [Terms and Conditions](https://example.com).\"\n      },\n      \"submit_button\": {\n        \"text\": \"Submit\"\n      },\n      \"cancel_button\": {\n        \"text\": \"Cancel\"\n      },\n      \"close_button\": {\n        \"content_description\": \"Close\"\n      },\n      \"on_submit\": {\n        \"name\": \"Success!\",\n        \"description\": \"Check your inbox for a verification message.\",\n        \"button\": {\n          \"text\": \"OK\"\n        }\n      }\n    }\n  },\n  \"remove\": {\n    \"button\": {\n      \"content_description\": \"Remove email\"\n    },\n    \"view\": {\n      \"type\": \"prompt\",\n      \"display\": {\n        \"title\": \"Are you sure?\",\n        \"description\": \"You'll no longer receive emails.\"\n      },\n      \"submit_button\": {\n        \"text\": \"Yes, very sure\"\n      },\n      \"cancel_button\": {\n        \"text\": \"No wait\"\n      },\n      \"close_button\": {\n        \"content_description\": \"Close\"\n      },\n      \"on_submit\": {\n        \"name\": \"Sorry to see you go!\",\n        \"description\": \"You've been opted out.\",\n        \"button\": {\n          \"text\": \"OK\"\n        }\n      }\n    }\n  },\n}\n"
            }
          ]
        }
      ],
      "contactSubscriptionGroupItem": [
        {
          "description": "Example preference form contact subscription group item",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"type\": \"contact_subscription_group\",\n  \"id\": \"efe3e322-33c7-4157-b765-046b9cd2647a\",\n  \"display\": {\n    \"description\": \"Be the first to know about what's on sale each week.\",\n    \"name\": \"Weekly Special\"\n  },\n  \"subscription_id\": \"weekly_special\",\n  \"components\": [\n    {\n      \"scopes\": [\"app\"],\n      \"display\": {\n        \"name\": \"App\"\n      }\n    },\n    {\n      \"scopes\": [\"email\"],\n      \"display\": {\n        \"name\": \"Email\"\n      }\n    }\n  ]\n}\n"
            }
          ]
        }
      ],
      "contactSubscriptionItem": [
        {
          "description": "Example preference form contact subscription item",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"type\": \"contact_subscription\",\n  \"id\": \"efe3e322-33c7-4157-b765-046b9cd2647a\",\n  \"display\": {\n    \"description\": \"Be the first to know about what's on sale each week.\",\n    \"name\": \"Weekly Special\"\n  },\n  \"subscription_id\": \"weekly_special\",\n  \"scopes\": [\"app\"]\n}\n"
            }
          ]
        }
      ],
      "contactSubscriptionListObject": [
        {
          "description": "Example contact Subscription Lists object",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"list_ids\": [\"example_listId-2\", \"example_listId-4\"],\n   \"scope\": \"app\"\n}\n"
            }
          ]
        }
      ],
      "contactsScopedBatchItem": [
        {
          "description": "Example contacts scoped batch item",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"scope\": [\"web\", \"email\", \"app\"],\n   \"subscription_lists\": {\n      \"subscribe\": [\"subscription_1\", \"subscription_2\"],\n      \"unsubscribe\": [\"subscription_3\"]\n   }\n}\n"
            }
          ]
        }
      ],
      "customEventObject": [
        {
          "description": "Example Custom Event",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"occurred\": \"2020-05-02T02:31:22\",\n   \"user\": {\n       \"named_user_id\": \"cool.person\"\n   },\n   \"body\": {\n       \"name\": \"purchased\",\n       \"value\": 239.85,\n       \"transaction\": \"686f53d4-7e0s-36d7-234e-c9792dac6e7b\",\n       \"interaction_id\": \"your.store/us/en_us/pd/shoe/pid-123456/pgid-123456\",\n       \"interaction_type\": \"email\",\n       \"unique_id\": \"4c2c380a-0400-4d34-ab04-aaf31f0967c7\",\n       \"properties\": {\n          \"description\": \"sky high\",\n          \"brand\": \"victory\",\n          \"colors\": [\n          \"red\",\n          \"blue\"\n          ],\n          \"items\": [\n          {\n             \"text\": \"New Line Sneakers\",\n             \"price\": \"$ 79.95\"\n          },\n          {\n             \"text\": \"Old Line Sneakers\",\n             \"price\": \"$ 79.95\"\n          },\n          {\n             \"text\": \"Blue Line Sneakers\",\n             \"price\": \"$ 79.95\"\n          }\n          ],\n          \"name\": \"Cool Person\",\n          \"userLocation\": {\n          \"state\": \"CO\",\n          \"zip\": \"80202\"\n          }\n       },\n      \"session_id\": \"22404b07-3f8f-4e42-a4ff-a996c18fa9f1\"\n   }\n}\n"
            }
          ]
        }
      ],
      "dateAttribute": [
        {
          "description": "Date Attribute example",
          "examples": [
            {
              "lang": "json",
              "source": "{ \"audience\":\n   {\n      \"attribute\": \"birth_date\",\n      \"operator\": \"equals\",\n      \"precision\": \"month_day\",\n      \"value\": \"05-04\"\n   }\n}\n"
            }
          ]
        },
        {
          "description": "Add four days to the current date",
          "examples": [
            {
              "lang": "json",
              "source": "{ \"audience\":\n   {\n      \"attribute\": \"day_of_travel\",\n      \"operator\": \"equals\",\n      \"value\": \"4\",\n      \"precision\": \"days\",\n      \"relative_to\": \"future\"\n   }\n}\n"
            }
          ]
        },
        {
          "description": "Compound selector using before and after date operators",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"audience\": {\n      \"AND\": [\n            {\n               \"attribute\": \"birth_date\",\n               \"operator\": \"after\",\n               \"value\": 55,\n               \"precision\": \"years\"\n            },\n            {\n               \"attribute\": \"birth_date\",\n               \"operator\": \"before\",\n               \"value\": 40,\n               \"precision\": \"years\"\n            }\n      ]\n   },\n   \"device_types\": [\n      \"android\"\n   ],\n   \"notification\": {\n      \"alert\": \"Hello, Generation X!\"\n   }\n}\n"
            }
          ]
        },
        {
          "description": "Audience who purchased jeans",
          "examples": [
            {
              "lang": "json",
              "source": "{ \"audience\":\n   {\n      \"attribute\": \"item_purchased\",\n      \"operator\": \"contains\",\n      \"value\": \"jeans\"\n   }\n}\n"
            }
          ]
        },
        {
          "description": "Audience who did not purchase jeans",
          "examples": [
            {
              "lang": "json",
              "source": "{ \"audience\":\n   {\n      \"NOT\":{\n         \"attribute\": \"item_purchased\",\n         \"operator\": \"contains\",\n         \"value\": \"jeans\"\n      }\n   }\n}\n"
            }
          ]
        },
        {
          "description": "Audience who did not make any purchase",
          "examples": [
            {
              "lang": "json",
              "source": "{ \"audience\":\n   {\n      \"attribute\": \"item_purchased\",\n      \"operator\": \"is_empty\",\n   }\n}\n"
            }
          ]
        },
        {
          "description": "Integer value range",
          "examples": [
            {
              "lang": "json",
              "source": "{ \"audience\":\n   {\n      \"AND\":[\n         {\n            \"attribute\": \"size\",\n            \"operator\": \"greater\",\n            \"value\":12\n         },\n         {\n            \"attribute\": \"size\",\n            \"operator\": \"less\",\n            \"value\": 15\n         }\n      ]\n   }\n}\n"
            }
          ]
        }
      ],
      "email": [
        {
          "description": "Example object",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"audience\": {\n    \"create_and_send\" : [\n      {\n        \"ua_address\": \"new@example.com\",\n        \"ua_commercial_opted_in\": \"2020-11-29T10:34:22\"\n      },\n      {\n        \"ua_address\" : \"ben@example.com\",\n        \"ua_commercial_opted_out\": \"2020-11-29T12:45:10\"\n      },\n      {\n        \"ua_address\" : \"mary@example.com\",\n        \"ua_email_suppression_state\": \"BOUNCE\"\n      }\n    ]\n  },\n  \"device_types\" : [ \"email\" ],\n  \"notification\" : {\n    \"email\": {\n      \"subject\": \"Welcome to the Winter Sale! \",\n      \"html_body\": \"<h1>Seasons Greetings</h1><p>Check out our winter deals!</p><p><a data-ua-unsubscribe=\\\"1\\\" title=\\\"unsubscribe\\\" href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\">Unsubscribe</a></p>\",\n      \"plaintext_body\": \"Greetings! Check out our latest winter deals! [[ua-unsubscribe href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\"]]\",\n      \"message_type\": \"transactional\",\n      \"sender_name\": \"Airship\",\n      \"sender_address\": \"team@airship.com\",\n      \"reply_to\": \"no-reply@airship.com\",\n      \"click_tracking\": false,\n      \"open_tracking\": false,\n      \"attachments\": [\n        {\n          \"id\": \"0e10a6b9-725c-4f6b-9af2-9ef5b31328c0\",\n        },\n        {\n          \"id\": \"5503b5fe-ed69-4609-bef6-6fef0e6e428f\"\n        }\n      ]\n    }\n  },\n  \"campaigns\": {\n      \"categories\": [\"winter sale\", \"west coast\"]\n  }\n}\n"
            }
          ]
        }
      ],
      "emailChannelAssociatedByContactObject": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"type\": \"email\",\n  \"channel_id\": \"463c4643-a16c-48da-9585-f2c5406f828b\",\n  \"email_address\": \"d*******r@example.com\",\n  \"commercial_opted_in\": \"2024-02-11T00:00:00\"\n}\n"
            }
          ]
        }
      ],
      "emailOverrideObject": [
        {
          "description": "Example with email notification",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"audience\": {\n      \"named_user\": \"jane_doe\"\n   },\n   \"device_types\": [\n      \"email\",\n      \"android\"\n   ],\n   \"notification\": {\n      \"android\": {\n         \"alert\": \"Hello Android user!\"\n      },\n      \"email\": {\n         \"subject\": \"Did you get that thing I sent you?\",\n         \"html_body\": \"<h2>Richtext body goes here</h2><p>Wow!</p><p><a data-ua-unsubscribe=\\\"1\\\" title=\\\"unsubscribe\\\" href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\">Unsubscribe</a></p>\",\n         \"plaintext_body\": \"Plaintext version goes here [[ua-unsubscribe href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\"]]\",\n         \"message_type\": \"transactional\",\n         \"sender_name\": \"Airship\",\n         \"sender_address\": \"team@urbanairship.com\",\n         \"reply_to\": \"no-reply@urbanairship.com\",\n         \"click_tracking\": false,\n         \"open_tracking\": false,\n         \"attachments\": [\n            {\n               \"id\": \"0e10a6b9-725c-4f6b-9af2-9ef5b31328c0\",\n            },\n            {\n               \"id\": \"5503b5fe-ed69-4609-bef6-6fef0e6e428f\"\n            }\n         ],\n         \"url_parameters\": {\n           \"utm_source\": \"airship\",\n           \"utm_channel\": \"email\"\n         }\n      }\n   }\n}\n"
            }
          ]
        },
        {
          "description": "Example email with dynamic sender name, sender address, and reply-to address",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"audience\": {\n      \"named_user\": \"jane_doe\"\n   },\n   \"device_types\": [\n      \"email\"\n   ],\n   \"notification\": {\n      \"email\": {\n         \"subject\": \"Did you get that thing I sent you?\",\n         \"html_body\": \"<h2>Richtext body goes here</h2><p>Wow!</p><p><a data-ua-unsubscribe=\\\"1\\\" title=\\\"unsubscribe\\\" href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\">Unsubscribe</a></p>\",\n         \"plaintext_body\": \"Plaintext version goes here [[ua-unsubscribe href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\"]]\",\n         \"message_type\": \"transactional\",\n         \"sender_name\": \"{{email_sender_name}}\",\n         \"sender_address\": \"{{email_sender_username}}@airship.com\",\n         \"reply_to\": \"{{email_reply_to_username}}@airship.com\",\n      }\n   }\n}               \n"
            }
          ]
        }
      ],
      "emailOverrideWithTemplate": [
        {
          "description": "Example with inline template",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"audience\": {\n    \"create_and_send\" : [\n      {\n        \"ua_address\": \"new@example.com\",\n        \"ua_commercial_opted_in\": \"2020-11-29T10:34:22\",\n        \"customer\": {\n            \"first_name\": \"Jenny\",\n            \"last_name\": \"Smith\",\n            \"location\": \"Vancouver\"\n        },\n        \"cart\" : [\n          {\n            \"name\" : \"Rubber Gloves\",\n            \"code\" : \"abaccgdsagsde\",\n            \"qty\": 1\n          },\n          {\n            \"name\" : \"Bleach Alternative\",\n            \"code\" : \"cacadgdesgaga\",\n            \"qty\": 1\n          }\n        ]\n      }\n    ]\n  },\n  \"device_types\" : [ \"email\" ],\n  \"notification\" : {\n    \"email\": {\n      \"message_type\": \"commercial\",\n      \"sender_name\": \"Airship\",\n      \"sender_address\": \"team@airship.com\",\n      \"reply_to\": \"no-reply@airship.com\",\n      \"template\": {\n        \"fields\": {\n          \"subject\": \"Hi {{customer.first_name}}, your products are ready!\",\n          \"plaintext_body\": \"Hi {{customer.first_name}},/n Your order is ready for pickup at our {{customer.location}} store!/n Your order:/n {{#each cart}}{{this.qty}}x {{this.name}}/n{{/each}} Thanks,/n Your local AwesomeStore.\"\n        }\n      },\n      \"url_parameters\": {\n        \"utm_source\": \"airship\",\n        \"utm_channel\": \"email\"\n      }\n    }\n  }\n}\n"
            }
          ]
        },
        {
          "description": "Example with template_id",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"audience\": {\n    \"create_and_send\" : [\n      {\n        \"ua_address\": \"new@example.com\",\n        \"ua_commercial_opted_in\": \"2020-11-29T10:34:22\",\n        \"customer\": {\n            \"first_name\": \"Jenny\",\n            \"last_name\": \"Smith\",\n            \"location\": \"Vancouver\"\n        },\n        \"cart\" : [\n          {\n            \"name\" : \"Rubber Gloves\",\n            \"code\" : \"abaccgdsagsde\",\n            \"qty\": 1\n          },\n          {\n            \"name\" : \"Bleach Alternative\",\n            \"code\" : \"cacadgdesgaga\",\n            \"qty\": 1\n          }\n        ]\n      }\n    ]\n  },\n  \"device_types\" : [ \"email\" ],\n  \"notification\" : {\n    \"email\": {\n      \"message_type\": \"commercial\",\n      \"sender_name\": \"Airship\",\n      \"sender_address\": \"team@airship.com\",\n      \"reply_to\": \"no-reply@airship.com\",\n      \"template\": {\n        \"template_id\": \"9335bb2a-2a45-456c-8b53-42af7898236a\"\n      },\n      \"url_parameters\": {\n        \"utm_source\": \"airship\",\n        \"utm_channel\": \"email\"\n      }\n    }\n  }\n}\n"
            }
          ]
        }
      ],
      "error": [
        {
          "description": "400 response",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"ok\" : false,\n  \"error\" : \"Could not parse request body.\",\n  \"error_code\" : 40000,\n  \"details\" : {\n      \"error\" : \"The key 'alert1' is not allowed in this context\",\n      \"path\" : \"notification.alert1\",\n      \"location\" : {\n          \"line\" : 5,\n          \"column\" : 18\n      }\n  }\n"
            }
          ]
        },
        {
          "description": "400 response without location",
          "examples": [
            {
              "lang": "json",
              "source": "{\n    \"ok\": false,\n    \"error\": \"Could not parse request body.\",\n    \"error_code\": 40902,\n    \"details\": {\n        \"error\": \"malformed sender\"\n    }\n}\n"
            }
          ]
        },
        {
          "description": "404 response",
          "examples": [
            {
              "lang": "json",
              "source": "{\n    \"ok\": false,\n    \"error\": \"Entity not found\",\n    \"error_code\": 40401\n}\n"
            }
          ]
        }
      ],
      "eventIdentifier": [
        {
          "description": "Simple `open` event identifier",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"event\": \"open\"\n}\n"
            }
          ]
        },
        {
          "description": "Tag added example",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"tag_added\": \"cool_user\"\n}\n"
            }
          ]
        },
        {
          "description": "Custom Event example",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"custom_event\": {\n    \"key\": \"name\",\n    \"value\": {\n      \"equals\": \"christmas\"\n    }\n  }\n}\n"
            }
          ]
        }
      ],
      "experimentObject": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"name\": \"<experiment name>\",\n   \"description\": \"<experiment description>\",\n   \"control\": \"<control group>\",\n   \"audience\": \"<audience-selection>\",\n   \"device_types\": \"<device-types>\",\n   \"campaigns\": \"<campaigns>\",\n   \"variants\": \"[<variant specifications>]\",\n   \"id\": \"<id>\",\n   \"created_at\": \"timestamp\",\n   \"push_id\": \"<push_id>\"\n}\n"
            }
          ]
        }
      ],
      "feedReferences": [
        {
          "description": "Example push external data feeds request",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/push HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n {\n    \"device_types\": [\"ios\"],\n    \"audience\": { \"tag\": \"earlyBirds\" },\n    \"notification\": {\n       \"alert\": \"{{#feed \\\"featured_product\\\"}}Hello, {{user}}, could I interest you in {{product_name}} today?{{/feed}}\"\n    },\n    \"options\": {\n       \"personalization\": true\n    },\n    \"feed_references\": {\n       \"feeds\": [\n          {\n             \"name\": \"featured_product\"\n          }\n       ],\n       \"defaults\": {\n          \"featured_product\": {\n             \"category\": \"featured\"\n          }\n       }\n    }\n }\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 202 Accepted\nContent-Type: application/vnd.urbanairship+json; version=3\nContent-Length: 123\nData-Attribute: push_ids\n\n{\n    \"ok\": true,\n    \"operation_id\": \"5e7852b0-6909-4e60-a73f-4d6b92d94c80\",\n    \"push_ids\": [\n       \"bf28d158-fefe-475a-9c2a-ed4f69cc891e\"\n    ]\n}   \n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Example feed references object",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"feed_references\": {\n      \"feeds\": [\n         {\n            \"name\": \"featured_product\",\n            \"params\": {\n               \"sub_category\": \"shoes\"\n            },\n            \"on_error\": \"continue\"\n         }\n      ],\n      \"defaults\": {\n         \"featured_product\": {\n            \"category\": \"featured\"\n         }\n      }\n   }\n}\n"
            }
          ]
        }
      ],
      "frequencyLimitsObject": [
        {
          "description": "Frequency limits",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"options\": {\n    \"audience_limits\": {\n      \"max_recipients\": 1000,\n      \"targeting_type\": \"contact\",\n      \"frequency_limits\": [\n        {\n          \"id\": \"4cde02bb-5b8e-45b2-a76f-29c153750885\",\n          \"boundary\": 100000,\n          \"period\": \"days\",\n          \"range\": 30\n        }\n      ]\n    }\n  }\n}\n"
            }
          ]
        }
      ],
      "geofenceObject": [
        {
          "description": "Polygon Geofence",
          "examples": [
            {
              "lang": "json",
              "source": "{\n    \"type\": \"POLYGON\",\n    \"points\": [\n        {\n            \"latitude\": 1.000,\n            \"longitude\": 90\n        },\n        {\n            \"latitude\": 2.000,\n            \"longitude\": 90\n        },\n        {\n            \"latitude\": 3.000,\n            \"longitude\": 0\n        }\n    ]\n}\n"
            }
          ]
        },
        {
          "description": "Circle Geofence",
          "examples": [
            {
              "lang": "json",
              "source": "{\n    \"type\": \"CIRCLE\",\n    \"center\": {\n        \"latitude\": 0,\n        \"longitude\": 0\n    },\n    \"radius\": 1000\n}\n"
            }
          ]
        },
        {
          "description": "Confidential Geofence",
          "examples": [
            {
              "lang": "json",
              "source": "{\n    \"type\": \"CONFIDENTIAL\",\n    \"source\": \"Maponics\",\n    \"version\": \"1.0.17-BETA\",\n    \"id\": \"TheLouvreMuseumFloodZoneParis\"\n}\n"
            }
          ]
        }
      ],
      "inAppObject": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"audience\": \"all\",\n   \"device_types\": [ \"ios\", \"android\" ],\n   \"notification\": { \"alert\": \"This part appears on the lockscreen\" },\n   \"in_app\": {\n      \"alert\": \"This part appears in-app!\",\n      \"display_type\": \"banner\",\n      \"expiry\": \"2020-04-01T12:00:00\",\n      \"display\": {\n         \"position\": \"top\"\n      },\n      \"actions\": {\n         \"add_tag\": \"in-app\"\n      }\n   }\n}\n"
            }
          ]
        }
      ],
      "inactivityConditions": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "json",
              "source": "{\n    \"name\" : \"Pipeline with Inactivity Conditions\",\n    \"enabled\" : true,\n    \"immediate_trigger\" : \"/* ... */\",\n    \"outcome\" : \"/* ... */\",\n    \"condition\": [\n        {\n            \"and\" : [\n                {\n                    \"inactivity\": {\n                        \"type\": \"since_triggered\"\n                    }\n                }\n            ]\n        }\n    ],\n    \"timing\": {\n        \"delay\": { \"seconds\" : 259200 }\n    }\n}\n"
            }
          ]
        }
      ],
      "interactiveObject": [
        {
          "description": "Example with `type` actions",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"interactive\": {\n      \"type\": \"ua_yes_no_foreground\",\n      \"button_actions\": {\n         \"yes\": {\n            \"add_tag\": \"more_cake_please\",\n            \"remove_tag\": \"lollipop\",\n            \"open\": {\n               \"type\": \"url\",\n               \"content\": \"http://www.urbanairship.com\"\n            }\n         },\n         \"no\": {\n            \"add_tag\": \"nope\"\n         }\n      }\n   }\n}\n"
            }
          ]
        },
        {
          "description": "Example with `ua_share` actions",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"interactive\": {\n      \"type\": \"ua_share\",\n      \"button_actions\": {\n         \"share\": { \"share\": \"Look at me! I'm on a boat.\" }\n      }\n   }\n}\n"
            }
          ]
        }
      ],
      "iosOverrideObject": [
        {
          "description": "Example with media attachment",
          "examples": [
            {
              "lang": "json",
              "source": "{\n    \"audience\": \"all\",\n    \"device_types\": [\n            \"ios\"\n        ],\n    \"notification\": {\n        \"ios\": {\n            \"thread_id\": \"sfGiants_news\",\n            \"alert\": {\n                \"title\": \"Kevin Gausman Throws a Perfect Game\",\n                \"body\": \"Kevin Gausman stymies the Houston Astros for San Francisco's second perfect game in franchise history.\",\n                \"summary-arg\": \"San Francisco Giants\",\n                \"summary-arg-count\": 1\n            },\n            \"relevance-score\": 1.0,\n            \"interruption_level\": \"passive\",\n            \"sound\": \"strike-call\",\n            \"media_attachment\": {\n                \"content\": {\n                    \"title\": \"Kevin Gausman\",\n                    \"body\": \"Gausman strikes out Justin Turner\"\n                },\n                \"options\": {\n                    \"crop\": {\n                        \"height\": 0.5,\n                        \"width\": 0.5,\n                        \"x\": 0.25,\n                        \"y\": 0.25\n                    },\n                    \"time\": 15\n                },\n                \"url\": \"https://media.example.com/media/6nJmrhlu4aL1m/giphy.gif\"\n            },\n            \"mutable_content\": 1\n        }\n    }\n}\n"
            }
          ]
        },
        {
          "description": "iOS override in a notification with collapse_id",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"ios\": {\n       \"collapse_id\": \"push-xyz\"\n   }\n }\n"
            }
          ]
        }
      ],
      "iosOverrideWithTemplate": [
        {
          "description": "iOS override with a template",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"ios\": {\n      \"thread_id\": \"sfGiants_news\",\n      \"title\": \"{{NAME}} Throws a Perfect Game\",\n      \"body\": \"{{NAME}} stymies the {{OTHER_TEAM}} for San Francisco's first perfect game in franchise history.\",\n      \"subtitle\": \"San Francisco Giants {{DATE}}\",\n      \"sound\": \"strike-call\",\n      \"media_attachment\": {\n         \"content\": {\n            \"title\": \"Kevin Gausman\",\n            \"body\": \"Gausman strikes out Justin Turner\"\n         },\n         \"options\": {\n            \"crop\": {\n               \"height\": 0.5,\n               \"width\": 0.5,\n               \"x\": 0.25,\n               \"y\": 0.25\n            },\n            \"time\": 15\n         },\n         \"url\": \"https://media.example.com/media/6nJmrhlu4aL1m/giphy.gif\"\n      },\n      \"mutable_content\": 1\n   }\n}\n"
            }
          ]
        },
        {
          "description": "iOS override with a template_id",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"ios\": {\n      \"template\": {\n            \"template_id\": \"608f1f6c-8860-c617-a803-b187b491568e\"\n      }\n   }\n}\n"
            }
          ]
        }
      ],
      "jsonAttribute": [
        {
          "description": "JSON Attribute examples",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  // Example 1\n  \"audience\":\n   {\n      \"attribute\": \"books_on_books\",\n      \"where\": {\n         \"property\": \"$.x.store.book[*].title\",\n         \"operator\": \"equals\",\n         \"value\": \"Dracula\",\n         \"compare_as\": \"text\"\n      }\n   }\n}\n{\n  // Example 2\n  \"audience\":\n   {\n      \"attribute\": \"oh_look_a_book\",\n      \"where\": {\n         \"property\": \"$.x['store']['book'][0]['title']\",\n         \"operator\": \"equals\",\n         \"value\": \"Dracula\",\n         \"compare_as\": \"text\"\n      }\n   }\n}\n{\n  // Example 3\n  \"audience\":\n   {\n      \"attribute\": \"another_one\",\n      \"where\": {\n         \"property\": \"$.x.store.codes[*].sneakers\",\n         \"operator\": \"equals\",\n         \"value\": 178394549,\n         \"compare_as\": \"number\"\n      }\n   }\n}\n{\n  // Example 4\n  \"audience\":\n   {\n      \"attribute\": \"and_one_more\",\n      \"where\": {\n         \"property\": \"$.x['store']['codes'][0]['available']\",\n         \"operator\": \"equals\",\n         \"value\": \"true\",\n         \"compare_as\": \"boolean\"\n      }\n   }\n}\n"
            }
          ]
        }
      ],
      "listObject": [
        {
          "description": "List response object",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"ok\": true,\n  \"lists\": [\n      {\n        \"name\": \"ua_attributes_my_list\",\n        \"description\": \"My first list\",\n        \"extra\": {\n            \"filename\": \"list.csv\",\n            \"source\": \"crm\"\n        },\n        \"created\": \"2020-05-13T21:41:25\",\n        \"last_updated\": \"2020-05-13T21:45:17\",\n        \"channel_count\": 0,\n        \"error_path\": \"https://go.urbanairship.com/api/attribute-lists/ua_attributes_my_list/errors\",\n        \"status\": \"ready\"\n      },\n      {\n        \"name\": \"ua_attributes_another_list\",\n        \"description\": \"My second list\",\n        \"extra\": {\n            \"filename\": \"list2.csv\",\n            \"source\": \"api\"\n        },\n        \"created\": \"2020-05-14T21:41:25\",\n        \"last_updated\": \"2020-05-14T21:45:17\",\n        \"channel_count\": 0,\n        \"error_path\": \"https://go.urbanairship.com/api/attribute-lists/ua_attributes_another_list/errors\",\n        \"status\": \"ready\"\n      }\n  ]\n}\n"
            }
          ]
        }
      ],
      "localization": [
        {
          "description": "Example array of localizations",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"localizations\": [\n      {\n         \"language\": \"de\",\n         \"country\": \"AT\",\n         \"notification\": {\n            \"alert\": \"Grüss Gott\"\n         }\n      },\n      {\n         \"language\": \"de\",\n         \"country\": \"DE\",\n         \"notification\": {\n            \"alert\": \"Guten Tag\"\n         }\n      }\n   ]\n}\n"
            }
          ]
        }
      ],
      "messageObject": [
        {
          "description": "Message object example",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"audience\": \"all\",\n   \"notification\": {\n      \"ios\": {\n         \"badge\": \"+1\"\n      }\n   },\n   \"message\": {\n      \"title\": \"This week's offer\",\n      \"body\": \"<html><body><h1>blah blah</h1> etc...</html>\",\n      \"content_type\": \"text/html\",\n      \"expiry\": \"2020-04-01T12:00:00\",\n      \"extra\": {\n         \"offer_id\": \"608f1f6c-8860-c617-a803-b187b491568e\"\n      },\n      \"icons\": {\n         \"list_icon\": \"http://cdn.example.com/message.png\"\n      }\n   }\n}\n"
            }
          ]
        }
      ],
      "messageObjectWithTemplate": [
        {
          "description": "Message Center with template using handlebars example",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"message\": {\n      \"title\": \"Save on {{product}} through {{end_date}}!\",\n      \"body\": \"<html><body><h1>here's a cool {{offer}}</h1> etc...</html>\",\n      \"content_type\": \"text/html\",\n      \"expiry\": \"2020-04-01T12:00:00\",\n      \"extra\": {\n         \"offer_id\": \"608f1f6c-8860-c617-a803-b187b491568e\"\n      },\n      \"icons\": {\n         \"list_icon\": \"http://cdn.example.com/message.png\"\n      }\n   }\n}\n"
            }
          ]
        },
        {
          "description": "Message Center with template by ID example",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"message\": {\n      \"template\": {\n         \"template_id\": \"my_template_id\"\n      }\n   }\n}\n"
            }
          ]
        }
      ],
      "mms": [
        {
          "description": "Example Create and Send for MMS without template",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"audience\": {\n    \"create_and_send\": [\n        {\n            \"ua_msisdn\": \"15558675309\",\n            \"ua_sender\": \"15551234567\",\n            \"ua_opted_in\": \"2020-11-11T18:45:30\",\n        }\n    ]\n  },\n  \"device_types\": [\n    \"mms\"\n  ],\n  \"notification\": {\n    \"mms\": {\n      \"fallback_text\": \"Delivery failed, but you should still check this out.\",\n      \"subject\" : \"Hey, thanks for subscribing!\",\n      \"slides\": [\n        {\n          \"text\": \"Check this out!\",\n          \"media\": {\n              \"url\": \"https://i.example.com/1t466Om.jpg\",\n              \"content_type\": \"image/jpeg\",\n              \"content_length\": 52918\n            }\n          }\n        ]\n      }\n    }\n  }\n"
            }
          ]
        }
      ],
      "mmsOverrideObject": [
        {
          "description": "Example MMS notification",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"mms\": {\n      \"subject\" : \"Double Rainbows\",\n      \"fallback_text\": \"See https://urbanairship.com/double-rainbows?ua-tag-add=rainbows:used_fallback_text for double rainbows!\",\n      \"shorten_links\": true,\n      \"slides\" : [\n         {\n            \"text\": \"A double rainbow is a wonderful sight where you get two spectacular natural displays for the price of one.\",\n            \"media\": {\n               \"url\": \"https://www.metoffice.gov.uk/binaries/content/gallery/mohippo/images/learning/learn-about-the-weather/rainbows/full_featured_double_rainbow_at_savonlinna_1000px.jpg\",\n               \"content_type\": \"image/jpeg\",\n               \"content_length\": 238686\n            }\n         }\n      ]\n   },\n   \"device_types\": [\"sms\"]\n}\n"
            }
          ]
        }
      ],
      "mmsOverrideWithTemplate": [
        {
          "description": "Example object with merge fields in audience object",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"audience\": {\n    \"create_and_send\" : [\n      {\n        \"ua_sender\" : \"12345\",\n        \"ua_msisdn\" : \"15558675309\",\n        \"ua_opted_in\" : \"2020-08-30T22:35:00\",\n        \"delivery_image\": \"url\",\n        \"customer\": {\n            \"first_name\": \"Jenny\",\n            \"last_name\": \"Smith\",\n            \"location\": \"Vancouver\"\n        },\n        \"order\" : [\n          {\n            \"name\" : \"Rubber Gloves\",\n            \"code\" : \"abaccgdsagsde\",\n            \"qty\": 1\n          },\n          {\n            \"name\" : \"Bleach Alternative\",\n            \"code\" : \"cacadgdesgaga\",\n            \"qty\": 1\n          }\n        ]\n      }\n    ]\n  },\n  \"device_types\" : [ \"mms\" ],\n  \"notification\" : {\n    \"mms\" : {\n      \"subject\" : \"Your order is on the way!\",\n      \"fallback_text\": \"Hi, {{customer.first_name}}, your {{#each order}}{{order.name}}{{/each}} just shipped\",\n      \"slides\": [\n        {\n          \"media\": {\n            \"url\": \"https://www.example.com/order12345.jpg\",\n            \"content_type\": \"image/jpeg\",\n            \"content_length\": 123100\n          },\n          \"text\": \"Hi, {{customer.first_name}}, your {{#each order}}{{order.name}}{{/each}} just shipped.\"\n        }\n      ]\n    }\n  }\n}\n"
            }
          ]
        },
        {
          "description": "Example with inline template",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"audience\": {\n    \"create_and_send\" : [\n      {\n        \"ua_sender\" : \"12345\",\n        \"ua_msisdn\" : \"15558675309\",\n        \"ua_opted_in\" : \"2020-08-30T22:35:00\",\n        \"delivery_image\": \"https://www.example.com/order12345.jpg\",\n        \"content-length\": \"1234567\",\n        \"customer\": {\n            \"first_name\": \"Jenny\",\n            \"last_name\": \"Smith\",\n            \"location\": \"Vancouver\"\n        },\n        \"order\" : [\n          {\n            \"name\" : \"Rubber Gloves\",\n            \"code\" : \"abaccgdsagsde\",\n            \"qty\": 1\n          },\n          {\n            \"name\" : \"Bleach Alternative\",\n            \"code\" : \"cacadgdesgaga\",\n            \"qty\": 1\n          }\n        ]\n      }\n    ]\n  },\n  \"device_types\" : [ \"mms\" ],\n  \"notification\" : {\n    \"mms\" : {\n      \"subject\": \"Your order is on the way!\",\n      \"fallback_text\": \"Hi, {{customer.first_name}}, your {{#each order}}{{order.name}}{{/each}} was delivered!\",\n      \"slides\": [\n        {\n          \"media\": {\n            \"url\": \"https://www.example.com/order12345.jpg\",\n            \"content_type\": \"image/jpeg\",\n            \"content_length\": 123100\n          },\n          \"text\" : \"Hi, {{customer.first_name}}, your {{#each order}}{{order.name}}{{/each}} was delivered!\"\n        }\n      ]\n    }\n  }\n}\n"
            }
          ]
        },
        {
          "description": "Example with template_id",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"audience\": {\n    \"create_and_send\" : [\n      {\n        \"ua_sender\" : \"12345\",\n        \"ua_msisdn\" : \"15558675309\",\n        \"ua_opted_in\" : \"2020-08-30T22:35:00\",\n        \"delivery_image\": \"https://www.example.com/order12345.jpg\",\n        \"content-length\": \"1234567\",\n        \"customer\": {\n            \"first_name\": \"Jenny\",\n            \"last_name\": \"Smith\",\n            \"location\": \"Vancouver\"\n        },\n        \"order\" : [\n          {\n            \"name\" : \"Rubber Gloves\",\n            \"code\" : \"abaccgdsagsde\",\n            \"qty\": 1\n          },\n          {\n            \"name\" : \"Bleach Alternative\",\n            \"code\" : \"cacadgdesgaga\",\n            \"qty\": 1\n          }\n        ]\n      }\n    ]\n  },\n  \"device_types\" : [ \"mms\" ],\n  \"notification\" : {\n    \"mms\" : {\n      \"template\" : {\n        \"template_id\" : \"9335bb2a-2a45-456c-8b53-42af7898236a\"\n      },\n      \"slides\": [\n        {\n          \"media\": {\n            \"url\": \"https://cdn.example.com/coolImage.jpg\",\n            \"content_type\": \"image/jpeg\",\n            \"content_length\": 123100\n          }\n        }\n      ]\n    }\n  }\n}\n"
            }
          ]
        }
      ],
      "namedUserConditions": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "json",
              "source": "{ \"name\" : \"Pipeline with Named User Condition\",\n  \"enabled\" : true,\n  \"immediate_trigger\" : \"/* ... */\",\n  \"outcome\" : \"/* ... */\",\n  \"condition\": [\n    { \"and\" : [ {\"named_user\": {\"state\": \"associated\"}}]}\n  ]\n}\n"
            }
          ]
        }
      ],
      "namedUserResponseBody": [
        {
          "description": "Example Named User",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"named_user\": {\n      \"named_user_id\": \"user-id-1234\",\n      \"created\" : \"2020-04-08T20:41:06\",\n      \"last_modified\" : \"2020-05-01T18:00:27\",\n      \"tags\": {\n        \"loyalty program\": [\n            \"silver-member\",\n            \"ten-plus-years\",\n            \"valued-customer\"\n        ],\n        \"crm id\": [\n            \"abc-123-def-456\"\n        ]\n      },\n      \"subscription_lists\": [\n        {\n          \"list_ids\": [\"example_listId-1\", \"example_listId-5\"],\n          \"scope\": \"web\"\n        },\n        {\n          \"list_ids\": [\"example_listId-2\", \"example_listId-3\"],\n          \"scope\": \"app\"\n        },\n        {\n          \"list_ids\": [\"example_listId-2\"],\n          \"scope\": \"web\"\n        },\n        {\n          \"list_ids\": [\"example_listId-3\"],\n          \"scope\": \"email\"\n        },\n        {\n          \"list_ids\": [\"example_listId-4\"],\n          \"scope\": \"sms\"\n        }\n      ],\n      \"attributes\": {\n        \"item_purchased\": \"Fur removal tool\",\n        \"cats_name\": \"Sammy\",\n        \"pets_age\": 12\n      },\n      \"user_attributes\": {\n        \"ua_country\": \"US\",\n        \"ua_language\": \"en\",\n        \"ua_tz\": \"America/Los_Angeles\"\n      },\n      \"channels\": [\n        {\n            \"channel_id\": \"dceafd02-b852-4305-83df-98b65fa40dd4\",\n            \"device_type\": \"ios\",\n            \"installed\": true,\n            \"opt_in\": true,\n            \"push_address\": \"FFFF\",\n            \"created\": \"2020-04-08T20:41:06\",\n            \"last_registration\": \"2020-05-01T18:00:27\",\n            \"tags\": [\n              \"meow\"\n            ]\n        }\n      ]\n  }\n}\n"
            }
          ]
        }
      ],
      "namedUserSubscriptionListItem": [
        {
          "description": "Example Subscription List item",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"list_ids\": [\"example_listId-2\", \"example_listId-3\"],\n  \"scope\": \"app\"\n}\n"
            }
          ]
        }
      ],
      "namedUserSubscriptionListsObject": [
        {
          "description": "Example Subscription Lists object",
          "examples": [
            {
              "lang": "json",
              "source": "{\n    \"subscribe\": [\"stickers\", \"gifs\"],\n    \"unsubscribe\": [\"cookies\"]\n}\n"
            }
          ]
        }
      ],
      "notificationObject": [
        {
          "description": "Example notification with all platforms",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"audience\": \"all\",\n   \"device_types\": [\n      \"ios\",\n      \"android\",\n      \"amazon\",\n      \"web\",\n      \"email\",\n      \"open::toaster\"\n   ],\n   \"notification\": {\n      \"ios\": {\n         \"alert\": \"Hello, iDevices\"\n      },\n      \"android\": {\n         \"alert\": \"These are not the...yeah, lame joke.\"\n      },\n      \"amazon\": {\n         \"alert\": \"Read any good books lately?\"\n      },\n      \"web\": {\n         \"alert\": \"Oh the tangled web we weave\"\n      },\n      \"email\": {\n         \"subject\": \"Did you get that thing I sent you?\",\n         \"html_body\": \"<h2>Richtext body goes here</h2><p>Wow!</p><p><a data-ua-unsubscribe=\\\"1\\\" title=\\\"unsubscribe\\\" href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\">Unsubscribe</a></p>\",\n         \"plaintext_body\": \"Plaintext version goes here [[ua-unsubscribe href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\"]]\",\n         \"message_type\": \"commercial\",\n         \"sender_name\": \"Airship\",\n         \"sender_address\": \"team@urbanairship.com\",\n         \"reply_to\": \"no-reply@urbanairship.com\"\n      },\n      \"open::toaster\": {\n         \"alert\": \"Would you like avocados with that?\"\n      }\n   }\n}\n"
            }
          ]
        }
      ],
      "numberAttribute": [
        {
          "description": "Number Attribute example",
          "examples": [
            {
              "lang": "json",
              "source": "{ \"audience\":\n   {\n      \"attribute\": \"lifetime_value\",\n      \"operator\": \"greater\",\n      \"value\": 15000\n   }\n}\n"
            }
          ]
        }
      ],
      "okResponseObject": [
        {
          "description": "OK response",
          "examples": [
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 202 Accepted\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true,\n}\n"
            }
          ]
        },
        {
          "description": "OK with identifiers",
          "examples": [
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 202 Accepted\nData-Attribute: push_ids\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true,\n    \"operation_id\": \"df6a6b50-9843-0304-d5a5-743f246a4946\",\n    \"push_ids\": [\n        \"9d78a53b-b16a-c58f-b78d-181d5e242078\"\n    ]\n}\n"
            }
          ]
        }
      ],
      "open": [
        {
          "description": "Example object",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"audience\" : {\n    \"create_and_send\": [\n      {\n        \"ua_address\" : \"36d5a261-0454-40f5-b952-942c4b2b0f22\",\n        \"name\": \"Perry\"\n      }\n    ]\n  },\n  \"device_types\" : [ \"open::smart_fridge\" ],\n  \"notification\" : {\n      \"open::smart_fridge\": {\n          \"alert\" : \"Hey {{name}}, you're out of ice cream!\"\n      }\n  },\n  \"campaigns\": {\n      \"categories\": [\"needs_ice_cream\", \"cookies_and_cream\"]\n  }\n}\n"
            }
          ]
        }
      ],
      "openChannelOverrideObject": [
        {
          "description": "Example push with open channel override",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"audience\" : {\n      \"OR\" : [\n            { \"tag\" : [\"sports\", \"entertainment\"]},\n            { \"device_token\" : \"871922F4F7C6DF9D51AC7ABAE9AA5FCD7188D7BFA19A2FA99E1D2EC5F2D76506\" },\n            { \"open_channel\" : \"6bcf3e63-a38a-44d8-8b0d-2fb5941e74ab\" } ]\n   },\n   \"notification\" : {\n      \"alert\" : \"Someone did sports!\",\n      \"ios\" : {\n         \"extra\" : {\n            \"url\" : \"http://www.example.com\" } },\n      \"open::sms\" : {\n         \"alert\" : \"SMS override alert value! I will replace the top-level alert.\",\n         \"extra\" : {\n            \"sms_key\" : \"Some SMS specific payload data for all SMS devices.\" } },\n      \"open::email\" : {\n         \"alert\" : \"Email override alert value! I will replace the top-level alert.\",\n         \"title\" : \"A title for email payloads - neat!\" }\n   },\n   \"options\" : { \"expiry\" : 60 },\n   \"device_types\" : [ \"ios\", \"open::sms\", \"open::email\" ]\n}\n"
            }
          ]
        },
        {
          "description": "Open platform example",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"alert\": \"A generic alert sent to all open platforms\",\n   \"device_types\" : [\"open::sms\", \"open::email\"],\n   \"open::sms\": {\n      \"title\": \"SMS Alert!\",\n      \"alert\": \"A shorter alert for SMS users\",\n      \"summary\": \"A longer summary of some content or whatever\",\n      \"media_attachment\": \"https://example.com/cat_standing_up.jpeg\",\n      \"extra\": {\n         \"some_info\": \"For SMS only\",\n         \"some_id\": \"671ecd12-ad56-4b2f-98f1-107ce33d33e6\" },\n      \"interactive\": {\n         \"type\": \"ua_yes_no_foreground\",\n         \"button_actions\": {\n            \"yes\": {\n               \"open\": {\n                  \"type\": \"url\",\n                  \"content\": \"http://www.example.com\" } },\n            \"no\": {\n               \"app_defined\": {\n                  \"foo\": \"bar\" } } } }\n   },\n   \"open::email\": {\n      \"alert\": \"A longer alert for users of email, who have more space.\" }\n}            \n"
            }
          ]
        }
      ],
      "pipelineObject": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"name\":\"The Darkest Pipeline\",\n   \"enabled\":true,\n   \"immediate_trigger\":\"first_open\",\n   \"outcome\":{\n      \"push\":{\n         \"audience\":\"triggered\",\n         \"device_types\":[\n            \"ios\",\n            \"android\"\n         ],\n         \"notification\":{\n            \"alert\":\"Cool goatee, Abed\"\n         }\n      }\n   },\n   \"timing\":{\n      \"delay\":{\n         \"seconds\":7200\n      },\n      \"schedule\":{\n         \"type\":\"local\",\n         \"miss_behavior\":\"wait\",\n         \"dayparts\":[\n            {\n               \"days_of_week\":[\n                  \"thursday\"\n               ],\n               \"allowed_times\":[\n                  {\n                     \"preferred\":\"21:30:00\"\n                  }\n               ]\n            }\n         ]\n      }\n   }\n}\n"
            }
          ]
        },
        {
          "description": "Example email pipeline",
          "examples": [
            {
              "lang": "json",
              "source": "{\n \"name\":\"Read Receipt\",\n \"enabled\":true,\n \"immediate_trigger\": {\n    \"tag_added\": \"newSubscription\"\n },\n \"outcome\":{\n    \"push\":{\n       \"audience\":\"triggered\"\n       },\n       \"device_types\": [\n          \"email\"\n       ],\n       \"notification\": {\n          \"email\": {\n             \"subject\": \"Did you get that thing I sent you?\",\n             \"html_body\": \"<h2>Richtext body goes here</h2><p>Wow!</p><p><a data-ua-unsubscribe=\\\"1\\\" title=\\\"unsubscribe\\\" href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\">Unsubscribe</a></p>\",\n             \"plaintext_body\": \"Plaintext version goes here [[ua-unsubscribe href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\"]]\",\n             \"message_type\": \"commercial\",\n             \"sender_name\": \"Airship\",\n             \"sender_address\": \"team@urbanairship.com\",\n             \"reply_to\": \"no-reply@urbanairship.com\"\n          }\n       }\n    },\n   \"timing\":{\n      \"delay\":{\n         \"seconds\":7200\n      }\n   }\n}\n"
            }
          ]
        }
      ],
      "pointObject": [
        {
          "description": "Coordinate point example",
          "examples": [
            {
              "lang": "json",
              "source": "{\n    \"latitude\": 45,\n    \"longitude\": 179.999999\n}\n"
            }
          ]
        }
      ],
      "preferenceFormSection": [
        {
          "description": "Example preference form section",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"display\": {\n    \"name\": \"Select the wonderful things you would like to receive notifications for:\"\n  },\n  \"id\": \"161bb08b-5e09-424b-8265-b0458920aa74\",\n  \"items\": [\n    {\n      \"display\": {\n        \"description\": \"Be the first to know about what's on sale each week.\",\n        \"name\": \"Weekly Special\"\n      },\n      \"id\": \"efe3e322-33c7-4157-b765-046b9cd2647a\",\n      \"subscription_id\": \"weekly_special\",\n      \"type\": \"channel_subscription\"\n    },\n  ],\n  \"type\": \"section\"\n}\n"
            }
          ]
        },
        {
          "description": "Example preference form section break",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"display\": {\n    \"name\": \"Take a break, the next section will be there when you come back.\"\n  },\n  \"id\": \"161bb08b-5e09-424b-8265-b0458920aa74\",\n  \"type\": \"labeled_section_break\"\n}\n"
            }
          ]
        }
      ],
      "preferenceFormStorageState": [
        {
          "description": "Example preference form state",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"display\": {\n    \"description\": \"Choose your own adventure\",\n    \"name\": \"Preferences\"\n  },\n  \"id\": \"seanbird_mobile_app\",\n  \"sections\": [\n    {\n      \"display\": {\n        \"name\": \"Select the wonderful things you would like to receive notifications for:\"\n      },\n      \"id\": \"161bb08b-5e09-424b-8265-b0458920aa74\",\n      \"items\": [\n        {\n          \"display\": {\n            \"description\": \"Be the first to know about what's on sale each week.\",\n            \"name\": \"Weekly Special\"\n          },\n          \"id\": \"efe3e322-33c7-4157-b765-046b9cd2647a\",\n          \"subscription_id\": \"weekly_special\",\n          \"type\": \"channel_subscription\"\n        },\n      ],\n      \"type\": \"section\"\n    }\n  ]\n}\n"
            }
          ]
        }
      ],
      "pushObject": [
        {
          "description": "Example push object",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"audience\": {\n      \"OR\": [\n         {\n            \"tag\": [\n               \"sports\",\n               \"entertainment\"\n            ]\n         },\n         {\n            \"ios_channel\": \"9c36e8c7-5a73-47c0-9716-99fd3d4197d5\"\n         }\n      ]\n   },\n   \"notification\": {\n      \"alert\": \"Hi from Airship!{{#if super_sale }} We're having a sale on {{ products.0.name }}!{{/if}}\",\n      \"ios\": {\n         \"extra\": {\n            \"url\": \"http://www.urbanairship.com\"\n         }\n      }\n   },\n   \"options\": {\n      \"expiry\": \"2020-04-01T12:00:00\"\n   },\n   \"message\": {\n      \"title\": \"Message title\",\n      \"body\": \"<Your message here>\",\n      \"content_type\": \"text/html\"\n   },\n   \"in_app\": {\n      \"alert\": \"This part appears in-app!\",\n      \"display_type\": \"banner\",\n      \"expiry\": \"2020-04-01T12:00:00\",\n      \"display\": {\n         \"position\": \"top\"\n      }\n   },\n   \"device_types\": [ \"ios\", \"android\" ],\n   \"global_attributes\": {\n      \"super_sale\": true,\n      \"products\": [\n          {\"id\": 1, \"name\": \"New Line Sneakers\", \"price\": \"79.95\"},\n          {\"id\": 2, \"name\": \"Old Line Sneakers\", \"price\": \"59.95\"}\n      ]\n   }\n}\n"
            }
          ]
        },
        {
          "description": "Example personalized push",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"device_types\": [\n      \"sms\"\n   ],\n   \"options\": {\n      \"personalization\": true\n   },\n   \"notification\": {\n      \"sms\": {\n         \"alert\": \"Hi {{name}}, {{#feed \\\"weather_updates\\\" kw=\"today\" as |weather|}}It's going to be {{weather.temp}} in {{weather.loc}} today!{{/feed}}\",\n      }\n   },\n   \"audience\": {\n      \"tag\": \"local_updates\",\n      \"group\": \"weather\"\n   },\n   \"feeds\": [\n      {\n         \"name\": \"weather_updates\",\n         \"params\": {\n            \"kw\": \"today\"\n         }\n      }\n   ]\n}\n"
            }
          ]
        },
        {
          "description": "Example localized push",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"device_types\": [ \"ios\", \"android\" ],\n  \"audience\": {\n     \"tag\": \"needs_a_greeting\",\n     \"group\": \"new_customer\"\n  },\n  \"notification\": {\n     \"alert\": \"Hi!\"\n  },\n  \"localizations\": [\n      {\n         \"language\": \"de\",\n         \"country\": \"AT\",\n         \"notification\": {\n            \"alert\": \"Grüss Gott\"\n         }\n      },\n      {\n         \"language\": \"de\",\n         \"country\": \"DE\",\n         \"notification\": {\n            \"alert\": \"Guten Tag\"\n         }\n      }\n  ]\n}\n"
            }
          ]
        }
      ],
      "pushTemplatePayload": [
        {
          "description": "Push template payload example",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"audience\": {\n      \"tag\": [\n         \"yanny\",\n         \"laurel\"\n      ]\n   },\n   \"device_types\": [\n      \"email\",\n      \"ios\",\n      \"android\",\n      \"web\"\n   ],\n   \"merge_data\": {\n      \"template_id\": \"8cce6cc8-7d78-43c7-80b5-81ac24c07672\",\n      \"substitutions\": {\n         \"FIRST_NAME\": \"Bob\",\n         \"LAST_NAME\": \"Takahashi\",\n         \"TITLE\": null\n      }\n   },\n   \"campaigns\": {\n      \"categories\": [\n         \"winter sale\",\n         \"west coast\"\n      ]\n   }\n}\n"
            }
          ]
        }
      ],
      "regionObject": [
        {
          "description": "Example polygon-type Geofence imported from Gimbal",
          "examples": [
            {
              "lang": "json",
              "source": "{\n    \"region_id\": \"abe5deb3-00d0-446e-8c5d-94b6421a01e0\",\n    \"name\": \"My Favorite Place\",\n    \"created_at\": \"2020-06-09T12:34:56\",\n    \"updated_at\": \"2020-06-09T12:34:56\",\n    \"geofence\": {\n        \"type\": \"POLYGON\",\n        \"points\": [\n            {\n                \"latitude\": 90.0,\n                \"longitude\": 180.0\n            },\n            {\n                \"latitude\": 90.0,\n                \"longitude\": 180.0\n            },\n            {\n                \"latitude\": 0.0,\n                \"longitude\": 0.0\n            }\n        ]\n    },\n    \"beacons\": [\n        {\n            \"name\": \"entryway\",\n            \"id\": \"VLSHLAOEXOFCMLDVTKFQ\"\n        },\n        {\n            \"name\": \"Exhibit A\",\n            \"id\": \"ZAQQMNOZKRFCRPYEUCZI\"\n        }\n    ],\n    \"attributes\": {\n        \"store_name\": \"REI\"\n    },\n    \"source_info\": {\n        \"source\": \"GIMBAL\",\n        \"region_id\": \"4BPSFLKJSDFLKJSDFLKJ\",\n        \"vendor_href\": \"http://api.gimbal.com/2/places/4BPSFLKJSDFLKJSDFLKJ\"\n    }\n}\n"
            }
          ]
        }
      ],
      "relativeWindow": [
        {
          "description": "Example relative time window",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"date\": {\n     \"days\": {\n        \"recent\": 1\n     }\n  }\n}\n"
            }
          ]
        }
      ],
      "removeAttributeObject": [
        {
          "description": "Remove Attribute",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"action\": \"remove\",\n  \"key\": \"minor_league\"\n}\n"
            }
          ]
        }
      ],
      "scheduleObject": [
        {
          "description": "Example schedule",
          "examples": [
            {
              "lang": "json",
              "source": "{\n    \"url\": \"http://go.urbanairship/api/schedules/2d69320c-3c91-5241-fac4-248269eed109\",\n    \"schedule\": {\"scheduled_time\": \"2020-04-01T18:45:30\"},\n    \"name\": \"My schedule\",\n    \"push\": {\n        \"audience\": {\"tag\": \"49ers\"},\n        \"device_types\": [ \"ios\", \"android\" ],\n        \"notification\": {\"alert\": \"Touchdown!\"},\n        \"options\": {\"expiry\": 10800}\n    }\n}\n"
            }
          ]
        }
      ],
      "scheduleSpec": [
        {
          "description": "Global schedule",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"scheduled_time\": \"2020-04-01T18:45:30\"\n}\n"
            }
          ]
        },
        {
          "description": "Best time example",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"best_time\": {\n    \"send_date\": \"2020-06-01\"\n  }\n}\n"
            }
          ]
        },
        {
          "description": "Local time",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"local_scheduled_time\": \"2020-04-01T18:45:30\"\n}\n"
            }
          ]
        }
      ],
      "scheduledBulkSendObject": [
        {
          "description": "Scheduled bulk send object",
          "examples": [
            {
              "lang": "json",
              "source": "{\n    \"schedule\": {\n        \"scheduled_time\" : \"2024-11-07T12:00:00\"\n    },\n    \"name\" : \"scheduled bulk send\",\n    \"push\" : {\n        \"audience\" : {\n            \"bulk_id\" : \"36d5a261-0454-40f5-b952-942c4b2b0f22\"\n        },\n        \"device_types\" : [ \"open::rcs\" ],\n        \"notification\" : {\n            \"alert\" : \"Hope you voted\"\n        },\n        \"campaigns\": {\n            \"categories\": [\"midterms2024\", \"getoutthevote2024\"]\n        }\n    }\n}\n"
            }
          ]
        }
      ],
      "scopedBatchItem": [
        {
          "description": "Example scoped batch item",
          "examples": [
            {
              "lang": "json",
              "source": "{\n    \"scope\": [\"app\"],\n    \"subscription_lists\": {\n        \"subscribe\": [\"stickers\", \"gifs\"],\n        \"unsubscribe\": [\"cookies\"]\n    }\n}\n"
            }
          ]
        }
      ],
      "segmentationConditions": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "json",
              "source": "{ \"name\" : \"Pipeline with Segmentation Conditions\",\n  \"enabled\" : true,\n  \"immediate_trigger\" : \"/* ... */\",\n  \"outcome\" : \"/* ... */\",\n  \"condition\": [\n    { \"OR\": [\n        { \"segmentation\": {\n            \"audience\": {\n              \"AND\": [\n                  { \"OR\": [ {  \"tag\": \"sports\" },\n                            { \"tag\": \"entertainment\" } ] },\n                  { \"segment\": \"mailing-segment\" } ]\n            }\n          }\n        },\n        { \"segmentation\": { \"audience\": { \"named_user\": \"admin\" } }\n        }\n      ]\n    }\n  ]\n}\n"
            }
          ]
        }
      ],
      "setAttributeObject": [
        {
          "description": "Set Attribute with string value",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"action\": \"set\",\n  \"key\": \"position\",\n  \"value\": \"LF\"\n}\n"
            }
          ]
        },
        {
          "description": "Set JSON Attribute with its required object value",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"action\": \"set\",\n  \"key\": \"position#instance_42\",\n  \"value\": {\n    \"exp\": 1731531110,\n    \"name\": \"LeftField\",\n    \"rank\": 2,\n    \"active\" true,\n    \"extras\": [\n      \"rookie\",\n      \"mvp\"\n    ]\n  }\n}\n"
            }
          ]
        }
      ],
      "sms": [
        {
          "description": "Example object",
          "examples": [
            {
              "lang": "json",
              "source": "{\n \"audience\": {\n    \"create_and_send\" : [\n      {\n        \"ua_msisdn\": \"15558675309\",\n        \"ua_sender\": \"12345\",\n        \"ua_opted_in\": \"2020-11-11T18:45:30\"\n      }\n    ]\n  },\n  \"device_types\" : [ \"sms\" ],\n  \"notification\" : {\n    \"sms\": {\n      \"alert\": \"Check out our winter sale! https://www.example.com/amazingly/long/url-that-I-want-to-shorten\",\n      \"expiry\": 172800,\n      \"shorten_links\": true\n    }\n  },\n  \"campaigns\": {\n      \"categories\": [\"winter sale\", \"west coast\"]\n  }\n}\n"
            }
          ]
        }
      ],
      "smsChannelAssociatedByContactObject": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"type\": \"sms\",\n  \"channel_id\": \"a537ac78-ef4f-4f74-8536-6fd620549186\",\n  \"sender\": \"1234\",\n  \"msisdn\": \"*******3379\",\n  \"opt_in\": true\n}   \n"
            }
          ]
        }
      ],
      "smsOverrideObject": [
        {
          "description": "Example SMS notification",
          "examples": [
            {
              "lang": "json",
              "source": "{\n    \"audience\": {\n       \"named_user\": \"user\"\n    },\n    \"notification\": {\n       \"alert\": \"A generic alert sent to all platforms without overrides in device_types\",\n       \"sms\": {\n          \"alert\": \"A shorter alert with a link for SMS users to click https://www.example.com/long/form/url?ua-tag-add=this_group:this_tag\",\n          \"expiry\": 172800,\n          \"shorten_links\": true\n       }\n    },\n    \"device_types\": [ \"sms\" ]\n}\n"
            }
          ]
        }
      ],
      "smsOverrideWithTemplate": [
        {
          "description": "Example object with merge fields in audience object",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"audience\": {\n    \"create_and_send\" : [\n      {\n        \"ua_sender\" : \"12345\",\n        \"ua_msisdn\" : \"15558675309\",\n        \"ua_opted_in\" : \"2020-08-30T22:35:00\",\n        \"customer\": {\n            \"first_name\": \"Jenny\",\n            \"last_name\": \"Smith\",\n            \"location\": \"Vancouver\"\n        },\n        \"cart\" : [\n          {\n            \"name\" : \"Rubber Gloves\",\n            \"code\" : \"abaccgdsagsde\",\n            \"qty\": 1\n          },\n          {\n            \"name\" : \"Bleach Alternative\",\n            \"code\" : \"cacadgdesgaga\",\n            \"qty\": 1\n          }\n        ]\n      }\n    ]\n  },\n  \"device_types\" : [ \"sms\" ],\n  \"notification\" : {\n    \"sms\" : {\n      \"alert\" : \"Hi, {{customer.first_name}}, your {{#each cart}}{{this.name}}{{/each}} are ready to pickup at our {{customer.location}} location!\"\n    }\n  },\n  \"campaigns\" : {\n    \"categories\" : [ \"order-pickup\" ]\n  }\n}\n"
            }
          ]
        },
        {
          "description": "Example object with template_id",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"audience\": {\n    \"create_and_send\" : [\n      {\n        \"ua_sender\" : \"12345\",\n        \"ua_msisdn\" : \"15558675309\",\n        \"ua_opted_in\" : \"2020-08-30T22:35:00\",\n        \"customer\": {\n            \"first_name\": \"Jenny\",\n            \"last_name\": \"Smith\",\n            \"location\": \"Vancouver\"\n        },\n        \"cart\" : [\n          {\n            \"name\" : \"Rubber Gloves\",\n            \"code\" : \"abaccgdsagsde\",\n            \"qty\": 1\n          },\n          {\n            \"name\" : \"Bleach Alternative\",\n            \"code\" : \"cacadgdesgaga\",\n            \"qty\": 1\n          }\n        ]\n      }\n    ]\n  },\n  \"device_types\" : [ \"sms\" ],\n  \"notification\" : {\n    \"sms\" : {\n      \"template\" : {\n        \"template_id\": \"9335bb2a-2a45-456c-8b53-42af7898236a\"\n      }\n    }\n  }\n}\n"
            }
          ]
        }
      ],
      "snippetReferences": [
        {
          "description": "Example push snippets request",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/push HTTP/1.1\nAuthorization: Basic <Master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n {\n    \"device_types\": [\"ios\"],\n    \"audience\": { \"tag\": \"earlyBirds\" },\n    \"notification\": {\n       \"alert\": \"Hello, {{user}}, how are you today?{{> \\\"signoff\\\" }}\"\n    },\n    \"options\": {\n       \"personalization\": true\n    },\n    \"snippet_references\": {\n       \"snippets\": [\n          {\n             \"name\": \"signoff\"\n          }\n       ]\n    }\n }\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 202 Accepted\nContent-Type: application/vnd.urbanairship+json; version=3\nContent-Length: 123\nData-Attribute: push_ids\n\n {\n    \"ok\": true,\n    \"operation_id\": \"5e7852b0-6909-4e60-a73f-4d6b92d94c80\",\n    \"push_ids\": [\n       \"bf28d158-fefe-475a-9c2a-ed4f69cc891e\"\n    ]\n }\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Snippet references example: The `copyright` snippet is loaded by the `snippet_references` object and inserted at the end of the `alert` text.\n",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"notification\": {\n      \"alert\": \"Hi {{ name }}: Thanks for your purchase! {{> copyright }}\"\n   },\n   \"snippet_references\": {\n      \"snippets\": [\n         {\n            \"name\": \"copyright\"\n         }\n      ]\n   }\n}\n"
            }
          ]
        }
      ],
      "subscriptionConditions": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "json",
              "source": "{ \"name\" : \"Pipeline with Subscription Conditions\",\n  \"enabled\" : true,\n  \"immediate_trigger\" : \"/* ... */\",\n  \"outcome\" : \"/* ... */\",\n  \"condition\": [\n  { \"or\" : [\n      {\"subscription\" : {\"list_name\": \"sports_updates\"}},\n      {\"subscription\" : {\"list_name\": \"silence\", \"negated\": true}}]\n  }]\n}\n"
            }
          ]
        }
      ],
      "subscriptionListObject": [
        {
          "description": "Example Subscription List object",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"action\": \"subscribe\",\n  \"list_id\": \"exciting_news\"\n}\n"
            }
          ]
        }
      ],
      "subscriptionListResultObject": [
        {
          "description": "Example Subscription List result object",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"list_id\": \"example_listId-2\",\n   \"name\": \"A nice readable name 2\",\n   \"description\": \"A very nice description for you.\",\n   \"scopes\": [\"app\", \"web\"],\n   \"default_opted_in\": true\n}\n"
            }
          ]
        }
      ],
      "tagConditions": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "json",
              "source": "{\n    \"name\" : \"Pipeline with Tag Conditions\",\n    \"enabled\" : true,\n    \"immediate_trigger\" : \"/* ... */\",\n    \"outcome\" : \"/* ... */\",\n    \"condition\": [\n        {\n            \"or\" : [\n                {\n                    \"tag\" : {\n                        \"tag_name\" : \"VIP\"\n                    }\n\n                },\n                {\n                    \"tag\" : {\n                        \"tag_name\": \"dont_push\",\n                        \"group\": \"my_special_sandbox\",\n                        \"negated\": true\n                    }\n                }\n            ]\n        }\n    ]\n}\n"
            }
          ]
        }
      ],
      "tagGroupObject": [
        {
          "description": "A simple tag group that has 2 tags associated with the group tags.",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"sports fan\": [\"Federer fan\", \"Messi fan\"]\n}\n"
            }
          ]
        },
        {
          "description": "A simple Airship-specific tag group, associating one tag with the group",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"tag_groups\": {\n      \"ua_locale_country\": [\"US\"]\n  }\n}\n"
            }
          ]
        },
        {
          "description": "An array of Tag Groups for a channel. Channels can have Airship-specific tag groups; Named Users do not have Airship-specific Tag Groups.",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"tag_groups\": [\n      {\n        \"sports fan\": [\n            \"Federer fan\",\n            \"Messi fan\"\n        ]\n      },\n      {\n        \"music fan\": [\n            \"Beyonce\",\n            \"Muse\"\n        ]\n      },\n      {\n        \"ua_locale_country\": [\n            \"US\"\n        ]\n      },\n      {\n        \"ua_locale_language\": [\n            \"en\"\n        ]\n      }\n  ]\n}\n"
            }
          ]
        },
        {
          "description": "An array of Tag Groups for a Named User. Named Users do not have Airship-specific tag groups.",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"tags\": {\n      \"crm_id\": [\n        \"abc-123-def-456\"\n      ],\n      \"loyalty program\": [\n        \"silver-member\",\n        \"ten-plus-years\",\n        \"valued-customer\"\n      ]\n  }\n}\n"
            }
          ]
        }
      ],
      "tagListResponseObject": [
        {
          "description": "Tag list response object",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"name\" : \"ua_tags_foo\",\n  \"description\" : \"\",\n  \"extra\" : { \"key\": \"value\" },\n  \"add\":{\n    \"tag-group-name\": [\n      \"tag-value\"\n    ],\n    \"tag-group-name2\": [\n      \"tag-value2a\",\n      \"tag-value2b\"\n    ]\n  },\n  \"remove\": {\n    \"tag-group-name3\": [\n      \"tag-value\"\n    ]\n  },\n  \"set\": {\n    \"tag-group-name4\": [\n      \"tag-value\"\n    ]\n  },\n  \"created\" : \"2013-08-08T20:41:06\",\n  \"last_updated\" : \"2014-05-01T18:00:27\",\n  \"channel_count\" : 0,\n  \"mutation_success_count\": 1000,\n  \"mutation_error_count\": 10,\n  \"error_path\":  \"https://go.urbanairship.com/api/tag-lists/users_a/errors\",\n  \"status\" : \"ready\"\n}\n"
            }
          ]
        }
      ],
      "templateObject": [
        {
          "description": "Basic template object",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"name\": \"<template name>\",\n   \"description\": \"<template description>\",\n   \"variables\": [\"<variable specifications>\"],\n   \"push\": \"<push-object>\",\n   \"id\": \"<template-id>\",\n   \"created_at\" : \"timestamp\",\n   \"modified_at\" : \"timestamp\",\n   \"last_used\" : \"timestamp\"\n}\n"
            }
          ]
        }
      ],
      "templatePushObject": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "json",
              "source": "{\n    \"audience\" : {\n        \"OR\" : [\n            { \"tag\" : [\"sports\", \"entertainment\"]},\n            { \"device_token\" : \"871922F4F7C6DF9D51AC7ABAE9AA5FCD7188D7BFA19A2FA99E1D2EC5F2D76506\" },\n            { \"apid\" : \"5673fb25-0e18-f665-6ed3-f32de4f9ddc6\" }\n        ]\n    },\n    \"device_types\" : [ \"ios\" ],\n    \"merge_data\": {\n        \"template_id\": \"ef34a8d9-0ad7-491c-86b0-aea74da15161\",\n        \"substitutions\": {\n            \"FIRST_NAME\": \"Bob\"\n        }\n    }\n}\n"
            }
          ]
        }
      ],
      "templateVariableObject": [
        {
          "description": "Template variable example",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"key\" : \"<key>\",\n   \"name\" : \"<variable name>\",\n   \"description\" : \"<variable description>\",\n   \"default_value\" : \"<fallback value>\"\n}\n"
            }
          ]
        }
      ],
      "templatedMessageContent": [
        {
          "description": "Example templated Create and Send a message with bulk ID",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"audience\" : {\n      \"bulk_id\" : \"36d5a261-0454-40f5-b952-942c4b2b0f22\"\n  },\n  \"device_types\" : [ \"open::rcs\" ],\n  \"notification\" : {\n      \"open::rcs\" : {\n          \"template\": {\n              \"template_id\" : \"09641749-f288-46e6-8dc6-fae592e8c092\"\n          }\n      }\n  }\n}\n"
            }
          ]
        },
        {
          "description": "Example templated Create and Send a message",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"audience\": {\n    \"create_and_send\": [\n      {\n        \"ua_address\": \"some-person@example.com\",\n        \"ua_commercial_opted_in\": \"2023-04-01T18:45:30\",\n        \"ua_open_tracking_opted_in\": \"2023-04-01T18:45:30\",\n        \"name\": \"Some Person, Esq.\",\n        \"totalPurchases\": \"$ 239.85\",\n        \"items\": [\n          {\n            \"text\": \"New Line Sneakers\",\n            \"image\": \"https://marketing-image-production.example.com/uploads/newlinesneakers.png\",\n            \"price\": \"$ 79.95\"\n          },\n          {\n            \"text\": \"Old Line Sneakers\",\n            \"image\": \"https://marketing-image-production.example.com/uploads/oldlinesneakers.png\",\n            \"price\": \"$ 79.95\"\n          },\n          {\n            \"text\": \"Blue Line Sneakers\",\n            \"image\": \"https://marketing-image-production.example.com/uploads/bluelinesneakers.png\",\n            \"price\": \"$ 79.95\"\n          }\n        ],\n        \"receipt\": true,\n        \"onlineAccount\": {\n          \"username\": \"coolUser\",\n          \"email_receipt\": true,\n          \"email\": \"someone@example.com\"\n        },\n        \"userAddress\": {\n          \"address01\": \"1234 Fake St.\",\n          \"address02\": \"Apt. 123\",\n          \"city\": \"Place\",\n          \"state\": \"CO\",\n          \"zip\": \"80202\"\n        },\n        \"num_of_purchases\": 4\n      },\n      {\n        \"ua_address\": \"some-other-person@example.com\",\n        \"ua_commercial_opted_in\": \"2023-04-01T18:45:30\",\n        \"ua_click_tracking_opted_in\": \"2023-04-01T18:45:30\",\n        \"name\": \"The Honorable Some Other Person\"\n      }\n    ]\n  },\n  \"device_types\": [\n    \"email\"\n  ],\n  \"notification\": {\n    \"email\": {\n      \"template\": {\n        \"fields\": {\n          \"subject\": \"Hi there, {{name}}\",\n          \"plaintext_body\": \"Your \\n{{#each items}} {{this.text}} {{this.price}} {{/each}}\\n are on the way{{#with userAddress}} to {{address01}}{{/with}}!\"\n        }\n      },\n      \"sender_name\": \"Ultimate Sender\",\n      \"message_type\": \"transactional\",\n      \"sender_address\": \"no-reply@valid-sender-example.com\",\n      \"reply_to\": \"no-reply@valid-sender-example.com\"\n    }\n  }\n}\n"
            }
          ]
        },
        {
          "description": "Example CSV audience with nested keys",
          "examples": [
            {
              "lang": "text/csv",
              "source": "ua_address,ua_commercial_opted_in,name,address.city,address.state,items.[0].name,items.[0].code,items.[1].name,items.[1].code\nsomeone@example.com,2023-04-01T18:45:30,Joe Someone,Portland,OR,Rubber Gloves,abaccgdsagsde,Bleach Alternative,cacadgdesgaga\nelse@example.com,2023-04-21T16:13:01,Sir Else,Seattle,WA,Flashlight,zxcvxcbzxcbza,Shovel,aldfkghalsdkg\n"
            }
          ]
        },
        {
          "description": "Equivalent JSON audience definition",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"audience\": {\n    \"create_and_send\" : [\n        {\n          \"ua_address\" : \"someone@example.com\",\n          \"ua_commercial_opted_in\" : \"2023-04-01T18:45:30\",\n          \"name\" : \"Joe Someone\",\n          \"address\" : {\n            \"city\" : \"Portland\",\n            \"state\" : \"OR\"\n          },\n          \"items\" : [\n            {\n              \"name\" : \"Rubber Gloves\",\n              \"code\" : \"abaccgdsagsde\"\n            },\n            {\n              \"name\" : \"Bleach Alternative\",\n              \"code\" : \"cacadgdesgaga\"\n            }\n          ]\n        },\n        {\n          \"ua_address\" : \"else@example.com\",\n          \"ua_commercial_opted_in\" : \"2023-04-21T16:13:01\",\n          \"name\" : \"Sir Else\",\n          \"address\" : {\n            \"city\" : \"Seattle\",\n            \"state\" : \"WA\"\n          },\n          \"items\" : [\n            {\n              \"name\" : \"Flashlight\",\n              \"code\" : \"zxcvxcbzxcbza\"\n            },\n            {\n              \"name\" : \"Shovel\",\n              \"code\" : \"aldfkghalsdkg\"\n            }\n          ]\n        }\n    ]\n  }\n}\n"
            }
          ]
        }
      ],
      "textAttribute": [
        {
          "description": "Text Attribute example",
          "examples": [
            {
              "lang": "json",
              "source": "{ \"audience\":\n   {\n      \"attribute\": \"item_purchased\",\n      \"operator\": \"contains\",\n      \"value\": \"jeans\"\n   }\n}\n"
            }
          ]
        }
      ],
      "webOverrideObject": [
        {
          "description": "Example with web override",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"audience\": {\n      \"channel\": \"cab69081-0196-4f6b-91dc-53bc88a2e6ce\"\n   },\n   \"device_types\": [\n      \"web\"\n   ],\n   \"notification\": {\n      \"alert\": \"Hello, world!\",\n      \"web\": {\n         \"alert\": \"Hello Web World\",\n         \"title\": \"A Custom Web Title\",\n         \"require_interaction\": true,\n         \"buttons\": [\n            {\n               \"id\": \"yes\",\n               \"label\": \"Yes\",\n               \"actions\": {\n                  \"open\": {\n                     \"type\": \"home\"\n                  },\n                  \"add_tag\": [\n                     \"new_tag\"\n                  ]\n               }\n            },\n            {\n               \"id\": \"no\",\n               \"label\": \"No\"\n            }\n         ],\n         \"extra\": {\n            \"story_id\": \"1234\",\n            \"moar\": \"{\\\"key\\\": \\\"value\\\"}\"\n         }\n      }\n   }\n}\n"
            }
          ]
        }
      ],
      "webOverrideWithTemplate": [
        {
          "description": "Web override with a template",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"web\": {\n      \"alert\": \"Vote now, {{name}}!\",\n      \"title\": \"Geese? Or ducks!\",\n      \"icon\": \"{{icon}}\",\n      \"require_interaction\": true,\n      \"buttons\": [\n         {\n            \"id\": \"yes\",\n            \"label\": \"Yes\",\n            \"actions\": {\n               \"open\": {\n                  \"type\": \"home\"\n               },\n               \"add_tag\": [\"new_tag\"]\n            }\n         },\n         {\n         \"id\": \"no\",\n         \"label\": \"No\"\n         }\n      ],\n      \"extra\": {\n         \"story_id\": \"1234\",\n         \"moar\": \"{\\\"key\\\": \\\"value\\\"}\"\n      }\n   }\n}\n"
            }
          ]
        },
        {
          "description": "Web override with a template_id",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"web\": {\n      \"template\": {\n         \"template_id\": \"1ad69081-c196-af21-41dc-53bc89a2edc5\"\n      },\n      \"require_interaction\": true,\n      \"extra\": {\n         \"story_id\": \"1234\",\n         \"moar\": \"{\\\"key\\\": \\\"value\\\"}\"\n      }\n   }\n}\n"
            }
          ]
        }
      ],
      "whereObject": [
        {
          "description": "Example payload to an audience of users who have opened your app as a result of receiving a specific push ID.\n",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"audience\": {\n      \"activity\": \"app_open\",\n      \"metric\": \"count\",\n      \"operator\": \"greater\",\n      \"value\": 0,\n      \"where\": {\n         \"property\": \"/_triggering_push/push_id\",\n         \"operator\": \"equals\",\n         \"compare_as\": \"text\",\n         \"value\": \"636abb88-5642-4035-998d-a04c93c499ad\"\n      }\n   },\n   \"device_types\": [\n      \"ios\", \"android\"\n   ],\n   \"notification\": {\n      \"alert\": \"Did you get that thing I sent you?\"\n   }\n}\n"
            }
          ]
        }
      ],
      "wnsOverrideObject": [
        {
          "description": "Example with WNS override",
          "examples": [
            {
              "lang": "json",
              "source": "{\n   \"audience\": {\n      \"wns\": \"cab69081-0196-4f6b-91dc-53bc88a2e6ce\"\n   },\n   \"device_types\": [\n      \"wns\"\n   ],\n   \"notification\": {\n      \"wns\" : {\n         \"alert\": \"Hello, world!\"\n      }\n   }\n}\n"
            }
          ]
        }
      ]
    }
  },
  "paths": {
    "/api/attachments": {
      "post": [
        {
          "description": "Example create email attachment",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /attachments HTTP/1.1\nAuthorization: Bearer <authorization token>\nContent-Type: application/json\nAccept: application/vnd.urbanairship+json; version=3\n\n{\n  \"filename\": \"rickroll.png\",\n  \"content_type\": \"text/plain; charset=\\\"UTF-8\\\"\",\n  \"data\": \"iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAIAAADTED8xAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAyhpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8...\"\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n        \nEmailAttachmentRequest emailAttachmentRequest = EmailAttachmentRequest.newRequest()\n        .setContentType(\"text/plain; charset=\\\"UTF-8\\\"\")\n        .setData(\"iBORw0KGgoAAAANSUhEUgAAAQAAAAEACAIAAADTED8xAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAyhpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8...\")\n        .setFilename(\"rickroll.png\");\n\nResponse<EmailAttachmentResponse> response = client.execute(emailAttachmentRequest);\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BearerTokenClient, EmailAttachment\n)\n\nclient = BearerTokenClient(\n    app_key='<app_key>',\n    token='<bearer_token>'\n)\n\nattachment = EmailAttachment(\n  client=client,\n  filename='rickroll.png', \n  content_type='image/png; charset=\"UTF-8\"', \n  filepath='path/to/never_gonna.png'\n)\nresponse = attachment.post()\n\nprint(response.get('attachment_ids'))\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 201 Accepted\nData-Attribute: attachment_id\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true,\n    \"attachment_ids\": [\n        \"b0c46a8d-b701-441b-9d6e-147c183b28ca\"\n    ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/attribute-lists": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/attribute-lists HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, AttributeList\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\n\nlisting = AttributeList.list(airship=client)\n\nlisting.json()\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nData-Attribute: lists\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n  \"ok\": true,\n  \"lists\": [\n      {\n        \"name\": \"ua_attributes_my_list\",\n        \"description\": \"My first list\",\n        \"extra\": {\n            \"filename\": \"list.csv\",\n            \"source\": \"crm\"\n        },\n        \"created\": \"2020-05-13T21:41:25\",\n        \"last_updated\": \"2020-05-13T21:45:17\",\n        \"channel_count\": 0,\n        \"error_path\": \"https://go.urbanairship.com/api/attribute-lists/ua_attributes_my_list/errors\",\n        \"status\": \"ready\"\n      },\n      {\n        \"name\": \"ua_attributes_another_list\",\n        \"description\": \"My second list\",\n        \"extra\": {\n            \"filename\": \"list2.csv\",\n            \"source\": \"api\"\n        },\n        \"created\": \"2020-05-14T21:41:25\",\n        \"last_updated\": \"2020-05-14T21:45:17\",\n        \"channel_count\": 0,\n        \"error_path\": \"https://go.urbanairship.com/api/attribute-lists/ua_attributes_another_list/errors\",\n        \"status\": \"ready\"\n      }\n  ]\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nAttributeListsListingRequest attributeListsListingRequest = AttributeListsListingRequest.newRequest();\nResponse<AttributeListsListingResponse> response = client.execute(attributeListsListingRequest);\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/attribute-lists HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n  \"name\": \"ua_attributes_my_new_list\",\n  \"description\": \"First of many attributes lists!\",\n  \"extra\": {\n      \"filename\": \"attributes.csv\",\n      \"source\": \"CRM\"\n  }\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n        \nAttributeListsCreateRequest attributeListsCreateRequest = AttributeListsCreateRequest.newRequest(\"ua_attributes_list\")\n        .setDescription(\"ua_attributes_list\")\n        .addExtra(\"filename\", \"attributes.csv\")\n        .addExtra(\"source\",\"crm\");\n\nResponse<GenericResponse> response = client.execute(attributeListsCreateRequest);\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 201 Created\nContent-Type: application/json\nLocation: https://go.urbanairship.com/api/attribute-lists/ua_attributes_my_new_list\n\n{\n  \"ok\" : true\n}\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, AttributeList\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\n\nattribute_list = AttributeList(\n  client=client, \n  list_name=\"ua_attributes_my_new_list\", \n  description=\"First of many attributes lists!\", \n  extra={\n      \"filename\": \"attributes.csv\",\n      \"source\": \"CRM\"\n  }\n)\n\nattribute_list.create()\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/attribute-lists/{list_name}/csv": {
      "put": [
        {
          "description": "Upload Attribute list example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "PUT /api/attribute-lists/ua_attributes_list/csv HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: text/csv\n\nchannel_id,Magic Score,Preferred Sport\nc543f3a3-bc1d-4830-8dee-7532c6a23b9a,100,Basketball\n6ba360a0-1f73-4ee7-861e-95f6c1ed6410,,Basketball\n15410d17-687c-46fa-bbd9-f255741a1523,2,Football\nc2c64ef7-8f5c-470e-915f-f5e3da04e1df,22.1,Rugby\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Upload Attribute Snapshot list example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "PUT /api/attribute-lists/ua_attributes_snapshot_list/csv HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: text/csv\n\nchannel_id,Magic Score,Preferred Sport,Favorite Team\nc543f3a3-bc1d-4830-8dee-7532c6a23b9a,100,Basketball,Lakers\n6ba360a0-1f73-4ee7-861e-95f6c1ed6410,,,,\n15410d17-687c-46fa-bbd9-f255741a1523,2,Football,\nc2c64ef7-8f5c-470e-915f-f5e3da04e1df,22.1,,Patriots\n\n# In this example using a Snapshot CSV:\n# - First user has all attributes set\n# - Second user has all attributes removed (empty values)\n# - Third user has Magic Score and Preferred Sport set, but Favorite Team removed\n# - Fourth user has Magic Score and Favorite Team set, but Preferred Sport removed\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, AttributeList\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\n\n# For standard attribute lists, use ua_attributes_ prefix\nstandard_list = AttributeList(\n  client=client, \n  list_name=\"ua_attributes_list\",\n  description=\"example standard list\",\n)\nstandard_list.upload(file_path=\"path/to/standard_file.csv\")\n\n# For attributesnapshot lists, use ua_attributes_snapshot_ prefix\nsnapshot_list = AttributeList(\n  client=client,\n  list_name=\"ua_attributes_snapshot_list\",\n  description=\"example snapshot list\",\n)\nsnapshot_list.upload(file_path=\"path/to/snapshot_file.csv\")\n"
            }
          ]
        },
        {
          "description": "Upload Attribute list for SMS example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "PUT /api/attribute-lists/ua_attributes_list/csv HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: text/csv\n\nmsisdn,sms_sender,firstName\n5035556789,18588675309,Jane\n4155551212,18588675309,Rory\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, AttributeList\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\n\nattribute_list = AttributeList(\n  client=client, \n  list_name=\"ua_attributes_list\",\n  description=\"example list\", \n)\n\nattribute_list.upload(file_path=\"path/to/sms_file.csv\")\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 202 Accepted\nContent-Type: application/json\n\n{\n  \"ok\" : true\n}\n"
            }
          ]
        }
      ]
    },
    "/api/attribute-lists/{list_name}/errors": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/attribute-lists/ua_attributes_list/errors HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+csv; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nAttributeListsErrorsRequest attributeListsErrorsRequest = AttributeListsErrorsRequest.newRequest(\"ua_attributes_list\");\nResponse<String> response = client.execute(attributeListsErrorsRequest);\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, AttributeList\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\n\nattribute_list = AttributeList(\n  client=client, \n  list_name=\"ua_attributes_list\",\n  description=\"example list\", \n)\n\nerrors = attribute_list.get_errors()\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: text/csv\n\n8b4de669-16f1-4e71-9a1f-0c62a8235a65,ERROR,\"Unable to parse number: forty-two\"\nd5ebe607-a3e6-4601-b97e-83ec604223fe,ERROR,\"Unable to parse date: monday\"\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/billing/channels/{year}/{month}": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/billing/channels/2023/08/?device_type=ios HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/json\nLink: <https://go.urbanairship.com/api/billing/channels/2023/08/?start=1234>; rel=next\nData-Attribute: billable_channels\n\n{\n  \"ok\": true,\n  \"next_page\": \"https://go.urbanairship.com/api/billing/channels/2023/08/?start=1234\",\n  \"billable_channels\": [\n      {\n        \"device_type\": \"ios\",\n        \"channel_id\": \"b8f9b663-0a3b-cf45-587a-be880946e881\",\n        \"last_registration\": \"2023-08-01T18:00:27\",\n        \"uninstalled\": \"2022-08-01T19:00:27\"\n      },\n      {\n        \"device_type\": \"ios\",\n        \"channel_id\": \"b8f9b663-0a3b-cf45-587a-be880946e882\",\n        \"last_registration\": \"2023-05-01T18:00:27\",\n      },\n  ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/billing/counts/current": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/billing/counts/current HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/json\nData-Attribute: counts\n\n{\n  \"ok\" : true,\n  \"counts\" :\n  [\n      {\n        \"device_type\": \"ios\",\n        \"count\": 1234,\n        \"last_updated\": \"2023-10-01T18:00:27\"\n      },\n      {\n        \"device_type\": \"android\",\n        \"count\": 4321,\n        \"last_updated\": \"2023-10-01T18:00:27\"\n      },\n      {\n        \"device_type\": \"adm\",\n        \"count\": 123,\n        \"last_updated\": \"2023-10-01T18:00:27\"\n      },\n      {\n        \"device_type\": \"web\",\n        \"count\": 321,\n        \"last_updated\": \"2023-10-01T18:00:27\"\n      }\n  ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/billing/counts/{year}/{month}": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/billing/counts/2023/08 HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/json\nData-Attribute: counts\n\n{\n  \"ok\" : true,\n  \"counts\" :\n  [\n      {\n        \"device_type\": \"ios\",\n        \"count\": 1234,\n        \"last_updated\": \"2023-09-01T18:00:27\"\n      },\n      {\n        \"device_type\": \"android\",\n        \"count\": 4321,\n        \"last_updated\": \"2023-09-01T18:00:27\"\n      },\n      {\n        \"device_type\": \"adm\",\n        \"count\": 123,\n        \"last_updated\": \"2023-09-01T18:00:27\"\n      },\n      {\n        \"device_type\": \"web\",\n        \"count\": 321,\n        \"last_updated\": \"2023-09-01T18:00:27\"\n      }\n  ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/bulk-send": {
      "post": [
        {
          "description": "Example Create and Send a message with bulk ID",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/bulk-send HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3;\nContent-type: application/json\n\n{\n    \"audience\" : {\n      \"bulk_id\" : \"36d5a261-0454-40f5-b952-942c4b2b0f22\"\n    },\n    \"device_types\" : [ \"android\" ],\n    \"notification\" : {\n      \"alert\" : \"Welcome to the winter sale!!\"\n    },\n    \"campaigns\": {\n      \"categories\": [\"winter sale\", \"west coast\"]\n    }\n}\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 202 Accepted\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true,\n    \"operation_id\": \"67c65146-c27f-431f-b54a-83aca694fdd3\",\n    \"push_ids\": [\n      \"c0eead17-333b-4f86-8a42-9fb7be1ed627\"\n    ],\n    \"message_ids\": [],\n    \"content_urls\": []\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/bulk-send/validate": {
      "post": [
        {
          "description": "Example Validate Create and Send a message with bulk ID",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/bulk-send/validate HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3;\nContent-type: application/json\n\n{\n    \"audience\" : {\n      \"bulk_id\" : \"36d5a261-0454-40f5-b952-942c4b2b0f22\"\n    },\n    \"device_types\" : [ \"android\" ],\n    \"notification\" : {\n      \"alert\" : \"Welcome to the winter sale!!\"\n    },\n    \"campaigns\": {\n      \"categories\": [\"winter sale\", \"west coast\"]\n    }\n}\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/bulk/{platform_name}": {
      "post": [
        {
          "description": "Example Create bulk send audience request for email",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/bulk/email HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: text/csv\n\nua_address,ua_commercial_opted_in\nsomeone@example.com,2024-04-01T18:45:30\nelse@example.com,2024-04-21T16:13:01\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Example Create bulk send audience request for SMS",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/bulk/sms HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: text/csv\n\nua_msisdn,ua_sender,ua_opted_in\n15035551212,55555,2024-04-01T18:45:30\n15031215555,55555,2024-04-21T16:13:01\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Example Create bulk send audience request for email with merge data fields",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/bulk/email HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: text/csv\n\nua_address,ua_commercial_opted_in,name,city\nsomeone@example.com,2024-04-01T18:45:30,Joe Someone,Portland\nelse@example.com,2024-04-21T16:13:01,Sir Else,Seattle\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n  \"ok\" : true,\n  \"bulk_id\": \"26425d51-fbab-4ad8-bd5f-9560ee84b087\",\n  \"field_names\": [\"ua_address\", \"ua_commercial_opted_in\", \"name\", \"city\"]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Example Create bulk send audience request for email",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/bulk/email HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: text/csv\n\nua_channel_id\n26bbfba4-f70a-4093-ab63-38d9123f6b23\n89099449-6032-4821-8f1c-fd0892fdc609\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Example Create bulk send audience request for email with merge data fields",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/bulk/email HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: text/csv\n\nua_channel_id,name,city\n26bbfba4-f70a-4093-ab63-38d9123f6b23,2018-04-01T18:45:30,Joe Someone,Portland\n89099449-6032-4821-8f1c-fd0892fdc609,2018-04-21T16:13:01,Sir Else,Seattle\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\" : true,\n    \"bulk_id\": \"26425d51-fbab-4ad8-bd5f-9560ee84b087\",\n    \"field_names\": [\"ua_channel_id\", \"name\", \"city\"]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Example Create bulk send audience request for open platform",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/bulk/open/rcs HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: text/csv\n\nua_address\n17881e35-4dcc-4f72-a017-e5aca8bb85f5\n47745e49-099d-48d7-a489-563a2ae7497d\n03079fe7-a013-4a22-9c1b-bca350a3e3fb\n8a9b3ebc-010c-41c1-9484-6395b201dffe\n65fefb71-c38e-4af8-9d6f-ec8bfcefd999\n6e6fc2ee-722a-4729-86c3-f6d289373c41\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n  \"ok\" : true,\n  \"bulk_id\": \"26425d51-fbab-4ad8-bd5f-9560ee84b087\",\n  \"field_names\": [\"ua_address\"]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Example Create bulk send audience request for open channels",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/bulk/open/rcs HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: text/csv\n\nua_channel_id\n26bbfba4-f70a-4093-ab63-38d9123f6b23\n89099449-6032-4821-8f1c-fd0892fdc609\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\" : true,\n    \"bulk_id\": \"26425d51-fbab-4ad8-bd5f-9560ee84b087\",\n    \"field_names\": [\"ua_channel_id\"]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/channel-tags-lookup": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/channel-tags-lookup HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n   \"channel_id\": \"e0f6f0a5-ba56-4ec8-bb5b-933b5bc9c289\",\n   \"device_type\": \"ios\",\n   \"tag_groups\": {\n      \"device\": [\n         \"added\", \"from\", \"device\"\n      ],\n      \"foo\": [\"bar\"],\n      \"yaba\": [\n         \"daba\",\n         \"doo\"\n      ],\n      \"ua_offset_send_time_prediction\": [\n         \"0\"\n      ]\n   },\n   \"if_modified_since\": \"2023-03-02T22:56:10\"\n}\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\": true,\n   \"tag_groups\": {\n      \"device\": [\n         \"added\", \"device\"\n      ],\n      \"yaba\": [\n         \"daba\"\n      ],\n      \"ua_offset_send_time_prediction\": [\n         \"0\"\n      ]\n   },\n   \"last_modified\": \"2023-03-02T22:56:11\"\n}\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\": true,\n   \"last_modified\": \"2023-03-02T22:56:09\"\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/channels": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/channels HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nChannelRequest request = ChannelRequest.newRequest();\nResponse<ChannelResponse> response = client.execute(request);\nChannelView channels = response.getBody().get().getChannelView().get();\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, ChannelList\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\nchannel_id = None\n\nfor channel in ChannelList(client):\n    channel_id = channel.channel_id\n    print(channel.channel_id, channel.device_type, channel.tags,\n          channel.push_address, channel.named_user_id, channel.opt_in)\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nchannel_list = UA::ChannelList.new(client: airship)\nchannel_list.each do |channel|\n    puts(channel)\nend\nputs(channel_list.count)\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\nData-Attribute: channels\nLink: <https://go.urbanairship.com/api/channels/?start=1234&limit=100>; rel=next\n\n{\n   \"ok\": true,\n   \"next_page\": \"https://go.urbanairship.com/api/channels?start=07AAFE44CD82C2F4E3FBAB8962A95B95F90A54857FB8532A155DE3510B481C13&limit=2\",\n   \"channels\": [\n      {\n         \"channel_id\": \"9c36e8c7-5a73-47c0-9716-99fd3d4197d5\",\n         \"device_type\": \"android\",\n         \"push_address\": \"FE66489F304DC75B8D6E8200DFF8A456E8DAEACEC428B427E9518741C92C6660\",\n         \"opt_in\": true,\n         \"installed\": true,\n         \"background\": true,\n         \"created\": \"2020-03-06T18:52:59\",\n         \"last_registration\": \"2020-10-07T21:28:35\",\n         \"named_user_id\": \"some_id_that_maps_to_your_systems\",\n         \"alias\": \"null\",\n         \"tags\": [\n            \"tag1\",\n            \"tag2\"\n         ],\n         \"tag_groups\": {\n            \"tag_group_1\": [\"tag1\", \"tag2\"],\n            \"tag_group_2\": [\"tag1\", \"tag2\"]\n         },\n         \"device_attributes\": {\n             \"ua_device_os\": \"10\",\n             \"ua_country\": \"US\",\n             \"ua_device_model\": \"SM-G973U\",\n             \"ua_local_tz\": \"America/Los_Angeles\",\n             \"ua_app_version\": \"2020-02-01T002322-goat\",\n             \"ua_location_settings\": \"true\",\n             \"ua_language\": \"en\",\n             \"ua_sdk_version\": \"12.2.0\",\n             \"ua_carrier\": \"Verizon \"\n          },\n          \"attributes\": {\n             \"first_name\": \"Cool\",\n             \"last_name\": \"Person\",\n             \"birthdate\": \"1983-03-15T00:00:00\",\n          }\n      },\n      {\n         \"channel_id\": \"bd36e8c7-5a73-47c0-9716-99fd3d4197d5\",\n         \"device_type\": \"ios\",\n         \"push_address\": null,\n         \"opt_in\": false,\n         \"installed\": true,\n         \"background\": true,\n         \"created\": \"2020-03-06T18:52:59\",\n         \"last_registration\": \"2020-10-07T21:28:35\",\n         \"named_user_id\": \"some_id_that_maps_to_your_systems\",\n         \"alias\": \"null\",\n         \"tags\": [\n            \"tag1\",\n            \"tag2\"\n         ],\n         \"tag_groups\": {\n            \"tag_group_1\": [\"tag1\", \"tag2\"],\n            \"tag_group_2\": [\"tag1\", \"tag2\"]\n         },\n         \"ios\": {\n            \"badge\": 0,\n            \"quiettime\": {\n               \"start\": null,\n               \"end\": null\n            },\n            \"tz\": null\n         }\n      }\n   ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/channels HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n   \"channel\" : {\n      \"device_type\": \"ios\",\n      \"opt_in\": true,\n      \"background\": true,\n      \"push_address\": \"FFFF\",\n      \"alias\": \"xxxx\",\n      \"set_tags\": true,\n      \"tags\": [\"asdf\"],\n      \"ios\": {\n         \"badge\": 0,\n         \"quiettime\": {\n            \"start\": \"22:00\",\n            \"end\": \"06:00\"\n         },\n         \"tz\": \"America/Los_Angeles\"\n      }\n   },\n   \"identity_hints\": {\n      \"user_id\": \"eDAXv7aQTQaAaUHOXuePLQ\",\n      \"apid\": \"df6a6b50-9843-0304-d5a5-743f246a4946\"\n   },\n   \"properties\": {\n      \"promotion_id\": \"64a03385-52ae-4217-873d-db791ff64225\",\n      \"loyalty_code\": \"eDAXv7aQTQaAaUHOXuePLQ\"\n   }\n}\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 201 Created\nContent-Type: application/json\nLocation: https://device-api.urbanairship.com/api/channels/df6a6b50-9843-0304-d5a5-743f246a4946\n\n{\n   \"ok\": true,\n   \"channel_id\": \"df6a6b50-9843-0304-d5a5-743f246a4946\"\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/channels/attributes": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/channels/attributes HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n    \"audience\": {\n       \"android_channel\": [\"13863b3c-f860-4bbf-a9f1-4d785379b8a2\"]\n    },\n    \"attributes\": [\n       {\n             \"action\": \"set\",\n             \"key\": \"major_league\",\n             \"value\": \"sf_giants\"\n       },\n       {\n             \"action\": \"remove\",\n             \"key\": \"minor_league\"\n       },\n       {\n             \"action\": \"set\",\n             \"key\": \"position\",\n             \"value\": \"LF\"\n       },\n       {\n             \"action\": \"set\",\n             \"key\": \"specialData\",\n             \"value\": {\n                  \"timestamp\": \"1983-03-15 10:00:00\",\n                  \"specialties\": [\n                    {\n                        \"specialty\": {\n                            \"name\": \"golden\",\n                            \"property\": \"small\"\n                        }\n                    },\n                    {\n                        \"specialty\": {\n                            \"name\": \"silver\",\n                            \"property\": \"medium\"\n                        }\n                    }\n                ]\n            }\n       }\n    ]\n}\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, Attribute\n)\nimport json\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\n\nset_major_league = Attribute(\n    action=\"set\",\n    key=\"major_league\",\n    value=\"sf_giants\"\n)\n\nremove_minor_league = Attribute(\n    action=\"remove\",\n    key=\"minor_league\"\n)\n\nset_position = Attribute(\n    action=\"set\",\n    key=\"position\",\n    value=\"LF\"\n)\n\nspecialties_string = \"{\" + \\\n                   \"    \\\"timestamp\\\": \\\"1983-03-15 10:00:00\\\",\" + \\\n                   \"    \\\"specialties\\\": [{\" + \\\n                   \"            \\\"specialty\\\": {\" + \\\n                   \"                \\\"name\\\": \\\"golden\\\",\" + \\\n                   \"                \\\"property\\\": \\\"small\\\"\" + \\\n                   \"            }\" + \\\n                   \"        },\" + \\\n                   \"        {\" + \\\n                   \"            \\\"specialty\\\": {\" + \\\n                   \"                \\\"name\\\": \\\"silver\\\",\" + \\\n                   \"                \\\"property\\\": \\\"medium\\\"\" + \\\n                   \"            }\" + \\\n                   \"        }\" + \\\n                   \"    ]\" + \\\n                   \"}\"\nspecialties_json = json.loads(specialties_string)\nspecialties = Attribute(\n    action=\"set\",\n    key=\"specialties\",\n    value=specialties_json\n)\n\nmodifications = Attribute.ModifyAttributes(\n    client=client,\n    attributes=[set_major_league,\n               remove_minor_league,\n               set_position],\n    channel=\"13863b3c-f860-4bbf-a9f1-4d785379b8a2\"\n)\n\nmodifications.send()\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nAttribute setMajorLeague = Attribute.newBuilder()\n        .setAction(AttributeAction.SET)\n        .setKey(\"major_league\")\n        .setValue(\"sf_giants\")\n        .build();\n\nAttribute removeMinorLeague = Attribute.newBuilder()\n        .setAction(AttributeAction.REMOVE)\n        .setKey(\"minor_league\")\n        .build();\n\nAttribute setPosition = Attribute.newBuilder()\n        .setAction(AttributeAction.SET)\n        .setKey(\"position\")\n        .setValue(\"LF\")\n        .build();\n\nString specialtiesStr = \"{\" +\n                        \"    \\\"timestamp\\\": \\\"1983-03-15 10:00:00\\\",\" +\n                        \"    \\\"specialties\\\": [{\" +\n                        \"            \\\"specialty\\\": {\" +\n                        \"                \\\"name\\\": \\\"golden\\\",\" +\n                        \"                \\\"property\\\": \\\"small\\\"\" +\n                        \"            }\" +\n                        \"        },\" +\n                        \"        {\" +\n                        \"            \\\"specialty\\\": {\" +\n                        \"                \\\"name\\\": \\\"silver\\\",\" +\n                        \"                \\\"property\\\": \\\"medium\\\"\" +\n                        \"            }\" +\n                        \"        }\" +\n                        \"    ]\" +\n                        \"}\";\nJSONObject specialtiesJson = new JSONObject(specialtiesStr);\nAttribute setSpecialties = Attribute.newBuilder()\n        .setAction(AttributeAction.SET)\n        .setKey(\"specialties\")\n        .setValue(specialtiesJson)\n        .build();\n\nChannelAttributesPayload payload = ChannelAttributesPayload.newBuilder()\n        .addAttribute(setMajorLeague)\n        .addAttribute(removeMinorLeague)\n        .addAttribute(setPosition)\n        .setAudience(AttributeAudience.newBuilder()\n                .addDeviceId(AttributeAudienceType.ANDROID_CHANNEL, \"13863b3c-f860-4bbf-a9f1-4d785379b8a2\")\n                .build())\n        .build();\n\nChannelAttributesRequest request = ChannelAttributesRequest.newRequest(payload);\nResponse<ChannelAttributesResponse> response = client.execute(request);\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nchannel_info = UA::ChannelInfo.new(client: airship)\nchannel_info.audience = {\"android_channel\": '13863b3c-f860-4bbf-a9f1-4d785379b8a2'}\nchannel_info.attributes =  {\n    \"action\": \"set\",\n    \"key\": \"major_league\",\n    \"value\": \"sf_giants\"\n}\nchannel_info.set_attributes\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Example request with dates and numbers",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/channels/attributes HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n    \"audience\": {\n       \"android_channel\": [\"13863b3c-f860-4bbf-a9f1-4d785379b8a2\"]\n    },\n    \"attributes\": [\n       {\n             \"action\": \"set\",\n             \"key\": \"birthday\",\n             \"value\": \"1983-03-15 10:00:00\"\n       },\n       {\n             \"action\": \"set\",\n             \"key\": \"fav_number\",\n             \"value\": 42\n       },\n       {\n             \"action\": \"remove\",\n             \"key\": \"another_attribute\"\n       }\n    ]\n}\n"
            }
          ]
        }
      ]
    },
    "/api/channels/create/open/{open_platform_name}": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/channels/create/open/rcs HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n      \"bulk_id\" : \"d7953e2c-cb8d-4498-89d4-7ae2e0427841\"\n}\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 202 Accepted\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\" : true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/channels/create/{platform_name}": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/channels/create/sms HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n      \"bulk_id\" : \"d7953e2c-cb8d-4498-89d4-7ae2e0427841\",\n      \"override\" : true\n}\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 202 Accepted\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\" : true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/channels/email": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/channels/email HTTP/1.1\nAuthorization: Bearer <authorization token>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n {\n    \"channel\" : {\n        \"type\": \"email\",\n        \"commercial_opted_in\": \"2020-10-28T10:34:22\",\n        \"open_tracking_opted_in\": \"2022-12-11T00:00:00\",\n        \"click_tracking_opted_in\": \"2022-12-11T00:00:00\",\n        \"address\": \"name@example.com\",\n        \"timezone\" : \"America/Los_Angeles\",\n        \"locale_country\" : \"US\",\n        \"locale_language\" : \"en\"\n    },\n    \"opt_in_mode\" : \"classic\",\n    \"properties\" : {\n        \"interests\" : \"newsletter\"\n    },\n    \"tags\": {\n        \"my_fav_tag_group1\": [\"tag1\", \"tag2\", \"tag3\"],\n        \"my_fav_tag_group2\": [\"tag1\", \"tag2\", \"tag3\"],\n        \"my_fav_tag_group3\": [\"tag1\", \"tag2\", \"tag3\"]\n    },\n    \"attributes\": {\n        \"my_fav_attribute1\": \"attribute1\",\n        \"my_fav_attribute2\": \"attribute2\"\n    }\n }\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nRegisterEmailChannel emailChannel = RegisterEmailChannel.newBuilder()\n        .setAddress(\"name@example.com\")\n        .setEmailOptInLevel(OptInLevel.EMAIL_COMMERCIAL_OPTED_IN, \"2020-10-28T10:34:22\")\n        .setEmailOptInMode(OptInMode.CLASSIC)\n        .addProperty(\"interests\",\"newletter\")\n        .build();\n\nRegisterEmailChannelRequest request = RegisterEmailChannelRequest.newRequest(emailChannel);\nResponse<EmailChannelResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BearerTokenClient, Email\n)\n\nclient = BearerTokenClient(\n    app_key='<app_key>',\n    token='<bearer_token>'\n)\n\nemail = Email(\n    client=client,\n    address='name@example.com',\n    commercial_opted_in='2020-10-28T10:34:22',\n    timezone='America/Los_Angeles',\n    locale_country='US',\n    locale_language='en'\n)\nresponse = email.register()\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nemail_channel = UA::Email.new(client: airship)\nemail_channel.type = 'email'\nemail_channel.commercial_opted_in = '2020-10-28T10:34:22'\nemail_channel.address = 'name@example.com'\nemail_channel.timezone = 'America/Los_Angeles'\nemail_channel.locale_country = 'US'\nemail_channel.locale_language = 'en'\nemail_channel.register\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 201 Created\nLocation: https://go.urbanairship.com/api/channels/251d3318-b3cb-4e9f-876a-ea3bfa6e47bd\nContent-Type: application/json\n\n{\n    \"ok\": true,\n    \"channel_id\": \"251d3318-b3cb-4e9f-876a-ea3bfa6e47bd\",\n    \"attributes\": {\"ok\": true},\n    \"tags\": {\"ok\": true}\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/channels/email/custom-unsubscribe": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/channels/email/custom-unsubscribe?ua_redirect=https://example.com/success.html&ua_unsubscribe_token=eyJhcHBfa2V5IjoiVmwwd3lHOGtTeUN5T1VXOThXajR4ZyIsImNhbXBhaWducyI6W10sInB1c2hfaWQiOiJlY2U0MDliMC0yNzYyLTExZWUtYjE4Ny0wMjQyNDkzZjM2MTkiLCJtZXNzYWdlX3R5cGUiOiJjb21tZXJjaWFsIiwiY2hhbm5lbF9pZCI6Ik9IWWdxTDJfU3FHMTRQZWlfWjV2QkEifQ%3D%3D HTTP/1.1\nAccept: */*\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 302 Found\nLocation: https://example.com/success.html\n"
            }
          ],
          "showMissingLanguagePlaceholders": false
        }
      ]
    },
    "/api/channels/email/opt-in": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/channels/email/opt-in?app_key=ShwzPCCPS6CMlAZTMmMReQ&channel_id=c4D5tjvkNTzivY5ZCUhaBLQ&message_type=commercial&redirect=https%3A%2F%2Fdomain.example HTTP/1.1\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 302 Found\nLocation: https://domain.example\n"
            }
          ],
          "showMissingLanguagePlaceholders": false
        }
      ]
    },
    "/api/channels/email/replace/{channel_id}": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/channels/email/replace/9c36e8c7-5a73-47c0-9716-99fd3d4197d5 HTTP/1.1\nAuthorization: Bearer <authorization token>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n   \"channel\" : {\n      \"type\": \"email\",\n      \"commercial_opted_in\": \"2022-02-13T11:58:59\",\n      \"address\": \"name@example.com\",\n      \"timezone\" : \"America/Los_Angeles\",\n      \"locale_country\" : \"US\",\n      \"locale_language\" : \"en\"\n   }\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nRegisterEmailChannel emailChannel = RegisterEmailChannel.newBuilder()\n        .setAddress(\"name@example.com\")\n        .setEmailOptInLevel(OptInLevel.EMAIL_COMMERCIAL_OPTED_IN, \"2022-02-13T11:58:59\")\n        .setTimeZone(\"America/Los_Angeles\")\n        .setLocaleCountry(\"US\")\n        .setLocaleLanguage(\"en\")\n        .build();\n\nReplaceEmailChannelRequest request = ReplaceEmailChannelRequest.newRequest(\"9c36e8c7-5a73-47c0-9716-99fd3d4197d5\", emailChannel);\nResponse<EmailChannelResponse> response = client.execute(request);\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nemail_channel = UA::Email.new(client: airship)\nemail_channel.channel_id = '251d3318-b3cb-4e9f-876a-ea3bfa6e47bd'\nemail_channel.address = 'tommy@example.com'\nemail_channel.type = 'email'\nemail_channel.commercial_opted_in = '2020-10-28T10:34:22'\nemail_channel.replace\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 201 Created\nContent-Type: application/json\nLocation: https://go.urbanairship.com/api/channels/251d3318-b3cb-4e9f-876a-ea3bfa6e47bd\n\n{\n    \"ok\": true,\n    \"channel_id\": \"251d3318-b3cb-4e9f-876a-ea3bfa6e47bd\"\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/channels/email/suppress": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/channels/email/suppress HTTP/1.1\nAuthorization: Bearer <authorization token>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n    \"address\": \"name@example.com\",\n    \"reason\": \"spam_complaint\"\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nSuppressEmailChannelRequest request = SuppressEmailChannelRequest.newRequest(\"name@example.com\",\"reason\");\nResponse<GenericResponse> response = client.execute(request);\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 202 Accepted\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/channels/email/tags": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/channels/email/tags HTTP/1.1\nAuthorization: Bearer <authorization token>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n   \"audience\": {\n      \"email_address\": \"name@example.com\"\n   },\n   \"add\": {\n      \"my_fav_tag_group1\": [\"tag1\", \"tag2\", \"tag3\"],\n      \"my_fav_tag_group2\": [\"tag1\", \"tag2\", \"tag3\"],\n      \"my_fav_tag_group3\": [\"tag1\", \"tag2\", \"tag3\"]\n   }\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nEmailTagRequest request = EmailTagRequest.newRequest();\nemailTagRequest.addEmailChannel(\"name@example.com\")\n        .addTags(\"my_fav_tag_group1\", ImmutableSet.of(\"tag1\", \"tag2\", \"tag3\"))\n        .addTags(\"my_fav_tag_group2\", ImmutableSet.of(\"tag1\", \"tag2\", \"tag3\"))\n        .addTags(\"my_fav_tag_group3\", ImmutableSet.of(\"tag1\", \"tag2\", \"tag3\"));\n\nResponse<EmailChannelResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BearerTokenClient, EmailTags\n)\n\nclient = BearerTokenClient(\n    app_key='<app_key>',\n    token='<bearer_token>'\n)\n\n# replaces all existing tags on an email channel\nemail_tags = EmailTags(airship=client,\n                          address='name@example.com')\nemail_tags.set(group='my_tag_group',\n              tags=['one', 'two', 'three'])\nemail_tags.send()\n\n# adds and removes tags from an email channel\nemail_tags = EmailTags(airship=client,\n                          address='name@example.com')\nemail_tags.remove(group='my_tag_group',\n                  tags=['one', 'two', 'three'])\nemail_tags.add(group='my_tag_group',\n              tags=['some', 'new', 'tags'])\nemail_tags.send()\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nemail_tags = UA::EmailTags.new(client: airship)\n#set an audience\nemail_tags.set_audience(email_address: 'name@example.com')\n#add a tag\nemail_tags.add(group_name: 'my_fav_tag_group1', tags: 'tag2')\n#remove a tag\nemail_tags.remove(group_name: 'my_fav_tag_group1', tags: 'tag1')\nemail_tags.send_request\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/channels/email/uninstall": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/channels/email/uninstall HTTP/1.1\nAuthorization: Bearer <authorization token>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n    \"email_address\": \"name@example.com\"\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nUninstallEmailChannel uninstallEmailChannel = UninstallEmailChannel.newBuilder()\n        .setEmailAddress(\"name@example.com\")\n        .build();\n\nUninstallEmailChannelRequest request = UninstallEmailChannelRequest.newRequest(uninstallEmailChannel);\nResponse<EmailChannelResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BearerTokenClient, Email\n)\n\nclient = BearerTokenClient(\n    app_key='<app_key>',\n    token='<bearer_token>'\n)\nemail = Email(airship=client,\n                address='name@example.com')\nresp = email.uninstall()\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nemail_channel = UA::Email.new(client: airship)\nemail_channel.address = 'name@example.com'\nemail_channel.uninstall\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 202 Accepted\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/channels/email/unsubscribe": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/channels/email/unsubscribe/?app_key=Vl0wyG8kSyCyOUW98Wj4xg&channel_id=cXAdAfloQzeDdvMPnM3KKA&push_id=8a90b60f-f836-4ec6-82a4-05c3915b1c40&message_type=commercial&redirect=http%3A%2F%2Funsubscribe.urbanairship.com%2Femail%2Fsuccess.html&campaigns=shoes&campaigns=fall&group_id=79a122fc-48e2-4369-843f-a0973fd52d78 HTTP/1.1\nAccept: */*\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 302 Found\nLocation: http://unsubscribe.urbanairship.com/email/success.html\n"
            }
          ],
          "showMissingLanguagePlaceholders": false
        }
      ]
    },
    "/api/channels/email/unsuppress": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/channels/email/unsuppress HTTP/1.1\nAuthorization: Bearer <authorization token>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n    \"address\": \"name@example.com\"\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nUnsuppressEmailChannelRequest request = UnsuppressEmailChannelRequest.newRequest(\"name@example.com\");\nResponse<GenericResponse> response = client.execute(request);\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 202 Accepted\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/channels/email/{email}": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/channels/email/name%40example.com HTTP/1.1\nAuthorization: Bearer <authorization token>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n        \nChannelRequest channelRequest = ChannelRequest.newEmailLookupRequest(\"name@example.com\");\nResponse<ChannelResponse> response = client.execute(channelRequest);\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BearerTokenClient, Email\n)\n\nclient = BearerTokenClient(\n    app_key='<app_key>',\n    token='<bearer_token>'\n)\n\nresponse = Email.lookup(airship=client, address='name@example.com')\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nemail_channel = UA::Email.new(client: airship)\nemail_channel.address = 'name@example.com'\nemail_channel.lookup\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\": true,\n   \"channel\": {\n      \"channel_id\": \"01234567-890a-bcde-f012-3456789abc0\",\n      \"device_type\": \"email\",\n      \"installed\": true,\n      \"created\": \"2020-08-08T20:41:06\",\n      \"named_user_id\": \"some_id_that_maps_to_your_systems\",\n      \"email_address\": \"name@example.com\",\n      \"tag_groups\": {\n         \"tag_group_1\": [\"tag1\", \"tag2\"],\n         \"tag_group_2\": [\"tag1\", \"tag2\"]\n      },\n      \"address\": null,\n      \"opt_in\": true,\n      \"commercial_opted_in\": \"2020-10-28T10:34:22\",\n      \"commercial_opted_out\": \"2020-06-03T09:15:00\",\n      \"transactional_opted_in\": \"2020-10-28T10:34:22\",\n      \"open_tracking_opted_in\": \"2022-12-11T00:00:00\",\n      \"click_tracking_opted_in\": \"2022-12-11T00:00:00\",\n      \"open_tracking_opted_out\": \"2022-12-12T00:00:00\",\n      \"click_tracking_opted_out\": \"2022-12-12T00:00:00\",\n      \"last_registration\": \"2020-05-01T18:00:27\"\n   }\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "put": [
        {
          "description": "Example update email address",
          "examples": [
            {
              "lang": "HTTP",
              "source": "PUT /api/channels/email/251d3318-b3cb-4e9f-876a-ea3bfa6e47bd HTTP/1.1\nAuthorization: Bearer <authorization token>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n {\n     \"channel\" : {\n        \"device_type\": \"email\",\n        \"address\": \"tommy@example.com\",\n        \"commercial_opted_in\": \"2020-10-28T10:34:22\"\n     }\n  }\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n        \nUpdateEmailChannel updateEmailChannel = UpdateEmailChannel.newBuilder()\n        .setAddress(\"name@example.com\")\n        .setEmailOptInLevel(OptInLevel.EMAIL_COMMERCIAL_OPTED_IN, \"2021-10-28T10:34:22\")\n        .setEmailOptInLevel(OptInLevel.EMAIL_TRANSACTIONAL_OPTED_IN,\"2021-10-28T10:34:22\")\n        .build();\n\nUpdateEmailChannelRequest updateEmailChannelRequest = UpdateEmailChannelRequest.newRequest(\"6c8f1d3a-64d8-4ef9-b7a1-9b128013327e\", updateEmailChannel);\nResponse<EmailChannelResponse> response = client.execute(updateEmailChannelRequest);\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BearerTokenClient, Email\n)\n\nclient = BearerTokenClient(\n    app_key='<app_key>',\n    token='<bearer_token>'\n)\n\nemail = Email(\n    client=client,\n    address='tommy@example.com',\n    commercial_opted_in='2020-10-28T10:34:22'\n)\n\nresponse = email.update(channel_id='251d3318-b3cb-4e9f-876a-ea3bfa6e47bd')\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nemail_channel = UA::Email.new(client: airship)\nemail_channel.channel_id = '251d3318-b3cb-4e9f-876a-ea3bfa6e47bd'\nemail_channel.type = 'email'\nemail_channel.commercial_opted_in = '2020-10-28T10:34:22'\nemail_channel.update\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\nLocation: https://go.urbanairship.com/api/channels/251d3318-b3cb-4e9f-876a-ea3bfa6e47bd\n\n{\n    \"ok\": true,\n    \"channel_id\": \"251d3318-b3cb-4e9f-876a-ea3bfa6e47bd\"\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/channels/import": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/channels/import/ HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n[\n   {\n      \"device_type\": \"ios\",\n\n      \"opt_in\": true,\n      \"push_address\": \"FFFF\",\n\n      \"ios\": {\n         \"badge\": 0,\n         \"quiettime\": {\n            \"start\": \"22:00\",\n            \"end\": \"06:00\"\n         },\n         \"tz\": \"America/Los_Angeles\"\n      },\n\n      \"alias\": \"xxxx\",\n\n      \"set_tags\": true,\n      \"tags\": [\"asdf\"]\n   }\n]\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 202 Accepted\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/channels/open": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/channels/open HTTP/1.1\nAuthorization: Basic <master secret authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n   \"channel\": {\n      \"type\": \"open\",\n      \"opt_in\": true,\n      \"address\": \"Number Four\",\n      \"tags\": [\n         \"toaster\",\n         \"caprica\"\n      ],\n      \"timezone\": \"America/Los_Angeles\",\n      \"locale_country\": \"US\",\n      \"locale_language\": \"en\",\n      \"open\": {\n         \"open_platform_name\": \"cylon\",\n         \"identifiers\": {\n            \"model\": \"4\"\n         }\n      }\n   }\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nOpenChannel openChannel = OpenChannel.newBuilder()\n        .setOpenPlatformName(\"cylon\")\n        .setOldAddress(\"Number Four\")\n        .addIdentifier(\"model\", \"4\")\n        .build();\n\nChannel channel = Channel.newBuilder()\n        .setOpenChannel(openChannel)\n        .setChannelType(ChannelType.OPEN)\n        .setOptIn(true)\n        .setAddress(\"Number Four\")\n        .setTags(true)\n        .addTag(\"toaster\")\n        .setTimeZone(\"America/Los_Angeles\")\n        .setLocaleCountry(\"US\")\n        .setLocaleLanguage(\"en\")\n        .build();\n\nOpenChannelPayload payload = new OpenChannelPayload(channel);\nOpenChannelRequest request = OpenChannelRequest.newRequest(payload);\nResponse<OpenChannelResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, OpenChannel\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\nchannel = OpenChannel(airship=client)\nchannel.address = 'Number Four'\nchannel.open_platform = 'cylon'\nchannel.opt_in = True\nchannel.tags = ['toaster', 'caprica']\nchannel.identifiers = {'model': '4'}\nresponse = channel.create()\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nopen_channel = UA::OpenChannel.new(client: airship)\nopen_channel.opt_in = true\nopen_channel.address = 'Number Four'\nopen_channel.open_platform = 'cylon'\nopen_channel.create()\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nLocation: https://go.urbanairship.com/api/channels/df6a6b50-9843-0304-d5a5-743f246a4946\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true,\n    \"channel_id\": \"df6a6b50-9843-0304-d5a5-743f246a4946\"\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/channels/open/tags": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/channels/open/tags HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n {\n  \"audience\": {\n      \"address\": \"Number Four\",\n      \"open_platform_name\": \"cylon\"\n  },\n  \"add\": {\n    \"my_fav_tag_group1\": [\"tag1\", \"tag2\", \"tag3\"],\n    \"my_fav_tag_group2\": [\"tag1\", \"tag2\", \"tag3\"],\n    \"my_fav_tag_group3\": [\"tag1\", \"tag2\", \"tag3\"]\n  }\n }\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nOpenChannelTagRequest openChannelTagRequest =  OpenChannelTagRequest.newRequest()\n        .addOpenChannel(\"Number Four\",\"cyclon\")\n        .addTags(\"CRM_Delux\", Set.of(\"tag1\",\"tag2\"))\n        .removeTags(\"CRM_Delux\",  Set.of(\"tag3\",\"tag4\"));\nResponse<GenericResponse> response = client.execute(openChannelTagRequest);\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, OpenChannel\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\nchannel = OpenChannel(airship=client)\nchannel.address = 'Number Four'\nchannel.open_platform = 'cylon'\nchannel.tags = ['tag1', 'tag2', 'tag3']\nresponse = channel.update()\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nopen_channel = UA::OpenChannel.new(client: airship)\nopen_channel.opt_in = true\nopen_channel.address = 'Number Four'\nopen_channel.open_platform = 'cylon'\nopen_channel.channel_id = 'df6a6b50-9843-0304-d5a5-743f246a4946'\nopen_channel.tags = ['tag1', 'tag2', 'tag3']\nopen_channel.update(set_tags: true)\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 Accepted\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n  \"ok\":true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/channels/open/uninstall": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/channels/open/uninstall HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n  \"address\": \"Number Four\",\n  \"open_platform_name\": \"cylon\"\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nOpenChannelUninstallRequest openChannelUninstallRequest = OpenChannelUninstallRequest.newRequest(\"Number Four\",\"cyclon\");\nResponse<GenericResponse> response = client.execute(openChannelUninstallRequest);\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, OpenChannel\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\nchannel = OpenChannel(airship=client)\nchannel.address = 'Number Four'\nchannel.open_platform = 'cylon'\nresponse = channel.uninstall()\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\ncu = UA::OpenChannelUninstall.new(client: airship)\ncu.uninstall(address: 'Number Four', open_platform: 'cylon')\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 202 Accepted\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n  \"ok\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/channels/remove_push_address": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/channels/remove_push_address HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n   \"channel_id\": \"df6a6b50-9843-0304-d5a5-743f246a4946\",\n   \"device_type\": \"ios\"\n}\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/channels/resend": {
      "post": [
        {
          "description": "Example resend double opt-in message for SMS channel",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/channels/resend HTTP/1.1\nAuthorization: Bearer <authorization token>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n {\n    \"channel_type\": \"sms\",\n    \"channel_id\": \"c8d58c64-7eb5-40ad-ad51-d39e05335c48\"\n }\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Example resend double opt-in message for SMS with sender and msisdn",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/channels/resend HTTP/1.1\nAuthorization: Bearer <authorization token>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n {\n    \"channel_type\": \"sms\",\n    \"sender\": \"1234\",\n    \"msisdn\": \"15035551234\"\n }\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Example resend double opt-in message for email channel",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/channels/resend HTTP/1.1\nAuthorization: Bearer <authorization token>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n {\n    \"channel_type\": \"email\",\n    \"channel_id\": \"c8d58c64-7eb5-40ad-ad51-d39e05335c48\"\n }\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Example resend double opt-in message for email address",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/channels/resend HTTP/1.1\nAuthorization: Bearer <authorization token>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n {\n    \"channel_type\": \"email\",\n    \"email_address\": \"abc@example.com\"\n }\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Successful response",
          "examples": [
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n    \"ok\": true,\n}\n"
            }
          ]
        },
        {
          "description": "Error response",
          "examples": [
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 400\nContent-Type: application/json\n\n{\n    \"ok\": false,\n    \"error\": \"Could not parse request body.\",\n    \"error_code\": 40000\n}\n"
            }
          ]
        }
      ]
    },
    "/api/channels/sdk/batch/{channel_id}": {
      "put": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "PUT /api/channels/sdk/batch/df6a6b50-9843-0304-d5a5-743f246a4946?platform=ios HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n   \"tags\": {\n      \"add\": {\n         \"group1\": [\"tag1\"],\n         \"group2\": [\"tag3\"]\n      },\n      \"set\": {\n         \"group2\": [\"tag4\"]\n      }\n   },\n   \"attributes\": [\n      {\n         \"action\": \"remove\",\n         \"key\": \"minor_league\"\n      },\n      {\n         \"action\": \"set\",\n         \"key\": \"position\",\n         \"value\": \"LF\"\n      }\n   ],\n   \"subscription_lists\": [\n      {\n         \"action\": \"subscribe\",\n         \"list_id\": \"intriguing_ideas\"\n      },\n      {\n         \"action\": \"unsubscribe\",\n         \"list_id\": \"animal_facts\"\n      }\n   ]\n}\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 Ok\nContent-Type: application/json\n\n{\n   \"ok\": true,\n   \"tag_warnings\": [\"The following tag groups do not exist: random-tag-group\"],\n   \"attribute_warnings\": [\"Unable to process attribute change for attribute: 'random-attribute'. Attribute not found.\"]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/channels/sms": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/channels/sms HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n  \"msisdn\" : \"15035556789\",\n  \"sender\": \"12345\",\n  \"opted_in\": \"2020-02-13T11:58:59\",\n  \"timezone\": \"America/Los_Angeles\",\n  \"locale_country\": \"US\",\n  \"locale_language\": \"en\",\n  \"tags\": {\n      \"my_fav_tag_group1\": [\"tag1\", \"tag2\", \"tag3\"],\n      \"my_fav_tag_group2\": [\"tag1\", \"tag2\", \"tag3\"],\n      \"my_fav_tag_group3\": [\"tag1\", \"tag2\", \"tag3\"]\n  },\n  \"attributes\": {\n      \"my_fav_attribute1\": \"attribute1\",\n      \"my_fav_attribute2\": \"attribute2\"\n  }\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nSmsRegistrationRequest request = SmsRegistrationRequest\n        .newRegistrationRequest(\"12345\", \"15035556789\", DateTime.parse(\"2020-02-13T11:58:59Z\"));\n\nResponse<SmsRegistrationResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BearerTokenClient, Sms\n)\nfrom datetime import datetime\n\nclient = BearerTokenClient(\n    app_key='<app_key>',\n    token='<bearer_token>'\n)\n\nsms_channel = Sms(\n    client=client,\n    sender=\"12345\",\n    msisdn=\"15035556789\",\n    opted_in=datetime.fromisoformat(\"2020-02-13T11:58:59\"),\n    locale_country=\"US\",\n    locale_language=\"en\",\n    timezone=\"America/Los_Angeles\"\n)\n\nresponse = sms_channel.register()\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nsms_channel = UA::Sms.new(client: airship)\nsms_channel.msisdn = '15035556789'\nsms_channel.sender = '12345'\nsms_channel.opted_in = '2020-02-13T11:58:59'\nsms_channel.register\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Response (With 'opted_in')",
          "examples": [
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 201 Created\nLocation: https://go.urbanairship.com/api/channels/7c5d7328-9bb4-4ff7-86b0-96a5f1da5868\nContent-Type: application/json\n\n{\n  \"ok\": true,\n  \"operation_id\": \"62077236-d032-11e9-af71-ab156113d166\",\n  \"channel_id\": \"7c5d7328-9bb4-4ff7-86b0-96a5f1da5868\",\n  \"attributes\": {\"ok\": true},\n  \"tags\": {\"ok\": true}\n}\n"
            }
          ]
        },
        {
          "description": "Response (Without 'opted_in')",
          "examples": [
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 202 Accepted\nContent-Type: application/json\nLocation: https://go.urbanairship.com/api/channels/79fbe330-d033-11e9-adfb-df10b89c5e04\n\n{\n  \"ok\": true,\n  \"operation_id\": \"62077236-d032-11e9-af71-ab156113d166\",\n  \"push_id\": \"26350f60-d033-11e9-80e3-33def0e528d1\",\n  \"channel_id\": \"79fbe330-d033-11e9-adfb-df10b89c5e04\",\n  \"status\": \"pending\",\n  \"attributes\": {\"ok\": true},\n  \"tags\": {\"ok\": true}\n}\n"
            }
          ]
        },
        {
          "description": "Response (Project not configured with sender)",
          "examples": [
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 400 Bad Request\nContent-Type: application/json\n\n{\n    \"ok\": false,\n    \"errors\": \"Unable to retrieve details for sender 12345 with app_key <application key>\"\n}\n"
            }
          ]
        }
      ]
    },
    "/api/channels/sms/format": {
      "post": [
        {
          "description": "Example with prefix",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/channels/sms/format HTTP/1.1\nAuthorization: Bearer <authorization token>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n  \"msisdn\": \"1 (503) 555-1234\",\n  \"prefix\": \"+1\"\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Example with sender",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/channels/sms/format HTTP/1.1\nAuthorization: Bearer <authorization token>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n  \"msisdn\": \"503.555.1234\",\n  \"sender\": \"1234\"\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Successful response",
          "examples": [
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n  \"ok\": true,\n  \"valid\": true,\n  \"msisdn\": \"+15035551234\"\n}\n"
            }
          ]
        }
      ]
    },
    "/api/channels/sms/opt-out": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/channels/sms/opt-out HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n    \"sender\": \"12345\",\n    \"msisdn\": \"15035556789\"\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nSmsRegistrationRequest request = SmsRegistrationRequest\n        .newOptOutRequest(\"12345\", \"15035556789\");\n\nResponse<SmsRegistrationResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, Sms\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\n\nsms = Sms(\n    client=client,\n    sender='12345',\n    msisdn='15035556789'\n)\nresponse = sms.opt_out()\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nsms_channel = UA::Sms.new(client: airship)\nsms_channel.msisdn = '15035556789'\nsms_channel.sender = '12345'\nsms_channel.opt_out\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 202 Accepted\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/channels/sms/tags": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/channels/sms/tags HTTP/1.1\nAuthorization: Bearer <authorization token>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n   \"audience\": {\n    \"sender\": \"12345\",\n    \"msisdn\": \"15035556789\"\n   },\n   \"add\": {\n      \"my_fav_tag_group1\": [\"tag1\", \"tag2\", \"tag3\"],\n      \"my_fav_tag_group2\": [\"tag1\", \"tag2\", \"tag3\"],\n      \"my_fav_tag_group3\": [\"tag1\", \"tag2\", \"tag3\"]\n   }\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/channels/sms/uninstall": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/channels/sms/uninstall HTTP/1.1\nAuthorization: Bearer <authorization token>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n    \"sender\": \"12345\",\n    \"msisdn\": \"15035556789\"\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nSmsRegistrationRequest request = SmsRegistrationRequest\n        .newUninstallRequest(\"12345\", \"15035556789\");\n\nResponse<SmsRegistrationResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, Sms\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\n\nsms = Sms(\n    client=client,\n    sender='12345',\n    msisdn='15035556789'\n)\nresponse = sms.uninstall()\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nsms_channel = UA::Sms.new(client: airship)\nsms_channel.msisdn = '15035556789'\nsms_channel.sender = '12345'\nsms_channel.uninstall\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 202 Accepted\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/channels/sms/validate": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/channels/sms/validate HTTP/1.1\nAuthorization: Bearer <authorization token>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n  \"msisdn\": \"15035551234\",\n  \"sender\": \"1234\"\n}\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n  \"ok\": true,\n  \"valid\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/channels/sms/{channel_id}": {
      "put": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "PUT /api/channels/sms/{channel_id} HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n  \"msisdn\": \"15035556789\",\n  \"sender\": \"12345\",\n  \"opted_in\": \"2020-02-13T11:58:59\",\n  \"timezone\": \"America/Los_Angeles\",\n  \"locale_country\": \"US\",\n  \"locale_language\": \"en\"\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nUpdateSmsChannel updateSmsChannel = UpdateSmsChannel.newBuilder()\n        .setMsisdn(\"13609048615\")\n        .setSender(\"17372004196\")\n        .setOptedIn(DateTime.parse(\"2021-10-11T02:03:03\"))\n        .setLocaleCountry(\"US\")\n        .setLocaleLanguage(\"en\")\n        .setTimeZone(\"America/Los_Angeles\")\n        .build();\n\nUpdateSmsChannelRequest updateSmsChannelRequest = UpdateSmsChannelRequest.newRequest(\"308303cf-9c10-4d71-9bc2-d9f3a671ed0c\", updateSmsChannel);\n\nResponse<GenericResponse> response = client.execute(updateSmsChannelRequest);\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BearerTokenClient, Sms\n)\nfrom datetime import datetime\n\nclient = BearerTokenClient(\n    app_key='<app_key>',\n    token='<bearer_token>'\n)\n\nsms_channel = Sms(\n    client=client,\n    sender=\"12345\",\n    msisdn=\"15035556789\",\n    opted_in=datetime.fromisoformat(\"2021-02-13T11:58:59\"),\n    locale_country=\"US\",\n    locale_language=\"en\",\n    timezone=\"America/Los_Angeles\"\n)\n\n# Update properties\nsms_channel.locale_country = \"FR\"\nsms_channel.opted_in = datetime.fromisoformat(\"2020-02-13T11:58:59\")\n\nresponse = sms_channel.update()\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n  \"ok\": true,\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/channels/sms/{msisdn}/{sender}": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/channels/sms/15035556789/12345 HTTP/1.1\nAuthorization: Bearer <authorization token>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nChannelRequest channelRequest = ChannelRequest.newSmsLookupRequest(\"15035556789\",\"12345\");\nResponse<ChannelResponse> response = client.execute(channelRequest);\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, Sms\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\n\nsms = Sms(\n    client=client,\n    sender='12345',\n    msisdn='15035556789'\n)\nchannel_info = sms.lookup()\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nsms_channel = UA::Sms.new(client: airship)\nsms_channel.msisdn = '15035556789'\nsms_channel.sender = '12345'\nsms_channel.lookup\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nData-Attribute: channel\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\": true,\n   \"channel\": {\n      \"channel_id\": \"84e36d69-873b-4ffe-81cd-e74c9f002057\",\n      \"device_type\": \"sms\",\n      \"installed\": true,\n      \"push_address\": null,\n      \"named_user_id\": null,\n      \"alias\": null,\n      \"tags\": [],\n      \"tag_groups\": {\n         \"ua_channel_type\": [\n            \"sms\"\n         ],\n         \"ua_sender_id\": [\n            \"12345\"\n         ],\n         \"ua_opt_in\": [\n            \"true\"\n         ]\n      },\n      \"created\": \"2020-04-27T22:06:21\",\n      \"opt_in\": true,\n      \"opt_in_date\": \"2022-07-07T03:23:13\",\n      \"msisdn\": \"150355551234\",\n      \"last_registration\": \"2020-05-14T19:51:38\"\n   }\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Example opt_out_date",
          "examples": [
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nData-Attribute: channel\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\": true,\n   \"channel\": {\n      \"channel_id\": \"84e36d69-873b-4ffe-81cd-e74c9f002057\",\n      \"device_type\": \"sms\",\n      \"installed\": true,\n      \"push_address\": null,\n      \"named_user_id\": null,\n      \"alias\": null,\n      \"tags\": [],\n      \"tag_groups\": {\n         \"ua_channel_type\": [\n            \"sms\"\n         ],\n         \"ua_sender_id\": [\n            \"12345\"\n         ],\n         \"ua_opt_in\": [\n            \"true\"\n         ]\n      },\n      \"created\": \"2020-04-27T22:06:21\",\n      \"opt_in\": false,\n      \"opt_in_date\": \"2022-07-07T03:23:13\",\n      \"opt_out_date\": \"2022-07-08T03:23:13\",\n      \"msisdn\": \"150355551234\",\n      \"last_registration\": \"2020-05-14T19:51:38\"\n   }\n}\n"
            }
          ]
        }
      ]
    },
    "/api/channels/subscription_lists": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/channels/subscription_lists HTTP/1.1\nAuthorization: Basic <App Auth>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n   \"subscription_lists\": [\n      {\n         \"action\":\"subscribe\",\n         \"list_id\":\"intriguing_ideas\"\n      },\n      {\n         \"action\":\"unsubscribe\",\n         \"list_id\":\"animal_facts\"\n      }\n   ],\n   \"audience\": {\n      \"ios_channel\": [\n         \"b8f9b663-0a3b-cf45-587a-be880946e881\"\n      ],\n      \"email_address\": [\n         \"homer@example.com\",\n         \"nick@example.com\"\n      ]\n   }\n}\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nclient = ua.BasicAuthClient('<app key>', '<master secret>')\n\nsubscription_list = ua.SubscriptionList(client)\n\nsubscription_list.subscribe(list_id=\"intriguing_ideas\",\n                            audience=ua.email(\"nick@example.com\")\n                           )\n\nsubscription_list.unsubscribe(list_id=\"animal_facts\", \n                              audience=ua.ios_channel(\n                                 \"b8f9b663-0a3b-cf45-587a-be880946e881\"\n                                 )\n                              )\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\n SubscriptionList subscriptionList = SubscriptionList.newBuilder()\n       .setListId(\"big_deals\")\n       .setAction(SubscriptionListAction.SUBSCRIBE)\n       .build();\n\n SubscriptionListPayload payload = SubscriptionListPayload.newBuilder()\n       .addSubscriptionList(subscriptionList)\n       .setAudience(ChannelAudience.newBuilder()\n                .addDeviceId(ChannelAudienceType.ANDROID_CHANNEL, \"002b4104-c94f-418d-be86-ead3214b3244\").build())\n       .build();\n\n SubscriptionListRequest request  = SubscriptionListRequest.newRequest(payload);\n Response<SubscriptionListResponse> response = client.execute(request);\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/channels/tags": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/channels/tags HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n   \"audience\": {\n      \"ios_channel\": \"b8f9b663-0a3b-cf45-587a-be880946e881\",\n      \"android_channel\": \"13863b3c-f860-4bbf-a9f1-4d785379b8a2\"\n   },\n   \"add\": {\n      \"my_fav_tag_group1\": [\"tag1\", \"tag2\", \"tag3\"],\n      \"my_fav_tag_group2\": [\"tag1\", \"tag2\", \"tag3\"],\n      \"my_fav_tag_group3\": [\"tag1\", \"tag2\", \"tag3\"]\n   }\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nChannelTagRequest request = ChannelTagRequest.newRequest()\n        .addIOSChannel(\"b8f9b663-0a3b-cf45-587a-be880946e881\")\n        .addAndroidChannel(\"13863b3c-f860-4bbf-a9f1-4d785379b8a2\")\n        .addTags(\"my_fav_tag_group1\", ImmutableSet.of(\"tag1\", \"tag2\", \"tag3\"))\n        .addTags(\"my_fav_tag_group2\", ImmutableSet.of(\"tag1\", \"tag2\", \"tag3\"))\n        .addTags(\"my_fav_tag_group3\", ImmutableSet.of(\"tag1\", \"tag2\", \"tag3\"));\n\nResponse<GenericResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "import urbanairship as ua\n\nclient = ua.BasicAuthClient('<app key>', '<master secret>')\nchannel_tags = ua.devices.ChannelTags(client)\nios_audience = ['b8f9b663-0a3b-cf45-587a-be880946e881']\nandroid_audience = ['13863b3c-f860-4bbf-a9f1-4d785379b8a2']\nchannel_tags.set_audience(ios_audience, android_audience\n)\nchannel_tags.add('my_fav_tag_group1', ['tag1', 'tag2', 'tag3'])\nchannel_tags.remove('my_fav_tag_group2', 'tag4')\nchannel_tags.send()\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nchannel_tags = UA::ChannelTags.new(client: airship)\nios_audience = 'b8f9b663-0a3b-cf45-587a-be880946e881'\nandroid_audience = '13863b3c-f860-4bbf-a9f1-4d785379b8a2'\nchannel_tags.set_audience(\n    ios: ios_audience,\n    android: android_audience\n)\nchannel_tags.add(group_name: 'my_fav_tag_group1', tags: ['tag1', 'tag2', 'tag3'])\nchannel_tags.remove(group_name: 'my_fav_tag_group2', tags: 'tag4')\nchannel_tags.send_request\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\": true,\n   \"warnings\": [\"The following tag groups do not exist: my_fav_tag_group2\", \"The following tag groups are deactivated: my_fav_tag_group3\"]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/channels/uninstall": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/channels/uninstall HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n[\n   {\n      \"channel_id\": \"b8f9b663-0a3b-cf45-587a-be880946e881\",\n      \"device_type\": \"ios\"\n   },\n   {\n      \"channel_id\": \"13863b3c-f860-4bbf-a9f1-4d785379b8a2\",\n      \"device_type\": \"android\"\n   }\n]\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, ChannelUninstall\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\n\nchannel_uninstall = ChannelUninstall(client)\nchannel = {\n    \"channel_id\": 'b8f9b663-0a3b-cf45-587a-be880946e881',\n    \"device_type\": \"ios\"\n}\n\nchannel_uninstall.uninstall(channel)\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\ncu = UA::ChannelUninstall.new(client: airship)\n\nchans = [{\"channel_id\" => \"b8f9b663-0a3b-cf45-587a-be880946e881\",\n          \"device_type\" => \"ios\"},\n         {\"channel_id\" => \"13863b3c-f860-4bbf-a9f1-4d785379b8a2\",\n          \"device_type\" => \"android\"}]\n\ncu.uninstall(channels: chans)\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\n Set<ChannelUninstallDevice> channels = ImmutableSet.of(\n       new ChannelUninstallDevice(\"00f74677-4616-4958-bd91-30e949814d2c\", ChannelUninstallDeviceType.IOS),\n       new ChannelUninstallDevice(\"007f7156-9b82-4cb6-a2f9-e2c8e7fce13d\", ChannelUninstallDeviceType.ANDROID)\n );\n\n ChannelUninstallPayload payload = ChannelUninstallPayload.newBuilder()\n       .setChannels(channels)\n       .build();\n\n ChannelUninstallRequest request = ChannelUninstallRequest.newRequest(payload);\n Response<ChannelUninstallResponse> response = client.execute(request);\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 202 Accepted\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/channels/{channel_id}": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/channels/9c36e8c7-5a73-47c0-9716-99fd3d4197d5 HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nChannelRequest request = ChannelRequest.newRequest(\"9c36e8c7-5a73-47c0-9716-99fd3d4197d5\");\nResponse<ChannelResponse> response = client.execute(request);\nChannelView channel = response.getBody().get().getChannelView().get();\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, ChannelInfo\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\nchannel = ChannelInfo(client).lookup('9c36e8c7-5a73-47c0-9716-99fd3d4197d5')\nprint(channel.channel_id, channel.device_type, channel.tags,\n      channel.push_address, channel.named_user_id, channel.opt_in)\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nchannel_client = UA::ChannelInfo.new(client: airship)\nchannel_info = channel_client.lookup(uuid: '9c36e8c7-5a73-47c0-9716-99fd3d4197d5')\nputs(channel_info)\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\nData-Attribute: channel\n\n{\n   \"ok\": true,\n   \"channel\": {\n      \"channel_id\": \"9c36e8c7-5a73-47c0-9716-99fd3d4197d5\",\n      \"device_type\": \"ios\",\n      \"installed\": true,\n      \"opt_in\": false,\n      \"background\": true,\n      \"push_address\": \"FE66489F304DC75B8D6E8200DFF8A456E8DAEACEC428B427E9518741C92C6660\",\n      \"created\": \"2020-08-08T20:41:06\",\n      \"last_registration\": \"2020-05-01T18:00:27\",\n      \"named_user_id\": \"some_id_that_maps_to_your_systems\",\n      \"alias\": null,\n      \"tags\": [\n         \"tag1\",\n         \"tag2\"\n      ],\n      \"tag_groups\": {\n         \"tag_group_1\": [\"tag1\", \"tag2\"],\n         \"tag_group_2\": [\"tag1\", \"tag2\"]\n      },\n      \"ios\": {\n         \"badge\": 0,\n         \"quiettime\": {\n            \"start\": null,\n            \"end\": null\n         },\n         \"tz\": \"America/Los_Angeles\"\n      },\n      \"open_tracking_opted_in\": \"2022-11-26T00:00:00\",\n      \"open_tracking_opted_out\": \"2022-12-11T00:00:00\",\n      \"click_tracking_opted_in\": \"2022-11-26T00:00:00\",\n      \"click_tracking_opted_out\": \"2022-12-11T00:00:00\"\n   }\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Example open channel lookup response with all optional keys",
          "examples": [
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\nData-Attribute: channel\n\n{\n   \"ok\": true,\n   \"channel\": {\n      \"channel_id\": \"b8f9b663-0a3b-cf45-587a-be880946e881\",\n      \"type\": \"open\",\n      \"opt_in\": true,\n      \"address\": \"example@example.com\",\n\n      \"created\": \"2013-08-08T20:41:06\",\n      \"last_registration\": \"2014-05-01T18:00:27\",\n\n      \"named_user_id\": \"john_doe_123\",\n      \"tags\": [\"asdf\"],\n\n      \"tag_groups\": {\n         \"timezone\" : [\"America/Los_Angeles\"],\n         \"locale_country\" : [\"US\"],\n         \"locale_language\" : [\"en\"],\n         \"tag_group_1\" : [\"tag1\", \"tag2\"],\n         \"tag_group_2\" : [\"tag1\", \"tag2\"]\n      },\n\n      \"open\" {\n         \"open_platform_name\": \"email\",\n         \"identifiers\": {\n            \"com.example.external_id\": \"df6a6b50-9843-7894-1235-12aed4489489\"\n         }\n      }\n   }\n}\n"
            }
          ]
        },
        {
          "description": "Example open channel lookup response with only required keys",
          "examples": [
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\nData-Attribute: channel\n\n{\n   \"ok\": true,\n   \"channel\": {\n      \"channel_id\": \"b8f9b663-0a3b-cf45-587a-be880946e881\",\n\n      \"type\": \"open\",\n      \"opt_in\": false,\n      \"address\": \"example@example.com\",\n\n      \"created\": \"2013-08-08T20:41:06\",\n      \"last_modified\": \"2014-05-01T18:00:27\",\n\n      \"tags\": [],\n      \"tag_groups\" {},\n\n      \"open\": {\n         \"open_platform_name\": \"email\"\n      }\n   }\n}\n"
            }
          ]
        }
      ],
      "put": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "PUT /api/channels/df6a6b50-9843-0304-d5a5-743f246a4946 HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n   \"channel\" : {\n      \"device_type\": \"ios\",\n      \"opt_in\": true,\n      \"background\": true,\n      \"push_address\": \"FFFF\",\n      \"alias\": \"xxxx\",\n      \"set_tags\": true,\n      \"tags\": [\"qwerty\"],\n      \"tag_changes\": {\n         \"add\": [ \"qwerty\" ],\n         \"remove\": [ \"asdf\" ]\n      },\n      \"ios\": {\n         \"badge\": 0,\n         \"quiettime\": {\n            \"start\": \"22:00\",\n            \"end\": \"06:00\"\n         },\n         \"tz\": \"America/Los_Angeles\"\n      }\n   },\n   \"identity_hints\": {\n      \"ua_id\": \"64a03385-52ae-4217-873d-db791ff64225\",\n      \"user_id\": \"eDAXv7aQTQaAaUHOXuePLQ\"\n   }\n}\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n   \"ok\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/channels/{channel_id}/attributes": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/channels/b8f9b663-0a3b-cf45-587a-be880946e881/attributes?platform=ios HTTP/1.1\nAuthorization: Basic <App Auth>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n   \"attributes\":[\n      {\n         \"action\":\"set\",\n         \"key\":\"email\",\n         \"value\":\"vip@example.com\",\n         \"timestamp\":\"2022-09-19 12:00:00\"\n      },\n      {\n         \"action\":\"remove\",\n         \"key\":\"number\",\n         \"timestamp\":\"2022-09-19 12:00:00\"\n      },\n      {\n         \"action\":\"set\",\n         \"key\":\"name\",\n         \"value\":\"Freddy\",\n         \"timestamp\":\"2022-09-19 12:00:00\"\n      }\n   ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/contacts/associated_types/{contact_id}": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/contacts/associated_types/eed87e83-2f2f-4919-bcb0-8c620e0fae40 HTTP/1.1\nAuthorization: Bearer <contactJWTToken>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n  \"ok\": true,\n  \"channels\": [\n    {\n      \"type\": \"sms\",\n      \"channel_id\": \"a537ac78-ef4f-4f74-8536-6fd620549186\",\n      \"sender\": \"1234\",\n      \"msisdn\": \"*******3379\",\n      \"opt_in\": true\n    },\n    {\n      \"type\": \"email\",\n      \"channel_id\": \"463c4643-a16c-48da-9585-f2c5406f828b\",\n      \"email_address\": \"d*******r@example.com\",\n      \"commercial_opted_in\": \"2024-02-11T00:00:00\"\n    }\n  ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/contacts/disassociate/{contact_id}": {
      "post": [
        {
          "description": "SMS with Channel ID",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/contacts/disassociate/eed87e83-2f2f-4919-bcb0-8c620e0fae40 HTTP/1.1\nAuthorization: Bearer <contactJWTToken>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n  \"channel_type\": \"sms\",\n  \"channel_id\": \"c8d58c64-7eb5-40ad-ad51-d39e05335c48\"\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "SMS with sender and msisdn",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/contacts/disassociate/eed87e83-2f2f-4919-bcb0-8c620e0fae40 HTTP/1.1\nAuthorization: Bearer <contactJWTToken>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n  \"channel_type\": \"sms\",\n  \"sender\": \"1234\",\n  \"msisdn\": \"15035551234\"\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Email with email address",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/contacts/disassociate/eed87e83-2f2f-4919-bcb0-8c620e0fae40 HTTP/1.1\nAuthorization: Bearer <contactJWTToken>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n  \"channel_type\": \"email\",\n  \"email_address\": \"abc@example.com\"\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Email with email address and opt_out",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/contacts/disassociate/eed87e83-2f2f-4919-bcb0-8c620e0fae40 HTTP/1.1\nAuthorization: Bearer <contactJWTToken>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n  \"channel_type\": \"email\",\n  \"email_address\": \"abc@example.com\",\n  \"opt_out\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Example of a successful response",
          "examples": [
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n    \"ok\": true,\n    \"contact\": \"eed87e83-2f2f-4919-bcb0-8c620e0fae40\",\n    \"channel_id\": \"c8d58c64-7eb5-40ad-ad51-d39e05335c48\"\n}\n"
            }
          ]
        }
      ]
    },
    "/api/contacts/identify/v2": {
      "post": [
        {
          "description": "Example identify contacts V2",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/contacts/identify/v2 HTTP/1.1\nAuthorization: Bearer <sdk channel-level authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\nX-UA-Appkey: <appkey>\nX-UA-Channel-ID: <channel id>\nX-UA-Timestamp: 2022-12-29T10:30:00Z\nX-UA-Nonce: c58fd763-928c-4155-bee9-fdba2adc15f3\n\n{\n  \"device_info\": {\n    \"device_type\": \"ios\"\n  },\n  \"action\": {\n    \"type\": \"identify\",\n    \"named_user_id\": \"my-named-user\"\n  }\n}\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n  \"ok\": true,\n  \"contact\": {\n    \"contact_id\": \"1a32e8c7-5a73-47c0-9716-99fd3d41924b\",\n    \"is_anonymous\": true,\n    \"channel_association_timestamp\": \"2022-12-29T10:15:30.00Z\"\n  }\n  \"token\": \"eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJLSHVNTE15RmVmYjdoeXR3WkV5VTF4IiwiaWF0IjoxNjAyMDY4NDIxLCJleHAiOjE2MDIwNjg0MjEsInN1YiI6InVMa2hSaktBYzVXQW1SdTFPTFZSVncifQ.kJPu3enbLJMX10xEtzlxxeum66R2ZWLs02OSVPhjomQ\",\n  \"token_expires_in\": 3600000\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/contacts/lookup/channel/{channel_id}": {
      "get": [
        {
          "description": "Example get contact ID from a Channel ID\n",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/contacts/lookup/channel/164c3a13-9c75-4ea9-be2c-1bed2c97f9c3 HTTP/1.1\nAuthorization: Basic <application or master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\": true,\n   \"contact_id\": \"7c24ebdd-ec06-47d4-9a56-ced8611f5b52\",\n   \"is_anonymous\": false\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/contacts/lookup/named_user/{named_user_id}": {
      "get": [
        {
          "description": "Example get contact ID from a Named User ID\n",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/contacts/lookup/named_user/90ae282f-f56e-4037-8174-482ef7e3e5f4 HTTP/1.1\nAuthorization: Basic <application or master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\": true,\n   \"contact_id\": \"7c24ebdd-ec06-47d4-9a56-ced8611f5b52\"\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/contacts/scoped/{contact_id}": {
      "post": [
        {
          "description": "Example scoped contact batch operations\n",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/contacts/scoped/77721a11-7ffa-4362-9bdb-f27ca891f9de HTTP/1.1\nAuthorization: Basic <application or master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n  \"scoped\": [{\n    \"scope\": [\"web\", \"email\", \"app\"],\n    \"subscription_lists\": {\n      \"subscribe\": [\"subscription_1\", \"subscription_2\"],\n      \"unsubscribe\": [\"subscription_3\"]\n    }\n  }]\n}\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/create-and-send": {
      "post": [
        {
          "description": "Example Create and Send a message for email",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/create-and-send HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n  \"audience\": {\n    \"create_and_send\" : [\n      {\n        \"ua_address\": \"new@example.com\",\n        \"ua_commercial_opted_in\": \"2020-11-29T10:34:22\",\n        \"ua_open_tracking_opted_in\": \"2022-11-02T10:35:00\",\n        \"ua_click_tracking_opted_in\": \"2022-11-02T10:36:00\" \n      },\n      {\n        \"ua_address\" : \"ben@example.com\",\n        \"ua_commercial_opted_in\": \"2020-11-29T12:45:10\",\n        \"ua_open_tracking_opted_out\": \"2022-11-02T10:35:00\",\n        \"ua_click_tracking_opted_out\": \"2022-11-02T10:36:00\"\n      }\n    ]\n  },\n  \"device_types\" : [ \"email\" ],\n  \"notification\" : {\n    \"email\": {\n      \"subject\": \"Welcome to the Winter Sale! \",\n      \"html_body\": \"<h1>Seasons Greetings</h1><p>Check out our winter deals!</p><p><a data-ua-unsubscribe=\\\"1\\\" title=\\\"unsubscribe\\\" href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\">Unsubscribe</a></p>\",\n      \"plaintext_body\": \"Greetings! Check out our latest winter deals! [[ua-unsubscribe href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\"]]\",\n      \"message_type\": \"commercial\",\n      \"sender_name\": \"Airship\",\n      \"sender_address\": \"team@airship.com\",\n      \"reply_to\": \"no-reply@airship.com\",\n      \"click_tracking\": false,\n      \"open_tracking\": false\n    }\n  },\n  \"campaigns\": {\n      \"categories\": [\"winter sale\", \"west coast\"]\n  }\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nString htmlBodyString = \"<h1>Seasons Greetings</h1><p>Check out our winter deals!</p><p><a data-ua-unsubscribe=\\\"1\\\" title=\\\"unsubscribe\\\" href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\">Unsubscribe</a></p>\";\nString plaintextBodyString = \"Greetings! Check out our latest winter deals! [[ua-unsubscribe href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\"]]\";\n\nEmailChannel newChannel = EmailChannel.newBuilder()\n        .setAddress(\"new@example.com\")\n        .setCommertialOptedIn(DateTime.parse(\"2020-11-29T10:34:22Z\"))\n        .build();\n\nEmailChannel benChannel = EmailChannel.newBuilder()\n        .setAddress(\"ben@example.com\")\n        .setTransactionalOptedIn(DateTime.parse(\"2020-11-29T12:45:10Z\"))\n        .build();\n\nCreateAndSendAudience audience = new CreateAndSendAudience(EmailChannels.newBuilder()\n        .addChannel(newChannel)\n        .addChannel(benChannel)\n        .build());\n\nCreateAndSendEmailPayload createAndSendEmailPayload = CreateAndSendEmailPayload.newBuilder()\n        .setSubject(\"Welcome to the Winter Sale! \")\n        .setHtmlBody(htmlBodyString)\n        .setPlaintextBody(plaintextBodyString)\n        .setMessageType(MessageType.TRANSACTIONAL)\n        .setSenderName(\"Airship\")\n        .setSenderAddress(\"team@airship.com\")\n        .setReplyTo(\"no-reply@airship.com\")\n        .build();\n\nNotification notification = Notification.newBuilder()\n        .addDeviceTypeOverride(DeviceType.EMAIL, createAndSendEmailPayload)\n        .build();\n\nCampaigns campaign = Campaigns.newBuilder()\n        .addCategory(\"winter sale\")\n        .addCategory(\"west coast\")\n        .build();\n\nCreateAndSendPayload payload = CreateAndSendPayload.newBuilder()\n        .setAudience(audience)\n        .setNotification(notification)\n        .setCampaigns(campaign)\n        .build();\n\nCreateAndSendRequest request = CreateAndSendRequest.newRequest(payload);\nResponse<GenericResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, CreateAndSendPush, email, sms, mms, campaigns\n)\n\nclient = BasicAuthClient(key='<app_key>', secret='<master_secret>')\n\n# Create and Send a message for email\npush = CreateAndSendPush(client)\npush.audience = {\n    \"create_and_send\": [\n        {\n            \"ua_address\": \"new@example.com\",\n            \"ua_commercial_opted_in\": \"2020-11-29T10:34:22\"\n        },\n        {\n            \"ua_address\": \"ben@example.com\",\n            \"ua_commercial_opted_out\": \"2020-11-29T12:45:10\"\n        },\n        {\n            \"ua_address\": \"mary@example.com\",\n            \"ua_email_suppression_state\": \"BOUNCE\"\n        }\n    ]\n}\npush.device_types = [\"email\"]\npush.notification = email(\n    subject=\"Welcome to the Winter Sale!\",\n    html_body=\"<h1>Seasons Greetings</h1><p>Check out our winter deals!</p><p><a data-ua-unsubscribe=\\\"1\\\" title=\\\"unsubscribe\\\" href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\">Unsubscribe</a></p>\",\n    plaintext_body=\"Greetings! Check out our latest winter deals! [[ua-unsubscribe href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\"]]\",\n    message_type=\"transactional\",\n    sender_name=\"Airship\",\n    sender_address=\"team@airship.com\",\n    reply_to=\"no-reply@airship.com\",\n    click_tracking=False,\n    open_tracking=False,\n    attachments=[\n        {\"id\": \"0e10a6b9-725c-4f6b-9af2-9ef5b31328c0\"},\n        {\"id\": \"5503b5fe-ed69-4609-bef6-6fef0e6e428f\"}\n    ]\n)\npush.campaigns = campaigns(categories=[\"winter sale\", \"west coast\"])\n\nresponse = push.send()\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nemail_notification = UA::EmailNotification.new(client: airship)\nemail_notification.bypass_opt_in_level = false\nemail_notification.html_body = \"<h1>Seasons Greetings</h1><p>Check out our winter deals!</p><p><a data-ua-unsubscribe=\\\"1\\\" title=\\\"unsubscribe\\\" href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\">Unsubscribe</a></p>\"\nemail_notification.message_type = 'transactional'\nemail_notification.plaintext_body = 'Greetings! Check out our latest winter deals! [[ua-unsubscribe href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\"]]'\nemail_notification.reply_to = 'no-reply@airship.com'\nemail_notification.sender_address = 'team@airship.com'\nemail_notification.sender_name = 'Airship'\nemail_notification.subject = 'Welcome to the Winter Sale!'\noverride = email_notification.email_override\nsend_it = UA::CreateAndSend.new(client: airship)\nsend_it.addresses = [\n  {\n    \"ua_address\": \"new@example.com\",\n    \"ua_commercial_opted_in\": \"2020-11-29T10:34:22\"\n  },\n  {\n    \"ua_address\": \"ben@example.com\",\n    \"ua_commercial_opted_in\": \"2020-11-29T12:45:10\"\n  }\n]\nsend_it.device_types = [ \"email\" ]\nsend_it.campaigns = [\"winter sale\", \"west coast\"]\nsend_it.notification = email_notification.email_override\nsend_it.create_and_send\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Example Create and Send a message for email with stored template",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/create-and-send HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n  \"audience\": {\n    \"create_and_send\" : [\n      {\n        \"ua_address\": \"new@example.com\",\n        \"ua_commercial_opted_in\": \"2020-11-29T10:34:22\",\n        \"name\": \"New Person, Esq.\",\n        \"location\": \"City, State\"\n      },\n      {\n        \"ua_address\" : \"ben@example.com\",\n        \"ua_commercial_opted_in\": \"2020-11-29T12:45:10\",\n        \"name\": \"Ben Wyatt\",\n        \"location\": \"Pawnee, IN\"\n      }\n    ]\n  },\n  \"device_types\": [\n      \"email\"\n  ],\n  \"notification\": {\n      \"email\": {\n        \"bcc\": [\n            \"blind@example.com\"\n        ],\n        \"message_type\": \"commercial\",\n        \"reply_to\": \"no-reply@airship.com\",\n        \"sender_address\": \"team@airship.com\",\n        \"sender_name\": \"Airship\",\n        \"template\": {\n            \"template_id\": \"9335bb2a-2a45-456c-8b53-42af7898236a\"\n        }\n      }\n  }\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nEmailChannel newChannel = EmailChannel.newBuilder()\n        .setAddress(\"new@example.com\")\n        .setCommertialOptedIn(DateTime.parse(\"2020-11-29T10:34:22Z\"))\n        .build();\n\nEmailChannel benChannel = EmailChannel.newBuilder()\n        .setAddress(\"ben@example.com\")\n        .setTransactionalOptedIn(DateTime.parse(\"2020-11-29T12:45:10Z\"))\n        .build();\n\nCreateAndSendAudience audience = new CreateAndSendAudience(EmailChannels.newBuilder()\n        .addChannel(newChannel)\n        .addChannel(benChannel)\n        .build());\n\nEmailTemplate template = EmailTemplate.newBuilder()\n        .setTemplateId(\"9335bb2a-2a45-456c-8b53-42af7898236a\")\n        .build();\n\nCreateAndSendEmailPayload createAndSendEmailPayload = CreateAndSendEmailPayload.newBuilder()\n        .setEmailTemplate(template)\n        .setMessageType(MessageType.TRANSACTIONAL)\n        .setSenderName(\"Airship\")\n        .setSenderAddress(\"team@airship.com\")\n        .setReplyTo(\"no-reply@airship.com\")\n        .build();\n\nNotification notification = Notification.newBuilder()\n        .addDeviceTypeOverride(DeviceType.EMAIL, createAndSendEmailPayload)\n        .build();\n\nCreateAndSendPayload payload = CreateAndSendPayload.newBuilder()\n        .setAudience(audience)\n        .setNotification(notification)\n        .build();\n\nCreateAndSendRequest request = CreateAndSendRequest.newRequest(payload);\nResponse<GenericResponse> response = client.execute(request);\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nemail_notification = UA::EmailNotification.new(client: airship)\nemail_notification.message_type = 'transactional'\nemail_notification.reply_to = 'no-reply@airship.com'\nemail_notification.sender_address = 'team@airship.com'\nemail_notification.sender_name = 'Airship'\nemail_notification.template_id = \"9335bb2a-2a45-456c-8b53-42af7898236a\"\ninline_template = email_notification.email_with_inline_template\nsend_it = UA::CreateAndSend.new(client: airship)\nsend_it.addresses = [\n  {\n    \"ua_address\": \"new@example.com\",\n    \"ua_commercial_opted_in\": \"2020-11-29T10:34:22\"\n  },\n  {\n    \"ua_address\": \"ben@example.com\",\n    \"ua_commercial_opted_in\": \"2020-11-29T12:45:10\"\n  }\n]\nsend_it.device_types = [ \"email\" ]\nsend_it.notification = inline_template\nsend_it.create_and_send\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 202 Accepted\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true,\n    \"operation_id\": \"67c65146-c27f-431f-b54a-83aca694fdd3\",\n    \"push_ids\": [\n        \"c0eead17-333b-4f86-8a42-9fb7be1ed627\"\n    ],\n    \"message_ids\": [],\n    \"content_urls\": []\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/create-and-send/validate": {
      "post": [
        {
          "description": "Example Validate Create and Send payload",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/create-and-send/validate HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n  \"audience\": {\n    \"create_and_send\" : [\n      {\n        \"ua_address\": \"new@example.com\",\n        \"ua_commercial_opted_in\": \"2020-11-29T10:34:22\"\n      },\n      {\n        \"ua_address\" : \"ben@example.com\",\n        \"ua_commercial_opted_in\": \"2020-11-29T12:45:10\"\n      }\n    ]\n  },\n  \"device_types\" : [ \"email\" ],\n  \"notification\" : {\n    \"email\": {\n      \"subject\": \"Welcome to the Winter Sale! \",\n      \"html_body\": \"<h1>Seasons Greetings</h1><p>Check out our winter deals!</p><p><a data-ua-unsubscribe=\\\"1\\\" title=\\\"unsubscribe\\\" href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\">Unsubscribe</a></p>\",\n      \"plaintext_body\": \"Greetings! Check out our latest winter deals! [[ua-unsubscribe href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\"]]\",\n      \"message_type\": \"commercial\",\n      \"sender_name\": \"Airship\",\n      \"sender_address\": \"team@airship.com\",\n      \"reply_to\": \"no-reply@airship.com\"\n    }\n  },\n  \"campaigns\": {\n      \"categories\": [\"winter sale\", \"west coast\"]\n  }\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nString htmlBodyString = \"<h1>Seasons Greetings</h1><p>Check out our winter deals!</p><p><a data-ua-unsubscribe=\\\"1\\\" title=\\\"unsubscribe\\\" href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\">Unsubscribe</a></p>\";\nString plaintextBodyString = \"Greetings! Check out our latest winter deals! [[ua-unsubscribe href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\"]]\";\n\nEmailChannel newChannel = EmailChannel.newBuilder()\n        .setAddress(\"new@example.com\")\n        .setCommertialOptedIn(DateTime.parse(\"2020-11-29T10:34:22Z\"))\n        .build();\n\nEmailChannel benChannel = EmailChannel.newBuilder()\n        .setAddress(\"ben@example.com\")\n        .setTransactionalOptedIn(DateTime.parse(\"2020-11-29T12:45:10Z\"))\n        .build();\n\nCreateAndSendAudience audience = new CreateAndSendAudience(EmailChannels.newBuilder()\n        .addChannel(newChannel)\n        .addChannel(benChannel)\n        .build());\n\nCreateAndSendEmailPayload createAndSendEmailPayload = CreateAndSendEmailPayload.newBuilder()\n        .setSubject(\"Welcome to the Winter Sale! \")\n        .setHtmlBody(htmlBodyString)\n        .setPlaintextBody(plaintextBodyString)\n        .setMessageType(MessageType.TRANSACTIONAL)\n        .setSenderName(\"Airship\")\n        .setSenderAddress(\"team@airship.com\")\n        .setReplyTo(\"no-reply@airship.com\")\n        .build();\n\nNotification notification = Notification.newBuilder()\n        .addDeviceTypeOverride(DeviceType.EMAIL, createAndSendEmailPayload)\n        .build();\n\nCampaigns campaign = Campaigns.newBuilder()\n        .addCategory(\"winter sale\")\n        .addCategory(\"west coast\")\n        .build();\n\nCreateAndSendPayload payload = CreateAndSendPayload.newBuilder()\n        .setAudience(audience)\n        .setNotification(notification)\n        .setCampaigns(campaign)\n        .build();\n\nCreateAndSendRequest request = CreateAndSendRequest.newRequest(payload)\n        .setValidateOnly(true);\nResponse<GenericResponse> response = client.execute(request);\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nemail_notification = UA::EmailNotification.new(client: airship)\nemail_notification.bypass_opt_in_level = false\nemail_notification.html_body = \"<h1>Seasons Greetings</h1><p>Check out our winter deals!</p><p><a data-ua-unsubscribe=\\\"1\\\" title=\\\"unsubscribe\\\" href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\">Unsubscribe</a></p>\"\nemail_notification.message_type = 'transactional'\nemail_notification.plaintext_body = 'Greetings! Check out our latest winter deals! [[ua-unsubscribe href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\"]]'\nemail_notification.reply_to = 'no-reply@airship.com'\nemail_notification.sender_address = 'team@airship.com'\nemail_notification.sender_name = 'Airship'\nemail_notification.subject = 'Welcome to the Winter Sale!'\noverride = email_notification.email_override\nsend_it = UA::CreateAndSend.new(client: airship)\nsend_it.addresses = [\n  {\n    \"ua_address\": \"new@example.com\",\n    \"ua_commercial_opted_in\": \"2020-11-29T10:34:22\"\n  }\n]\nsend_it.device_types = [ \"email\" ]\nsend_it.campaigns = [\"winter sale\", \"west coast\"]\nsend_it.notification = email_notification.email_override\nsend_it.validate\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\" : true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/custom-events": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/custom-events HTTP/1.1\nAuthorization: Bearer <authorization token>\nX-UA-Appkey: <application key>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n[\n   {\n      \"occurred\": \"2020-05-02T02:31:22\",\n      \"user\": {\n         \"named_user_id\": \"hugh.manbeing\"\n      },\n      \"body\": {\n         \"name\": \"purchased\",\n         \"value\": 239.85,\n         \"transaction\": \"886f53d4-3e0f-46d7-930e-c2792dac6e0a\",\n         \"interaction_id\": \"your.store/us/en_us/pd/shoe/pid-11046546/pgid-10978234\",\n         \"interaction_type\": \"url\",\n         \"properties\": {\n            \"description\": \"Sneaker purchase\",\n            \"brand\": \"Victory Sneakers\",\n            \"colors\": [\n             \"red\",\n             \"blue\"\n            ],\n            \"items\": [\n               {\n                  \"text\": \"New Line Sneakers\",\n                  \"price\": \"$ 79.95\"\n               },\n               {\n                  \"text\": \"Old Line Sneakers\",\n                  \"price\": \"$ 79.95\"\n               },\n               {\n                  \"text\": \"Blue Line Sneakers\",\n                  \"price\": \"$ 79.95\"\n               }\n            ],\n            \"name\": \"Hugh Manbeing\",\n            \"userLocation\": {\n               \"state\": \"CO\",\n               \"zip\": \"80202\"\n            }\n         },\n         \"session_id\": \"22404b07-3f8f-4e42-a4ff-a996c18fa9f1\"\n      }\n   }\n]\n"
            },
            {
              "lang": "python",
              "source": "from datetime import datetime\nfrom urbanairship import (\n    BearerTokenClient, CustomEvent\n)\n\nclient = BearerTokenClient(\n    app_key='<app_key>',\n    token='<bearer_token>'\n)\n\nevent = CustomEvent(\n   client=client,\n   name='purchased',\n   user={'named_user_id': 'hugh.manbeing'},\n   interaction_type='url',\n   interaction_id='your.store/us/en_us/pd/shoe/pid-11046546/pgid-10978234',\n   value=239.85,\n   transaction='886f53d4-3e0f-46d7-930e-c2792dac6e0a',\n   session_id='22404b07-3f8f-4e42-a4ff-a996c18fa9f1',\n   properties={\n      'description': 'Sneaker purchase',\n      'brand': 'Victory Sneakers',\n      'colors': ['red', 'blue'],\n      'items': [\n         {'text': 'New Line Sneakers', 'price': '$ 79.95'},\n         {'text': 'Old Line Sneakers', 'price': '$ 79.95'},\n         {'text': 'Blue Line Sneakers', 'price': '$ 79.95'}\n      ],\n      'name': 'Hugh Manbeing',\n      'userLocation': {\n         'state': 'CO',\n         'zip': '80202'\n      }\n   },\n   occurred=datetime(2020, 5, 2, 2, 31, 22)\n)\n\nresponse = event.send()\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .setBearerToken(\"<bearer token>\")\n        .build();\n\nCustomEventUser customEventUser = CustomEventUser.newBuilder()\n        .setNamedUserId(\"hugh.manbeing\")\n        .build();\n\nCustomEventPropertyValue customEventProperty = CustomEventPropertyValue.of(\"Victory Sneakers\");\n\nList<CustomEventPropertyValue> items = new ArrayList<>();\nitems.add(CustomEventPropertyValue.of(\"New Line Sneakers\"));\nitems.add(CustomEventPropertyValue.of(\"Old Line Sneakers\"));\n\nDateTime occurred = new DateTime(2020, 05, 02, 02, 31, 22, DateTimeZone.UTC);\n\nCustomEventBody customEventBody = CustomEventBody.newBuilder()\n        .setName(\"purchased\")\n        .addPropertiesEntry(\"brand\", customEventProperty)\n        .addPropertiesEntry(\"items\", CustomEventPropertyValue.of(items))\n        .build();\n\nCustomEventPayload customEventPayload = CustomEventPayload.newBuilder()\n        .setCustomEventBody(customEventBody)\n        .setCustomEventUser(customEventUser)\n        .setOccurred(occurred)\n        .build();\n\nCustomEventRequest customEventRequest = CustomEventRequest.newRequest(customEventPayload);\nResponse<CustomEventResponse> response = client.execute(customEventRequest);\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', token: '<token>')\n\nexample_events = [\n  UA.custom_events(\n    body: UA.custom_events_body(\n      interaction_id: \"https://docs.airship.com/api/ua/#schemas-customeventobject\",\n      interaction_type: \"url\",\n      name: \"example\",\n      properties: {\n        \"who\" => \"Alf\",\n        \"where\" => \"In the garage!\",\n        \"from\" => \"Melmac\"\n      },\n      session_id: \"8d168d40-bc9b-4359-800c-a546918354ac\",\n      transaction: \"d768f61f-73ba-495f-9e16-b3b9c3b598b7\",\n      value: 1\n    ),\n    occurred: \"2021-10-01T00:00:00\",\n    user: UA.custom_events_user(named_user_id: \"Gordon Shumway\")\n  )\n]\nevent = Urbanairship::CustomEvents::CustomEvent.new(client: airship)\nevent.events = example_events\nevent.create\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\": true,\n   \"operation_id\": \"8c61c0c4-95b0-45a6-bc38-733f7fcb8979\"\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/delivery-report/clx/{app_key}": {
      "post": [
        {
          "description": "Example incoming request from Sinch",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/delivery-report/clx/IAbc_TTJRaabcs9-o_Gabc?sender=28444&channel_id=09a4bd41-a853-48d1-8061-d72f9336891d&send_id=1b50e0d6-1365-4290-b4c2-0d4be2cfd7a2&push_id=2eae9868-1fb3-47bc-991f-992fbfe5fdd1 HTTP/1.1\nContent-type: application/json\n\n{\n   \"type\": \"recipient_delivery_report_sms\",\n   \"batch_id\": \"eRmpk8IQIPg6_IWa\",\n   \"recipient\": \"15035551212\",\n   \"code\": \"0\",\n   \"status\": \"Delivered\",\n   \"at\": \"2023-10-02T09:34:18.542Z\",\n   \"operator_status_at\": \"2023-10-02T09:34:18.101Z\"\n}\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n   \"ok\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/delivery-report/mms/sinch": {
      "post": [
        {
          "description": "Example incoming request from Sinch",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/delivery-report/mms/sinch HTTP/1.1\nContent-type: application/xml\n\n<postback>\n   <origin>MMS_MT</origin>\n   <code>N101</code>\n   <sent-as>MMS</sent-as>\n   <status>Message Sent</status>\n   <mms-id>39597</mms-id>\n   <from>28444</from>\n   <to>12399471613</to>\n   <tracking-id>TU1TXzU5Nzg3OQ==</tracking-id>\n   <operator-id>31003</operator-id>\n   <timestamp>2014-06-07T07:27:29-05:00</timestamp>\n</postback>\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n   \"ok\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/experiments": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/experiments HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, ABTest\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\nab_test = ABTest(airship=client)\nresponse = ab_test.list_experiments()\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nab_test = UA::AbTest.new(client: airship)\nab_test.limit = 5\nab_test.list_ab_test\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Length: 123\nData-Attribute: experiments\nCount: 2\nTotal-Count: 2\nContent-Type: application/vnd.urbanairship+json; version=3\n\n {\n   \"ok\" : \"true\",\n   \"count\" : 2,\n   \"total_count\" : 2,\n   \"experiments\" : [{\n     \"name\" : \"Experiment 1\",\n     \"control\" : 0.33,\n     \"audience\" : \"all\",\n     \"device_types\": [ \"ios\", \"android\" ],\n     \"variants\" : [{\n       \"push\" : {\n         \"notification\" : {\n           \"alert\" : \"message 1\"\n         }\n       },\n       \"id\" : 0,\n     },\n     {\n       \"push\" : {\n           \"notification\" : {\n             \"alert\" : \"message 2\"\n           }\n       },\n       \"id\" : 1,\n     }],\n     \"id\" : \"b5bc3dd1-9ea4-4208-b5f1-9e7ac3fe0502\",\n     \"created_at\" : \"2020-03-03T21:08:05\",\n     \"push_id\" : \"07cec298-6b8c-49f9-8e03-0448a06f4aac\"\n   }, {\n     \"name\" : \"Experiment 2\",\n     \"description\" : \"The second experiment\",\n     \"audience\" : \"all\",\n     \"device_types\": [ \"ios\", \"android\" ],\n     \"variants\" : [{\n       \"push\" : {\n         \"notification\" : {\n           \"alert\" : \"message 1\"\n         }\n       },\n       \"id\" : 0,\n     },\n     {\n       \"push\" : {\n           \"notification\" : {\n             \"alert\" : \"message 2\"\n           }\n       },\n       \"id\" : 1,\n     }],\n     \"id\" : \"e464aa7e-be40-4994-a290-1bbada7187d8\",\n     \"created_at\" : \"2020-03-03T21:08:05\",\n     \"push_id\" : \"07cec298-6b8c-49f9-8e03-0448a06f4aac\"\n   }]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/experiments HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n    \"name\": \"Experiment 1\",\n    \"audience\": {\"tag\": \"earlyBirds\"},\n    \"device_types\": [ \"ios\", \"android\" ],\n    \"variants\": [\n        {\n            \"push\": {\n                \"notification\": {\n                    \"alert\": \"message 1\"\n                }\n            }\n        },\n        {\n            \"push\": {\n                \"notification\": {\n                    \"alert\": \"message 2\"\n                }\n            }\n        }\n    ]\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nSchedule schedule = Schedule.newBuilder()\n        .setScheduledTimestamp(DateTime.now().plusMinutes(5))\n        .build();\n\nVariant variantOne = Variant.newBuilder()\n        .setPushPayload(VariantPushPayload.newBuilder()\n        .setNotification(Notification.newBuilder()\n                .setAlert(\"message 1\")\n                .build()\n        )\n        .build())\n        .setSchedule(schedule)\n        .build();\n\nVariant variantTwo = Variant.newBuilder()\n        .setPushPayload(VariantPushPayload.newBuilder()\n        .setNotification(Notification.newBuilder()\n                .setAlert(\"message 2\")\n                .build()\n        )\n        .build())\n        .setSchedule(schedule)\n        .build();\n\nExperiment experiment = Experiment.newBuilder()\n        .setName(\"Experiment 1\")\n        .setDescription(\"Testing description\")\n        .setDeviceTypes(DeviceTypeData.of(DeviceType.IOS, DeviceType.ANDROID))\n        .setAudience(Selectors.tag(\"earlyBirds\"))\n        .addVariant(variantOne)\n        .addVariant(variantTwo)\n        .build();\n\nExperimentRequest request = ExperimentRequest.newRequest(experiment);\nResponse<ExperimentResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, ABTest, Experiment, Variant\n)\nfrom urbanairship.push import notification\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\n\n# Create push notifications for variants\npush_1 = notification(alert='message 1')\npush_2 = notification(alert='message 2')\n\n# Create variants\nvariants = [\n    Variant(push=push_1),\n    Variant(push=push_2)\n]\n\n# Create experiment\nexperiment = Experiment(\n    audience={'tag': 'earlyBirds'},\n    device_types=['ios', 'android'],\n    variants=variants,\n    name='Experiment 1'\n)\n\n# Create and send experiment\nab_test = ABTest(airship=client)\nresponse = ab_test.create(experiment=experiment)\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nvariant_one = UA::Variant.new(client: airship)\nvariant_one.push = {\n    \"notification\": {\n        \"alert\": \"message 1\"\n    }\n}\nvariant_two = UA::Variant.new(client: airship)\nvariant_two.push = {\n    \"notification\": {\n        \"alert\": \"message 2\"\n    }\n}\nexperiment = UA::Experiment.new(client: airship)\nexperiment.name = 'Experiment 1'\nexperiment.description = 'Example experiment'\nexperiment.audience = UA.tag('earlyBirds')\nexperiment.device_types = ['ios','android']\nexperiment.variants << variant_one.payload\nexperiment.variants << variant_two.payload\nab_test = UA::AbTest.new(client: airship)\nab_test.experiment_object = experiment.payload\nab_test.create_ab_test\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 201 Created\nContent-Length: 123\nLocation: https://go.urbanairship.com/api/experiments/0f7704e9-5dc0-4f7d-9964-e89055701b0a\nContent-Type: application/vnd.urbanairship+json; version=3\n\n  {\n    \"ok\" : \"true\",\n    \"operation_id\" : \"03ca94a3-2b27-42f6-be7e-41efc2612cd4\",\n    \"experiment_id\" : \"0f7704e9-5dc0-4f7d-9964-e89055701b0a\",\n    \"push_id\" : \"7e13f060-594c-11e4-8ed6-0800200c9a66\"\n  }\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/experiments/scheduled": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/experiments/scheduled HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, ABTest\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\nab_test = ABTest(client)\nresponse = ab_test.list_scheduled_experiment()\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nab_test = UA::AbTest.new(client: airship)\nab_test.list_scheduled_ab_test\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Length: 123\nData-Attribute: experiments\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": \"true\",\n    \"count\": 2,\n    \"total_count\": 2,\n    \"experiments\": [\n        {\n            \"id\": \"0f7704e9-5dc0-4f7d-9964-e89055701b0a\",\n            \"name\": \"Experiment 1\",\n            \"audience\": \"all\",\n            \"device_types\": [ \"ios\", \"android\" ],\n            \"variants\": [\n                {\n                    \"id\": 0,\n                    \"schedule\": {\n                        \"scheduled_time\": \"2020-11-17T20:58:00Z\"\n                    },\n                    \"push\": {\n                        \"notification\": {\n                            \"alert\": \"message 1\"\n                        }\n                    }\n                },\n                {\n                    \"id\": 1,\n                    \"schedule\": {\n                        \"scheduled_time\": \"2020-11-17T20:58:00Z\"\n                    },\n                    \"push\": {\n                        \"notification\": {\n                            \"alert\": \"message 2\"\n                        }\n                    }\n                }\n            ]\n        },\n        {\n            \"id\": \"29705c10-5951-11e4-8ed6-0800200c9a66\",\n            \"name\": \"Experiment 2\",\n            \"audience\": \"all\",\n            \"device_types\": [ \"ios\", \"android\" ],\n            \"variants\": [\n                {\n                    \"id\": 0,\n                    \"schedule\": {\n                        \"scheduled_time\": \"2020-12-17T20:58:00Z\"\n                    },\n                    \"push\": {\n                        \"notification\": {\n                            \"alert\": \"message 1\"\n                        }\n                    }\n                },\n                {\n                    \"id\": 1,\n                    \"schedule\": {\n                        \"scheduled_time\": \"2020-12-17T20:58:00Z\"\n                    },\n                    \"push\": {\n                        \"notification\": {\n                            \"alert\": \"message 2\"\n                        }\n                    }\n                }\n            ]\n        }\n    ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/experiments/scheduled/{experiment_id}": {
      "delete": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "DELETE /api/experiments/scheduled/0f7704e9-5dc0-4f7d-9964-e89055701b0a HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nExperimentDeleteRequest request = ExperimentDeleteRequest.newRequest(\"0f7704e9-5dc0-4f7d-9964-e89055701b0a\");\nResponse<ExperimentResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, ABTest\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\n\nab_test = ua.ABTest(client)\nab_test.experiment_id = \"0f7704e9-5dc0-4f7d-9964-e89055701b0a\"\n\nresponse = ab_test.delete()\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nab_test = UA::AbTest.new(client: airship)\nab_test.experiment_id = '0f7704e9-5dc0-4f7d-9964-e89055701b0a'\nab_test.delete_ab_test\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Length: 123\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n  \"ok\" : \"true\",\n  \"operation_id\" : \"03ca94a3-2b27-42f6-be7e-41efc2612cd4\"\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/experiments/validate": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/experiments/validate HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n    \"name\": \"Experiment 1\",\n    \"audience\": {\"tag\": \"earlyBirds\"},\n    \"device_types\": [ \"ios\", \"android\" ],\n    \"variants\": [\n        {\n            \"push\": {\n                \"notification\": {\n                    \"alert\": \"message 1\"\n                }\n            }\n        },\n        {\n            \"push\": {\n                \"notification\": {\n                    \"alert\": \"message 2\"\n                }\n            }\n        }\n    ]\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nSchedule schedule = Schedule.newBuilder()\n        .setScheduledTimestamp(DateTime.now().plusMinutes(5))\n        .build();\n\nVariant variantOne = Variant.newBuilder()\n        .setPushPayload(VariantPushPayload.newBuilder()\n        .setNotification(Notification.newBuilder()\n                .setAlert(\"message 1\")\n                .build()\n        )\n        .build())\n        .setSchedule(schedule)\n        .build();\n\nVariant variantTwo = Variant.newBuilder()\n        .setPushPayload(VariantPushPayload.newBuilder()\n        .setNotification(Notification.newBuilder()\n                .setAlert(\"message 2\")\n                .build()\n        )\n        .build())\n        .setSchedule(schedule)\n        .build();\n\nExperiment experiment = Experiment.newBuilder()\n        .setName(\"Experiment 1\")\n        .setDescription(\"Testing description\")\n        .setDeviceTypes(DeviceTypeData.of(DeviceType.IOS, DeviceType.ANDROID))\n        .setAudience(Selectors.tag(\"earlyBirds\"))\n        .addVariant(variantOne)\n        .addVariant(variantTwo)\n        .build();\n\nExperimentRequest request = ExperimentRequest.newRequest(experiment).setValidateOnly(true);\nResponse<ExperimentResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, ABTest, Experiment, Variant\n)\nfrom urbanairship.push import notification\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\n\n# Create push notifications for variants\npush_1 = notification(alert='message 1')\npush_2 = notification(alert='message 2')\n\n# Create variants\nvariants = [\n    Variant(push=push_1),\n    Variant(push=push_2)\n]\n\n# Create experiment\nexperiment = Experiment(\n    audience={'tag': 'earlyBirds'},\n    device_types=['ios', 'android'],\n    variants=variants,\n    name='Experiment 1'\n)\n\n# Validate experiment\nab_test = ABTest(airship=client)\nresponse = ab_test.validate(experiment=experiment)\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nvariant_one = UA::Variant.new(client: airship)\nvariant_one.push = {\n    \"notification\": {\n        \"alert\": \"message 1\"\n    }\n}\nvariant_two = UA::Variant.new(client: airship)\nvariant_two.push = {\n    \"notification\": {\n        \"alert\": \"message 2\"\n    }\n}\nexperiment = UA::Experiment.new(client: airship)\nexperiment.name = 'Experiment 1'\nexperiment.description = 'Example experiment'\nexperiment.audience = UA.tag('earlyBirds')\nexperiment.device_types = ['ios','android']\nexperiment.variants << variant_one.payload\nexperiment.variants << variant_two.payload\nab_test = UA::AbTest.new(client: airship)\nab_test.experiment_object = experiment.payload\nab_test.validate_ab_test\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Length: 123\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n  \"ok\" : \"true\",\n  \"operation_id\" : \"03ca94a3-2b27-42f6-be7e-41efc2612cd4\"\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/experiments/{experiment_id}": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/experiments/0f7704e9-5dc0-4f7d-9964-e89055701b0a HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import BasicAuthClient, ABTest\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\nab_test = ABTest(client)\nresponse = ab_test.lookup(experiment_id='0f7704e9-5dc0-4f7d-9964-e89055701b0a')\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\nUA = Urbanairship\n\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\nab_test = UA::AbTest.new(client: airship)\n\nab_test.experiment_id = '0f7704e9-5dc0-4f7d-9964-e89055701b0a'\nab_test.lookup_ab_test\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Length: 123\nData-Attribute: experiment\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\" : \"true\",\n   \"experiment\" : {\n      \"id\" : \"0f7704e9-5dc0-4f7d-9964-e89055701b0a\",\n      \"push_id\": \"d00f07b0-594c-11e4-8ed6-0800200c9a66\",\n      \"name\" : \"Experiment 1\",\n      \"audience\" : \"all\",\n      \"device_types\": [ \"ios\", \"android\" ],\n      \"variants\" : [{\n            \"push\" : {\n               \"notification\" : {\n                  \"alert\" : \"message 1\"\n               }\n            },\n            \"id\" : 0,\n         },\n         {\n            \"push\" : {\n               \"notification\" : {\n               \"alert\" : \"message 2\"\n            }\n         },\n         \"id\" : 1,\n     }]\n   }\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/in-app/{app_key}": {
      "get": [
        {
          "description": "Example list automations",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/in-app/app/IAbc_TTJRaabcs9-o_Gabc HTTP/1.1\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\nData-Attribute: in_app_messages\n\n{\n  \"ok\": true,\n  \"in_app_messages\": [\n    {\n      \"created\": \"2024-10-10T12:13:14.023\",\n      \"last_updated\": \"2024-10-10T12:13:14.023\",\n      \"message\": {\n        \"message_id\": \"031de218-9fff-44d4-b348-de4b724bb924\",\n        \"display_type\": \"banner\",\n        \"display\": {\n          \"body\": {\n            \"text\": \"We're having a fire ... sale. Oh the burning! It burns me!\"\n          },\n          \"buttons\": [\n            {\n              \"label\": \"Shop The Fire Sale\",\n              \"id\": \"shop\",\n              \"actions\": {\"url\": \"http://example.com/fire-sale\"}\n            }\n          ]\n        }\n      },\n      \"triggers\": [ {\"type\": \"foreground\", \"goal\": 1} ]\n    }\n  ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "post": [
        {
          "description": "Example create/send automation",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/in-app/IAbc_TTJRaabcs9-o_Gabc HTTP/1.1\nAccept: application/vnd.urbanairship+json; version=3\nContent-type: application/json\n\n{\n  \"in_app_message\": {\n    \"message\": {\n      \"display_type\": \"banner\",\n      \"display\": {\n        \"body\": {\n          \"text\": \"We're having a fire ... sale. Oh the burning! It burns me!\"\n        },\n        \"buttons\": [\n          {\n            \"label\": {\"text\": \"Shop The Fire Sale\"},\n            \"id\": \"shop\",\n            \"actions\": {\"url\": \"http://example.com/fire-sale\"}\n          }\n        ]\n      },\n      \"audience\": {\n        \"tags\": { \"not\": {\"tag\": \"nude\"} }\n      }\n    },\n    \"triggers\": [ {\"type\": \"foreground\", \"goal\": 1} ],\n    \"localizations\": [\n      {\n        \"locale\": {\"country\": \"FR\"},\n        \"message\": {\n          \"display\": {\n            \"body\": {\n              \"text\": \"We're having le fire ... sale. Oh le burning! It burns moi!\"\n            },\n            \"buttons\": [\n              {\n                \"label\": {\"text\": \"Shop Le Fire Sale\"},\n                \"id\": \"shop\",\n                \"actions\": {\n                  \"url\": \"http://france.example.com/fire-sale\"\n                }\n              }\n            ]\n          }\n        }\n      }\n    ],\n    \"requires_eligibility\": true\n  },\n  \"notify\": true\n}\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 201 Created\nContent-Type: application/vnd.urbanairship+json; version=3\nLocation: /api/in-app/IAbc_TTJRaabcs9-o_Gabc/031de218-9fff-44d4-b348-de4b724bb924\n\n{\n  \"ok\": true,\n  \"message_id\": \"031de218-9fff-44d4-b348-de4b724bb924\",\n  \"operation_id\": \"03ca94a3-2b27-42f6-be7e-41efc2612cd4\"\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/in-app/{app_key}/eligibility": {
      "put": [
        {
          "description": "Example update In-App Automation eligibility",
          "examples": [
            {
              "lang": "HTTP",
              "source": "PUT /api/in-app/app/af_ctTpJRuarzs9-o_Gkh3/eligibility HTTP/1.1\nAuthorization: Bearer <jwt bearer token string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n    \"automation_ids\": [\n        \"b601827f-1169-4dbd-bd39-533b8de51992\",\n        \"46b77aae-06a1-44e8-a903-b0d84ab20093\",\n    ],\n    \"requires_eligibility\": true\n}\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n  \"ok\": true,\n  \"operation_id\": \"ae7852b0-6509-4e60-a73f-4d6b92d94c56\"\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/in-app/{app_key}/validate": {
      "post": [
        {
          "description": "Example validate automation payload",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/in-app/IAbc_TTJRaabcs9-o_Gabc/validate HTTP/1.1\nAccept: application/vnd.urbanairship+json; version=3\nContent-type: application/json\n\n{\n  \"in_app_message\": {\n    \"message\": {\n      \"display_type\": \"banner\",\n      \"display\": {\n        \"body\": {\n          \"text\": \"We're having a fire ... sale. Oh the burning! It burns me!\"\n        },\n        \"buttons\": [\n          {\n            \"label\": {\"text\": \"Shop The Fire Sale\"},\n            \"id\": \"shop\",\n            \"actions\": {\"url\": \"http://example.com/fire-sale\"}\n          }\n        ]\n      },\n      \"audience\": {\n        \"tags\": { \"not\": {\"tag\": \"nude\"} }\n      }\n    },\n    \"triggers\": [ {\"type\": \"foreground\", \"goal\": 1} ],\n    \"localizations\": [\n      {\n        \"locale\": {\"country\": \"FR\"},\n        \"message\": {\n          \"display\": {\n            \"body\": {\n              \"text\": \"We're having le fire ... sale. Oh le burning! It burns moi!\"\n            },\n            \"buttons\": [\n              {\n                \"label\": {\"text\": \"Shop Le Fire Sale\"},\n                \"id\": \"shop\",\n                \"actions\": {\n                  \"url\": \"http://france.example.com/fire-sale\"\n                }\n              }\n            ]\n          }\n        }\n      }\n    ],\n    \"requires_eligibility\": true\n  },\n  \"notify\": true\n}\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 Ok\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n  \"ok\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/in-app/{app_key}/{automation_id}": {
      "delete": [
        {
          "description": "Example cancel automation",
          "examples": [
            {
              "lang": "HTTP",
              "source": "DELETE /api/in-app/IAbc_TTJRuarzs9-o_Gabc/031de218-9fff-44d4-b348-de4b724bb924 HTTP/1.1\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 Ok\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n  \"ok\": true,\n  \"operation_id\": \"03ca94a3-2b27-42f6-be7e-41efc2612cd4\"\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "get": [
        {
          "description": "Example get automation",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/in-app/app/IAbc_TTJRaabcs9-o_Gabc/031de218-9fff-44d4-b348-de4b724bb924 HTTP/1.1\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\nData-Attribute: in_app_message\n\n{\n  \"ok\": true,\n  \"in_app_message\" : {\n    \"created\": \"2014-10-10T12:13:14.023\",\n    \"last_updated\": \"2014-10-10T12:13:14.023\",\n    \"message\": {\n      \"message_id\": \"031de218-9fff-44d4-b348-de4b724bb924\",\n      \"display_type\": \"banner\",\n      \"display\": {\n        \"body\": {\n          \"text\": \"We're having a fire ... sale. Oh the burning! It burns me!\"\n        },\n        \"buttons\": [\n          {\n            \"label\": \"Shop The Fire Sale\",\n            \"id\": \"shop\",\n            \"actions\": {\n              \"url\": \"http://example.com/fire-sale\"\n            }\n          }\n        ]\n      }\n    },\n    \"triggers\": [\n      {\n        \"type\": \"foreground\",\n        \"goal\": 1\n      }\n    ]\n  }\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "put": [
        {
          "description": "Example update automation",
          "examples": [
            {
              "lang": "HTTP",
              "source": "PUT /api/in-app/IAbc_TTJRaabcs9-o_Gabc/031de218-9fff-44d4-b348-de4b724bb924 HTTP/1.1\nAccept: application/vnd.urbanairship+json; version=3\nContent-type: application/json\n\n{\n  \"in_app_message\": {\n    \"message\": {\n      \"display_type\": \"banner\",\n      \"display\": {\n        \"body\": {\n          \"text\": \"Gobias some coffee\"\n        },\n        \"buttons\": [\n          {\n            \"label\": \"Coffee\",\n            \"id\": \"shop\",\n            \"actions\": {\n              \"url\": \"http://example.com/coffee\"\n            }\n          }\n        ]\n      }\n    },\n    \"priority\": 11,\n    \"triggers\": [\n      {\n        \"type\": \"foreground\",\n        \"goal\": 1\n      }\n    ]\n  }\n}\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 Ok\nContent-Type: application/vnd.urbanairship+json; version=3\nLocation: /api/in-app/ISex_TTJRuarzs9-o_Gkhg/031de218-9fff-44d4-b348-de4b724bb924\n\n{\n  \"ok\": true,\n  \"message_id\": \"031de218-9fff-44d4-b348-de4b724bb924\",\n  \"operation_id\": \"03ca94a3-2b27-42f6-be7e-41efc2612cd4\"\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/lists": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/lists HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nStaticListListingRequest request = StaticListListingRequest.newRequest();\nResponse<StaticListListingResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, StaticLists\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\n\n# List all static lists\nstatic_lists = StaticLists(client)\nfor static_list in static_lists:\n    print(\n        static_list.name,\n        static_list.description,\n        static_list.extra,\n        static_list.created,\n        static_list.last_updated,\n        static_list.channel_count,\n        static_list.status\n    )\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nstatic_lists = UA::StaticLists.new(client: airship)\n\nstatic_lists.each do |static_list|\n    puts(static_list)\nend\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nData-Attribute: lists\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\" : true,\n   \"lists\" : [\n      {\n         \"name\" : \"platinum_members\",\n         \"description\" : \"loyalty program platinum members\",\n         \"extra\" : { \"key\" : \"value\" },\n         \"created\" : \"2020-04-08T20:41:06\",\n         \"last_modified\" : \"2020-05-01T18:00:27\",\n         \"channel_count\": 3145,\n         \"status\": \"ready\"\n      },\n      {\n         \"name\": \"gold_members\",\n         \"description\": \"loyalty program gold member\",\n         \"extra\": { \"key\": \"value\" },\n         \"created\": \"2020-04-08T20:41:06\",\n         \"last_updated\": \"2020-05-01T18:00:27\",\n         \"channel_count\": 678,\n         \"status\": \"ready\"\n      }\n   ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/lists HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n   \"name\" : \"platinum_members\",\n   \"description\" : \"loyalty program platinum members\",\n   \"extra\" : {\n      \"key\" : \"value\",\n      \"another\" : \"etc.\"\n   }\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nStaticListRequest request = StaticListRequest.newRequest(\"platinum_members\")\n                .setDescription(\"loyalty program platinum members\")\n                .addExtra(\"key\", \"value\");\n\nResponse<GenericResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, StaticList\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\n\n# Create a new static list\nstatic_list = StaticList(\n    client=client,\n    name='platinum_members'\n)\nstatic_list.description = 'loyalty program platinum members'\nstatic_list.extra = {'key': 'value'}\n\nresponse = static_list.create()\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nstatic_list = UA::StaticList.new(client: airship)\nstatic_list.name = 'platinum_members'\nstatic_list.create(description: 'loyalty program platinum members')\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 201 Created\nLocation: https://go.urbanairship.com/api/lists/platinum_members\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\" : true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/lists/{list_name}": {
      "delete": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "DELETE /api/lists/platinum_members HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nStaticListDeleteRequest request = StaticListDeleteRequest.newRequest(\"platinum_members\");\nResponse<GenericResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, StaticList\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\n\n# Delete a static list\nstatic_list = StaticList(\n    client=client,\n    name='platinum_members'\n)\nresponse = static_list.delete()\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nstatic_list = UA::StaticList.new(client: airship)\nstatic_list.name = 'platinum_members'\nstatic_list.delete\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 204 No Content\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/lists/platinum_members/ HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nStaticListLookupRequest request = StaticListLookupRequest.newRequest(\"platinum_members\");\n\nResponse<GenericResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, StaticList\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\n\n# Look up a static list\nstatic_list = StaticList(\n    client=client,\n    name='platinum_members'\n)\nresponse = static_list.lookup()\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nstatic_list = UA::StaticList.new(client: airship)\nstatic_list.name = 'platinum_members'\nstatic_list.lookup\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nData-Attribute: static_list\nLink: <https://go.urbanairship.com/api/platinum_members/list/?start=uuid101&limit=100>; rel=next\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\" : true,\n   \"name\" : \"platinum_members\",\n   \"description\" : \"loyalty program platinum members\",\n   \"extra\" : { \"key\" : \"value\" },\n   \"created\" : \"2020-04-08T20:41:06\",\n   \"last_updated\" : \"2020-05-01T18:00:27\",\n   \"channel_count\" : 1000,\n   \"status\" : \"ready\"\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "put": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "PUT /api/lists/platinum_members HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n   \"name\" : \"platinum_members\",\n   \"description\" : \"loyalty program platinum members\",\n   \"extra\" : {\n      \"key\" : \"value\"\n   }\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nStaticListRequest request = StaticListRequest.newUpdateRequest(\"platinum_members\")\n                .setDescription(\"loyalty program platinum members\")\n                .addExtra(\"key\", \"value\");\n\nResponse<GenericResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, StaticList\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\n\n# Update an existing static list\nstatic_list = StaticList(\n    client=client,\n    name='platinum_members'\n)\nstatic_list.description = 'loyalty program platinum members'\nstatic_list.extra = {'key': 'value'}\n\nresponse = static_list.update()\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nstatic_list = UA::StaticList.new(client: airship)\nstatic_list.name = 'platinum_members'\nstatic_list.update(description: 'loyalty program platinum members')\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\" : true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/lists/{list_name}/csv": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/lists/foobar/csv HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+csv; version=3\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, StaticList\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\n\n# Download a static list\nresponse = StaticList.download(\n    client=client,\n    list_name='platinum_members'\n)\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nStaticListDownloadRequest request = StaticListDownloadRequest.newRequest(\"foobar\");\nResponse<String> response = client.execute(request);\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: text/csv\n\nios_channel,6d56ab7e-2c78-4ba9-ab11-d9b664ca2b32\nios_channel,d5ebe607-a3e6-4601-b97e-83ec604223fe\nios_channel,fa599af7-43e4-4862-a570-1470bf6f53ff\nandroid_channel,0e91d0f2-c65d-4b40-b968-b9f8e8b0c987\nandroid_channel,c346a3ce-5754-4d02-8ee5-500ce470a0b7\nandroid_channel,e9a01369-5f74-4167-b660-df84014a2e57\namazon_channel,0356d138-d1d9-4572-b321-e1b67f4cd658\namazon_channel,24dc9a76-45fe-4b17-8ed7-841f96b658ad\namazon_channel,4d6b59f8-6d8c-4151-8b13-cd58d6ac8c6e\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "put": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "PUT /api/lists/platinum_members/csv HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: text/csv\n\nnamed_user,customer-42\nnamed_user,room-27\nios_channel,5i4c91s5-9tg2-k5zc-m592150z5634\nweb_channel,d132f5b7-abcf-4920-aeb3-9132ddac3d5a\nandroid_channel,52b2b587-0152-4134-a8a0-38ae6933c88a\nemail_channel,ab1a81e3-5af3-4c04-a7ae-d676960e6684\nopen_channel,6bcf3e63-a38a-44d8-8b0d-2fb5941e74ab\nsms_channel,ab1a81e3-aaf3-ac04-a7ae-a676960e6684\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nFile dataDirectory = new File(\"src/data\");\nString filePath = dataDirectory.getAbsolutePath() + \"/platinum.csv\";\nStaticListUploadRequest request = StaticListUploadRequest.newRequest(\"platinum_members\", filePath);\n\nResponse<GenericResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, StaticList\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\n\n# Upload a CSV file to a static list\nstatic_list = StaticList(\n    client=client,\n    name='platinum_members'\n)\n\nwith open('list.csv', 'r') as csv_file:\n    response = static_list.upload(csv_file)\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nstatic_list = UA::StaticList.new(client: airship)\nstatic_list.name = 'platinum_members'\nFile.open('csv_file', 'rb') do |csv|\n    static_list.upload(csv_file: csv, gzip: false)\nend\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 202 Accepted\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\" : true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Example request with header row",
          "examples": [
            {
              "lang": "HTTP",
              "source": "PUT /api/lists/foobar/csv HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: text/csv\n\nIdentifier Type,Identifier\nalias,some-user-12345\nalias,some-user-12346\nios_channel,5b1a81e3-5af3-4c04-a7ae-d676960e6684\nnamed_user,SODFHsodfuJ9433\nnamed_user,\"contains,comma\"\nnamed_user,\"contains\"\"double-quote\"\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/metered-usage": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/metered-usage HTTP/1.1\nAuthorization: Bearer <authorization token>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\nX-UA-Appkey: <application key>\nX-UA-Channel-ID: <channel id>\nX-UA-Lib-Version: \"0.16\"\nX-UA-Device-Family: IOS\nX-UA-Timestamp: 2023-09-22T18:30:00Z\nX-UA-Nonce: c58fd763-928c-4155-bee9-fdba2adc15f3\n\n{\n  \"usage\": [\n    {\n      \"event_id\": \"82100e9d-3ab5-43ee-b376-5780584407f8\",\n      \"usage_type\": \"impression\",\n      \"product\": \"scene\",\n      \"occurred\": \"2023-09-22T18:08:09Z\",\n      \"entity_id\": \"94604454-efd5-4699-8937-d17f8bbdf705\"\n    }\n  ]\n}\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n  \"ok\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/mms/clx/inbounds": {
      "post": [
        {
          "description": "Example incoming request from Sinch",
          "examples": [
            {
              "lang": "xml",
              "source": "POST /api/mms/clx/inbounds?login=username&password=pwd HTTP/1.1\nUser-Agent: Apache-HttpAsyncClient/4.0.1 (java 1.5)\nContent-Type: application/xml\nConnection: close\n\n<postback>\n        <origin>MMS_MO</origin>\n        <code>N401</code>\n        <from>14082257140</from>\n        <to>28444</to>\n        <keyword>all</keyword>\n        <tracking-id>MMS_MO_iLnCRrL6</tracking-id>\n        <operator-id>31002</operator-id>\n        <timestamp>2014-02-03T11:19:49-05:00</timestamp>\n        <message-subject></message-subject>\n        <content>\n                <file>URL of Content Here</file>\n                <file>URL of Content Here</file>\n                <file>URL of Content Here</file>\n        </content>\n</postback>\n"
            }
          ]
        },
        {
          "description": "Example response",
          "examples": [
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n   \"ok\": true\n}\n"
            }
          ]
        }
      ]
    },
    "/api/named_users": {
      "get": [
        {
          "description": "Example Named User lookup",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/named_users/?id=user-456 HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nNamedUserListingRequest request = NamedUserListingRequest.newRequest(\"user-456\");\nResponse<NamedUserListingResponse> response = client.execute(request);\nNamedUserView namedUser = response.getBody().get().getNamedUserView().get();\n\n// The Named User ID\nString namedUserId = namedUser.getNamedUserId();\n\n// Map of tag groups and the associated sets of tags\nImmutableMap<String, ImmutableSet<String>> namedUserTags = namedUser.getNamedUserTags();\n\n// All channel objects associated with the Named User\nImmutableSet<ChannelView> channelViews = namedUser.getChannelViews();\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, NamedUser\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\nnamed_user = NamedUser(airship=client, named_user_id='user-456')\nresponse = named_user.lookup()\nprint(response)\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nnamed_user = UA::NamedUser.new(client: airship)\nnamed_user.named_user_id = 'user-456'\nuser = named_user.lookup\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n  \"ok\": true,\n  \"named_user\": {\n      \"named_user_id\": \"user-456\",\n      \"created\" : \"2020-04-08T20:41:06\",\n      \"last_modified\" : \"2020-05-01T18:00:27\",\n      \"tags\": {\n        \"my_fav_tag_group\": [\n            \"tag1\",\n            \"tag2\"\n        ]\n      },\n      \"subscription_lists\": [\n        {\n          \"list_ids\": [\"example_listId-1\", \"example_listId-5\"],\n          \"scope\": \"web\"\n        },\n        {\n          \"list_ids\": [\"example_listId-2\", \"example_listId-3\"],\n          \"scope\": \"app\"\n        },\n        {\n          \"list_ids\": [\"example_listId-2\"],\n          \"scope\": \"web\"\n        },\n        {\n          \"list_ids\": [\"example_listId-3\"],\n          \"scope\": \"email\"\n        },\n        {\n          \"list_ids\": [\"example_listId-4\"],\n          \"scope\": \"sms\"\n        }\n      ],\n      \"attributes\": {\n        \"item_purchased\": \"Fur removal tool\",\n        \"cats_name\": \"Sammy\",\n        \"pets_age\": 12\n      },\n      \"user_attributes\": {\n        \"ua_country\": \"US\",\n        \"ua_language\": \"en\",\n        \"ua_tz\": \"America/Los_Angeles\"\n      },\n      \"channels\": [\n        {\n            \"channel_id\": \"dceafd02-b852-4305-83df-98b65fa40dd4\",\n            \"device_type\": \"ios\",\n            \"installed\": true,\n            \"opt_in\": true,\n            \"push_address\": \"FFFF\",\n            \"created\": \"2020-04-08T20:41:06\",\n            \"last_registration\": \"2020-05-01T18:00:27\",\n            \"tags\": [\n              \"meow\"\n            ]\n        }\n      ]\n  }\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Example Named User listing",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/named_users HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nNamedUserListingRequest request = NamedUserListingRequest.newRequest();\nResponse<NamedUserListingResponse> response = client.execute(request);\nImmutableList<NamedUserView> namedUsers = response.getBody().get().getNamedUserViews().get();\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, NamedUserList\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\nnamed_user_list = NamedUserList(airship=client)\n\nfor n in named_user_list:\n    print(n.named_user_id)\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nnamed_user_list = UA::NamedUserList.new(client: airship)\nnamed_user_list.each do |named_user|\n    puts(named_user)\nend\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nData-Attribute: named_users\nLink: <https://go.urbanairship.com/api/named_users?start=user-1234>; rel=next\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"next_page\": \"https://go.urbanairship.com/api/named_users?start=user-1234\",\n   \"named_users\": [\n      {\n         \"named_user_id\": \"user-id-1234\",\n         \"created\" : \"2020-04-08T20:41:06\",\n         \"last_modified\" : \"2020-05-01T18:00:27\",\n         \"tags\": {\n            \"my_fav_tag_group\": [\"tag1\", \"tag2\"]\n         },\n         \"subscription_lists\": [\n         {\n            \"list_ids\": [\"example_listId-1\", \"example_listId-5\"],\n            \"scope\": \"web\"\n         },\n         {\n            \"list_ids\": [\"example_listId-2\", \"example_listId-3\"],\n            \"scope\": \"app\"\n         },\n         {\n            \"list_ids\": [\"example_listId-2\"],\n            \"scope\": \"web\"\n         },\n         {\n            \"list_ids\": [\"example_listId-3\"],\n            \"scope\": \"email\"\n         }\n         ],\n         \"attributes\":{\n            \"item_purchased\":\"Fur removal tool\",\n            \"cats_name\":\"fluffy butt\",\n            \"pets_age\":2\n         },\n         \"user_attributes\": {\n            \"ua_country\": \"US\",\n            \"ua_language\": \"en\",\n            \"ua_tz\": \"America/Los_Angeles\"\n         },\n         \"channels\": [\n            {\n               \"channel_id\": \"dceafd02-b852-4305-83df-98b65fa40dd5\",\n               \"device_type\": \"ios\",\n               \"installed\": true,\n               \"opt_in\": true,\n               \"push_address\": \"FFFF\",\n               \"created\": \"2020-04-08T20:41:06\",\n               \"last_registration\": \"2020-05-01T18:00:27\",\n               \"alias\": \"xxxx\",\n               \"tags\": [\"asdf\"],\n               \"ios\": {\n                  \"badge\": 0,\n                  \"quiettime\": {\n                     \"start\": \"22:00\",\n                     \"end\": \"06:00\"\n                  },\n                  \"tz\": \"America/Los_Angeles\"\n               }\n            }\n         ]\n      }\n   ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/named_users/associate": {
      "post": [
        {
          "description": "Example associate an iOS channel with a Named User",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/named_users/associate HTTP/1.1\nAuthorization: Basic <application or master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n   \"channel_id\": \"df6a6b50-9843-0304-d5a5-743f246a4946\",\n   \"device_type\": \"ios\",\n   \"named_user_id\": \"user-id-1234\"\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nNamedUserRequest request = NamedUserRequest.newAssociationRequest()\n        .setChannel(\"df6a6b50-9843-0304-d5a5-743f246a4946\", ChannelType.IOS)\n        .setNamedUserId(\"user-id-1234\");\n\nResponse<GenericResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, NamedUser\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\nnamed_user = NamedUser(airship=client, named_user_id='user-id-1234')\nresponse = named_user.associate(channel_id='df6a6b50-9843-0304-d5a5-743f246a4946', device_type='ios')\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nnamed_user = UA::NamedUser.new(client: airship)\nnamed_user.named_user_id = 'user-id-1234'\nnamed_user.associate(channel_id: 'df6a6b50-9843-0304-d5a5-743f246a4946', device_type: 'ios')\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Example associate a web channel with Named User (do not declare device type)",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/named_users/associate HTTP/1.1\nAuthorization: Basic <application or master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n   \"channel_id\": \"wf6a6b50-9843-0304-d5a5-743f246a4946\",\n   \"named_user_id\": \"user-id-1234\"\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nNamedUserRequest request = NamedUserRequest.newAssociationRequest()\n        .setChannel(\"wf6a6b50-9843-0304-d5a5-743f246a4946\", ChannelType.WEB)\n        .setNamedUserId(\"user-id-1234\");\n\nResponse<GenericResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, NamedUser\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\nnamed_user = NamedUser(airship=client, named_user_id='user-id-1234')\nresponse = named_user.associate(channel_id='wf6a6b50-9843-0304-d5a5-743f246a4946')\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nnamed_user = UA::NamedUser.new(client: airship)\nnamed_user.named_user_id = 'user-id-1234'\nnamed_user.associate(channel_id: 'wf6a6b50-9843-0304-d5a5-743f246a4946')\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Example associate an email channel with Named User",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/named_users/associate HTTP/1.1\nAuthorization: Basic <application or master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n   \"email_address\": \"monopoly.man@example.com\",\n   \"named_user_id\": \"user-id-1234\"\n}\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, NamedUser\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\nnamed_user = NamedUser(airship=client, named_user_id='user-id-1234')\nresponse = named_user.email_associate(email_address='monopoly.man@example.com')\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nNamedUserRequest request = NamedUserRequest.newAssociationRequest()\n        .setChannel(\"em6a6b50-9843-0304-d5a5-743f246a4946\", ChannelType.EMAIL)\n        .setNamedUserId(\"user-id-1234\");\n\nResponse<GenericResponse> response = client.execute(request);\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nnamed_user = UA::NamedUser.new(client: airship)\nnamed_user.named_user_id = 'user-id-1234'\nnamed_user.associate(channel_id: 'em6a6b50-9843-0304-d5a5-743f246a4946')\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/named_users/disassociate": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/named_users/disassociate HTTP/1.1\nAuthorization: Basic <application or master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n   \"channel_id\": \"df6a6b50-9843-0304-d5a5-743f246a4946\",\n   \"device_type\": \"ios\",\n   \"named_user_id\": \"user-id-1234\"\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nNamedUserRequest request = NamedUserRequest.newDisassociationRequest()\n        .setChannel(\"df6a6b50-9843-0304-d5a5-743f246a4946\", ChannelType.IOS);\n\nResponse<GenericResponse> response = client.execute(request);\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nnamed_user = UA::NamedUser.new(client: airship)\nnamed_user.disassociate(channel_id: 'df6a6b50-9843-0304-d5a5-743f246a4946', device_type: 'ios')\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, NamedUser\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\nnamed_user = NamedUser(airship=client, named_user_id='user-id-1234')\nresponse = named_user.disassociate(channel_id='df6a6b50-9843-0304-d5a5-743f246a4946', device_type='ios')\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Example disassociate an email channel from Named User",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/named_users/disassociate HTTP/1.1\nAuthorization: Basic <application or master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n   \"email_address\": \"monopoly.man@example.com\",\n   \"named_user_id\": \"user-id-1234\"\n}\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, NamedUser\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\nnamed_user = NamedUser(airship=client, named_user_id='user-id-1234')\nresponse = named_user.email_disassociate(email_address='monopoly.man@example.com')\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nNamedUserRequest request = NamedUserRequest.newDisassociationRequest()\n        .setChannel(\"em6a6b50-9843-0304-d5a5-743f246a4946\", ChannelType.EMAIL)\n        .setNamedUserId(\"user-id-1234\");\n\nResponse<GenericResponse> response = client.execute(request);\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nnamed_user = UA::NamedUser.new(client: airship)\nnamed_user.disassociate(channel_id: 'em6a6b50-9843-0304-d5a5-743f246a4946')\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/named_users/scoped/{named_user_id}": {
      "post": [
        {
          "description": "Example scoped Named User batch operations\n",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/named_users/scoped/b8f9b663-0a3b-cf45-587a-be880946e881 HTTP/1.1\nAuthorization: Basic <application or master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n   \"scoped\": [\n      {\n          \"scope\": [\"app\"],\n          \"subscription_lists\": {\n              \"subscribe\": [\"stickers\", \"gifs\"],\n              \"unsubscribe\": [\"cookies\"]\n          }\n      },\n      {\n          \"scope\": [\"web\"],\n          \"subscription_lists\": {\n              \"subscribe\": [\"daily_snacks\", \"brunch\"],\n              \"unsubscribe\": [\"promotions\"]\n          }\n      }\n   ]\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nSet<NamedUserScopeType> scopeTypes1 = new HashSet<>(Arrays.asList(NamedUserScopeType.APP));\nSet<String> subscribeLists1 = new HashSet<>(Arrays.asList(\"stickers\", \"gifs\"));\nSet<String> unsubscribeLists1 = new HashSet<>(Arrays.asList(\"cookies\"));\n\nSet<NamedUserScopeType> scopeTypes2 = new HashSet<>(Arrays.asList(NamedUserScopeType.WEB));\nSet<String> subscribeLists2 = new HashSet<>(Arrays.asList(\"daily_snacks\", \"brunch\"));\nSet<String> unsubscribeLists2 = new HashSet<>(Arrays.asList(\"promotions\"));\n\nNamedUserScope namedUserScope1 = NamedUserScope.newBuilder()\n        .setScopes(scopeTypes1)\n        .setSubscribeLists(subscribeLists1)\n        .setUnsubscribeLists(unsubscribeLists1)\n        .build();\n\nNamedUserScope namedUserScope2 = NamedUserScope.newBuilder()\n        .setScopes(scopeTypes2)\n        .setSubscribeLists(subscribeLists2)\n        .setUnsubscribeLists(unsubscribeLists2)\n        .build();\n\nNamedUserScopedPayload namedUserScopedPayload = NamedUserScopedPayload.newBuilder()\n        .addNamedUserScope(namedUserScope1)\n        .addNamedUserScope(namedUserScope2)\n        .build();\n\nNamedUserScopedRequest request = NamedUserScopedRequest.newRequest(\"named_user_id\", namedUserScopedPayload);\nResponse<GenericResponse> response = client.execute(request);\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/named_users/tags": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/named_users/tags HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n  \"audience\": {\n      \"named_user_id\": [\n        \"user-1\",\n        \"user-2\",\n        \"user-3\"\n      ]\n  },\n  \"add\": {\n      \"crm\": [\n        \"tag1\",\n        \"tag2\",\n        \"tag3\"\n      ],\n      \"loyalty\": [\n        \"tag1\",\n        \"tag4\",\n        \"tag5\"\n      ]\n  },\n  \"remove\": {\n      \"loyalty\": [\n        \"tag6\",\n        \"tag7\"\n      ]\n  }\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nNamedUserTagRequest request = NamedUserTagRequest.newRequest()\n        .addNamedUsers(\"user-1\", \"user-2\", \"user-3\")\n        .addTags(\"crm\", ImmutableSet.of(\"tag1\", \"tag2\", \"tag3\"))\n        .addTags(\"loyalty\", ImmutableSet.of(\"tag1\", \"tag4\", \"tag5\"))\n        .removeTags(\"loyalty\", ImmutableSet.of(\"tag6\", \"tag7\"));\n\nResponse<GenericResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, NamedUser\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\nnamed_user = NamedUser(airship=client, named_user_id='user-1')\n\nresp1 = named_user.tag(\n    group='loyalty',\n    add=['tag2', 'tag3', 'tag4'],\n    remove='tag1'\n)\n\nresp2 = named_user.tag(\n    group='crm',\n    set=['tag5', 'tag6']\n)\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nnamed_user_tags = UA::NamedUserTags.new(client: airship)\nnamed_user_ids = ['user-1', 'user-2', 'user-3']\nnamed_user_tags.set_audience(user_ids: named_user_ids)\nnamed_user_tags.add(group_name: 'crm', tags: ['tag1', 'tag2', 'tag3'])\nnamed_user_tags.remove(group_name: 'loyalty', tags: ['tag6', 'tag7'])\nnamed_user_tags.send_request\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/named_users/uninstall": {
      "post": [
        {
          "description": "Example delete all users and their associated channels",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/named_users/uninstall HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n   \"named_user_id\": [\"user-id-1234\",\"user-id-5678\"]\n}\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, NamedUser\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\n\nresponse = NamedUser.uninstall(\n    client=client,\n    named_users=[\"user-id-1234\", \"user-id-5678\"]\n  )\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nnamed_user_uninstall = UA::NamedUserUninstaller.new(client: airship)\nnamed_user_uninstall.named_user_ids = ['user-id-1234']\nnamed_user_uninstall.uninstall\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nNamedUserUninstallRequest namedUserUninstallRequest = NamedUserUninstallRequest\n        .newUninstallRequest(ImmutableList.of(\"user-id-1234\",\"user-id-5678\"));\n\nResponse<GenericResponse> response = client.execute(namedUserUninstallRequest);\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/named_users/{named_user_id}": {
      "post": [
        {
          "description": "Create a Named User by associating an email and SMS channel and setting tags and attributes.\n",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/named_users/john_doe HTTP/1.1\nAuthorization: Basic <application or master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n  \"associate\": [\n      {\n        \"email_address\": \"john@example.com\"\n      },\n      {\n        \"channel_id\": \"f5346fa3-99f1-496d-be37-2895ef58f5a5\",\n        \"device_type\": \"sms\"\n      }\n  ],\n  \"tags\": {\n      \"set\": {\n          \"subscription_status\": [\"gold\"],\n          \"favorites\" : [\"sports\", \"stocks\"]\n      }\n  },\n  \"attributes\": [\n    {\n      \"action\": \"set\",\n      \"key\": \"name\",\n      \"value\": \"John\"\n    }\n  ]\n}\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, NamedUser\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\n\nassociate = [\n  {\"email_address\": \"john@example.com\"},\n  {\"channel_id\": \"f5346fa3-99f1-496d-be37-2895ef58f5a5\", \"device_type\": \"sms\"}\n]\ntags = {\n  \"set\": {\n      \"subscription_status\": [\"gold\"],\n      \"favorites\" : [\"sports\", \"stocks\"]\n      }\n}\nattributes = [\n    {\n      \"action\": \"set\",\n      \"key\": \"name\",\n      \"value\": \"John\"\n    }\n  ]\n\nnamed_user = NamedUser(\n  airship=client,\n  named_user_id=\"john_doe\"\n)\n\nresponse = named_user.update(\n  associate=associate,\n  tags=tags,\n  attributes=attributes\n)\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nNamedUserUpdateChannel namedUserUpdateChannel = NamedUserUpdateChannel.newBuilder()\n        .addChannel(NamedUserUpdateDeviceType.ANDROID_CHANNEL, \"aa2ae18c-f4b0-48ac-a859-55f26d2a7439\")\n        .build();\n\nAttribute lastName = Attribute.newBuilder()\n        .setAction(AttributeAction.SET)\n        .setKey(\"pseudo\")\n        .setValue(\"Pataki\")\n        .build();\n\nNamedUserUpdatePayload namedUserUpdatePayload = NamedUserUpdatePayload.newBuilder()\n        .addAttribute(lastName)\n        .addTags(\"go\", List.of(\"test1\",\"test2\"))\n        .removeTags(\"go\",List.of(\"test3\",\"test4\"))\n        .addNamedUserUpdateChannel(namedUserUpdateChannel)\n        .setAction(NamedUserUpdateChannelAction.ASSOCIATE)\n        .build();\n\nNamedUserUpdateRequest request = NamedUserUpdateRequest.newRequest(\"john\", namedUserUpdatePayload);\nResponse<NamedUserUpdateResponse> response = client.execute(request);\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/named_users/{named_user_id}/attributes": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/named_users/my_named_user/attributes HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n    \"attributes\": [\n        {\n            \"action\": \"set\",\n            \"key\": \"firstName\",\n            \"value\": \"Gyuri\",\n            \"timestamp\": \"2020-09-19 12:00:00\"\n        },\n        {\n            \"action\": \"remove\",\n            \"key\": \"birthDate\",\n            \"timestamp\": \"2020-09-19 12:00:00\"\n        },\n        {\n            \"action\": \"set\",\n            \"key\": \"lastName\",\n            \"value\": \"Pataki\",\n            \"timestamp\": \"2020-09-19 12:00:00\"\n        }\n    ]\n}\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, Attribute, ModifyAttributes\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\n\nset_major_league = Attribute(\n                      action=\"set\",\n                      key=\"major_league\",\n                      value=\"sf_giants\")\n\nremove_minor_league = Attribute(\n                         action=\"remove\",\n                         key=\"minor_league\")\n\nset_position = Attribute(\n                  action=\"set\",\n                  key=\"position\",\n                  value=\"LF\")\n\nmodifications = ModifyAttributes(\n                   airship=client,\n                   attributes=[set_major_league,\n                               remove_minor_league,\n                               set_position],\n                   named_user=\"my_named_user\"\n                )\n\nmodifications.send()\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nAttribute firstName = Attribute.newBuilder()\n        .setAction(AttributeAction.SET)\n        .setKey(\"firstName\")\n        .setValue(\"Gyuri\")\n        .setTimeStamp(DateTime.parse(\"2020-09-19T12:00:00Z\"))\n        .build();\n\nAttribute birthDate = Attribute.newBuilder()\n        .setAction(AttributeAction.REMOVE)\n        .setKey(\"birthDate\")\n        .setTimeStamp(DateTime.parse(\"2020-09-19T12:00:00Z\"))\n        .build();\n\nAttribute lastName = Attribute.newBuilder()\n        .setAction(AttributeAction.SET)\n        .setKey(\"lastName\")\n        .setValue(\"Pataki\")\n        .setTimeStamp(DateTime.parse(\"2020-09-19T12:00:00Z\"))\n        .build();\n\nNamedUserAttributePayload payload = NamedUserAttributePayload.newBuilder()\n        .addAttribute(firstName)\n        .addAttribute(birthDate)\n        .addAttribute(lastName)\n        .build();\n\nNamedUserAttributeRequest request = NamedUserAttributeRequest.newRequest(\"my_named_user\", payload);\nResponse<NamedUserAttributeResponse> response = client.execute(request);\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/payloads": {
      "get": [
        {
          "description": "Example retrieve payloads\n",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/payloads?ids=8dc01402-a80c-4369-9bbf-1ca5ace9560e,fc5cee97-171d-4de1-b51e-44dfcdf02925 HTTP/1.1\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\nData-attribute: payloads\n\n{\n  \"ok\": true,\n  \"payloads\": [\n    {\n      \"app_key\": \"IAex_TTJRuarzs9-o_Gkhg\",\n      \"push_id\": \"8dc01402-a80c-4369-9bbf-1ca5ace9560e\",\n      \"payload\": \"(some Base64)\",\n      \"api_version\": \"IN_APP_V2\",\n      \"created_at\": 1516303729093121980\n    },\n    {\n      \"app_key\": \"IAex_TTJRuarzs9-o_Gkhg\",\n      \"push_id\": \"fc5cee97-171d-4de1-b51e-44dfcdf02925\",\n      \"payload\": \"(some Base64)\",\n      \"api_version\": \"IN_APP_V2\",\n      \"created_at\": 1516304647009588861\n    }\n  ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "post": [
        {
          "description": "Example add/replace payload\n",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/payloads HTTP/1.1\nContent-type: application/json\nAccept: application/vnd.urbanairship+json; version=3\n\n{\n  \"app_key\": \"IAex_TTJRuarzs9-o_Gkhg\",\n  \"push_id\": \"fada2a68-d941-41bc-b351-e63e04a7b8e2\",\n  \"payload\": \"(some Base64)\",\n  \"api_version\": \"IN_APP_V2\",\n  \"created_at\": 1516303729093121980\n}\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 202 Accepted\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n  \"ok\": true,\n  \"operation_id\": \"03ca94a3-2b27-42f6-be7e-41efc2612cd4\"\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/pipelines": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/pipelines/ HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, Automation\n)\nfrom urbanairship.automation.pipeline import Pipeline\n\nclient = BasicAuthClient(\n    key='<app key>',\n    secret='<master secret>'\n)\nautomation = Automation(client)\n\nfor pipeline in automation.list_automations():\n    print(pipeline)\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nautomation = UA::Automation.new(client: airship)\nautomation.limit = 5\nautomation.list_automations\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true,\n    \"pipelines\": [\n      {\n          \"creation_time\": \"2020-03-20T18:37:23\",\n          \"enabled\": true,\n          \"immediate_trigger\": {\n            \"tag_added\": { \"tag\": \"bought_shoes\" }\n          },\n          \"last_modified_time\": \"2020-03-20T19:35:12\",\n          \"name\": \"Shoe buyers\",\n          \"outcome\": {\n            \"push\": {\n                \"audience\": \"triggered\",\n                \"device_types\": [ \"android\" ],\n                \"notification\": { \"alert\": \"So you like shoes, huh?\" }\n            }\n          },\n          \"status\": \"live\",\n          \"uid\": \"3987f98s-89s3-cx98-8z89-89adjkl29zds\",\n          \"url\": \"https://go.urbanairship.com/api/pipelines/3987f98s-89s3-cx98-8z89-89adjkl29zds\"\n      },\n      {\n          \"...\"\n      }\n    ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/pipelines HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n    \"name\":\"The Darkest Pipeline\",\n    \"enabled\":true,\n    \"immediate_trigger\":\"first_open\",\n    \"outcome\":{\n      \"push\":{\n          \"audience\":\"triggered\",\n          \"device_types\":[\n            \"ios\",\n            \"android\",\n            \"web\"\n          ],\n          \"notification\":{\n            \"alert\":\"Cool goatee, Abed\"\n          }\n      }\n    },\n    \"timing\":{\n      \"delay\":{\n          \"seconds\":7200\n      },\n      \"schedule\":{\n          \"type\":\"local\",\n          \"miss_behavior\":\"wait\",\n          \"dayparts\":[\n            {\n                \"days_of_week\":[\n                  \"thursday\"\n                ],\n                \"allowed_times\":[\n                  {\n                      \"preferred\":\"21:30:00\"\n                  }\n                ]\n            }\n          ]\n      }\n    }\n}\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, Automation\n)\nfrom urbanairship.automation.pipeline import Pipeline\n\nclient = BasicAuthClient(\n    key='<app key>',\n    secret='<master secret>'\n)\nautomation = Automation(client)\n\npipeline = Pipeline(\n    name='The Darkest Pipeline',\n    enabled=True,\n    immediate_trigger='first_open',\n    outcome={\n        'push': {\n            'audience': 'triggered',\n            'device_types': ['ios', 'android', 'web'],\n            'notification': {'alert': 'Cool goatee, Abed'}\n        }\n    },\n    timing={\n        'delay': {'seconds': 7200},\n        'schedule': {\n            'type': 'local',\n            'miss_behavior': 'wait',\n            'dayparts': [{\n                'days_of_week': ['thursday'],\n                'allowed_times': [\n                    {'preferred': '21:30:00'}\n                ]\n            }]\n        }\n    }\n)\nresponse = automation.create(pipeline.payload)\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\npipeline = UA::Pipeline.new(client: airship)\npipeline.enabled = true\npipeline.immediate_trigger = \"first_open\"\npipeline.outcome = {\n    \"push\": {\n        \"audience\": \"triggered\",\n        \"device_types\": ['ios','android','web'],\n        \"notification\": {\n            \"alert\": \"Cool goatee, Abed\"\n        }\n    }\n}\nautomation = UA::Automation.new(client: airship)\nautomation.pipeline_object = pipeline.payload\ndetails = automation.create_automation\nputs(details)\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 201 Created\nContent-Length: 123\nData-Attribute: pipeline_urls\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true,\n    \"operation_id\": \"86ad9239-373d-d0a5-d5d8-04fed18f79bc\",\n    \"pipeline_urls\": [\n      \"https://go.urbanairship/api/pipelines/86ad9239-373d-d0a5-d5d8-04fed18f79bc\"\n    ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/pipelines/constraints": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/pipelines/constraints/ HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true,\n    \"constraints\" : [\n        {\n            \"rate\" : {\n                \"pushes\" : 30,\n                \"lifetimes\" : 1\n            }\n        },\n        {\n            \"rate\" : {\n                \"pushes\" : 15,\n                \"days\" : 3\n            }\n        },\n        {\n            \"rate\" : {\n                \"pushes\" : 4,\n                \"hours\" : 6\n            }\n        }\n    ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "put": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "PUT /api/pipelines/constraints/ HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n    \"constraints\" : [\n        {\n            \"rate\" : {\n                \"pushes\" : 15,\n                \"days\" : 3\n            }\n        },\n        {\n            \"rate\" : {\n                \"pushes\" : 4,\n                \"hours\" : 6\n            }\n        }\n    ]\n}\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/pipelines/deleted": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/pipelines/deleted/ HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, Automation\n)\nfrom urbanairship.automation.pipeline import Pipeline\n\nclient = BasicAuthClient(\n    key='<app key>',\n    secret='<master secret>'\n)\nautomation = Automation(client)\nresponse = automation.list_deleted_automations()\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nautomation = UA::Automation.new(client: airship)\nautomation.start = 2020-11-23\nautomation.list_deleted_automations\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true,\n    \"pipelines\": [\n      {\n          \"deletion_time\": \"2020-03-31T20:54:45\",\n          \"pipeline_id\": \"0sdicj23-fasc-4b2f-zxcv-0baf934f0d69\"\n      },\n      {\n          \"...\"\n      }\n    ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/pipelines/limits": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/pipelines/limits/ HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true,\n    \"limits\" : {\n        \"total_limit\" : 50,\n        \"active_limit\" : 20,\n        \"total_count\" : 23,\n        \"active_count\" : 7\n    }\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/pipelines/validate": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/pipelines/validate HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n    \"name\":\"The Darkest Pipeline\",\n    \"enabled\":true,\n    \"immediate_trigger\":\"first_open\",\n    \"outcome\":{\n      \"push\":{\n          \"audience\":\"triggered\",\n          \"device_types\":[\n            \"ios\",\n            \"android\"\n          ],\n          \"notification\":{\n            \"alert\":\"Cool goatee, Abed\"\n          }\n      }\n    },\n    \"timing\":{\n      \"delay\":{\n          \"seconds\":7200\n      },\n      \"schedule\":{\n          \"type\":\"local\",\n          \"miss_behavior\":\"wait\",\n          \"dayparts\":[\n            {\n                \"days_of_week\":[\n                  \"thursday\"\n                ],\n                \"allowed_times\":[\n                  {\n                      \"preferred\":\"21:30:00\"\n                  }\n                ]\n            }\n          ]\n      }\n    }\n}\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, Automation\n)\nfrom urbanairship.automation.pipeline import Pipeline\n\nclient = BasicAuthClient(\n    key='<app key>',\n    secret='<master secret>'\n)\nautomation = Automation(client)\n\npipeline = Pipeline(\n    name='The Darkest Pipeline',\n    enabled=True,\n    immediate_trigger='first_open',\n    outcome={\n        'push': {\n            'audience': 'triggered',\n            'device_types': ['ios', 'android', 'web'],\n            'notification': notification(alert='Cool goatee, Abed')\n        }\n    },\n    timing={\n        'delay': {'seconds': 7200},\n        'schedule': {\n            'type': 'local',\n            'miss_behavior': 'wait',\n            'dayparts': [{\n                'days_of_week': ['thursday'],\n                'allowed_times': [\n                    {'preferred': '21:30:00'}\n                ]\n            }]\n        }\n    }\n)\nresponse = automation.validate(pipeline.payload)\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\npipeline = UA::Pipeline.new(client: airship)\npipeline.enabled = true\npipeline.immediate_trigger = \"first_open\"\npipeline.outcome = {\n    \"push\": {\n        \"audience\": \"triggered\",\n        \"device_types\": ['ios','android','web'],\n        \"notification\": {\n            \"alert\": \"Cool goatee, Abed\"\n        }\n    }\n}\nautomation = UA::Automation.new(client: airship)\nautomation.pipeline_object = pipeline.payload\nautomation.validate_automation\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Length: 11\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/pipelines/{pipeline_id}": {
      "delete": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "DELETE /api/pipelines/0f927674-918c-31ef-51ca-e96fdd234da4 HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, Automation\n)\nfrom urbanairship.automation.pipeline import Pipeline\n\nclient = BasicAuthClient(\n    key='<app key>',\n    secret='<master secret>'\n)\nautomation = Automation(client)\nresponse = automation.delete('0f927674-918c-31ef-51ca-e96fdd234da4')\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nautomation = UA::Automation.new(client: airship)\nautomation.pipeline_id = '0f927674-918c-31ef-51ca-e96fdd234da4'\nautomation.delete_automation\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 204 No Content\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/pipelines/4d3ff1fd-9ce6-5ea4-5dc9-5ccbd38597f4 HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, Automation\n)\nfrom urbanairship.automation.pipeline import Pipeline\n\nclient = BasicAuthClient(\n    key='<app key>',\n    secret='<master secret>'\n)\nautomation = Automation(client)\npipeline = automation.lookup('4d3ff1fd-9ce6-5ea4-5dc9-5ccbd38597f4')\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nautomation = UA::Automation.new(client: airship)\nautomation.pipeline_id = '4d3ff1fd-9ce6-5ea4-5dc9-5ccbd38597f4'\nautomation.lookup_automation\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true,\n    \"pipeline\": {\n      \"creation_time\": \"2020-02-14T19:19:19\",\n      \"enabled\": true,\n      \"immediate_trigger\": { \"tag_added\": \"new_customer\" },\n      \"last_modified_time\": \"2020-03-01T12:12:54\",\n      \"name\": \"New customer\",\n      \"outcome\": {\n          \"push\": {\n            \"audience\": \"triggered\",\n            \"device_types\": [ \"ios\", \"android\" ],\n            \"notification\": { \"alert\": \"Hello new customer!\" }\n          }\n      },\n      \"status\": \"live\",\n      \"uid\": \"86ad9239-373d-d0a5-d5d8-04fed18f79bc\",\n      \"url\": \"https://go.urbanairship/api/pipelines/86ad9239-373d-d0a5-d5d8-04fed18f79bc\"\n    }\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "put": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "PUT /api/pipelines/0f927674-918c-31ef-51ca-e96fdd234da4 HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json;\n\n{\n    \"enabled\": true,\n    \"immediate_trigger\": {\n      \"tag_added\": \"new_customer\"\n    },\n    \"outcome\": {\n      \"push\": {\n          \"audience\": \"triggered\",\n          \"device_types\": [\n            \"ios\"\n          ],\n          \"notification\": {\n            \"alert\": \"Hello new customer!\"\n          }\n      }\n    }\n}\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, Automation\n)\nfrom urbanairship.automation.pipeline import Pipeline\n\nclient = BasicAuthClient(\n    key='<app key>',\n    secret='<master secret>'\n)\nautomation = Automation(client)\n\npipeline = Pipeline(\n    enabled=True,\n    immediate_trigger={\n        'tag_added': 'new_customer'\n    },\n    outcome={\n        'audience': 'triggered',\n        'device_types': ['ios'],\n        'notification': notification(alert='Hello new customer!')\n    }\n)\nresponse = automation.update(\n    pipeline_id='0f927674-918c-31ef-51ca-e96fdd234da4',\n    pipeline=pipeline.payload\n)\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\npipeline = UA::Pipeline.new(client: airship)\npipeline.enabled = true\npipeline.immediate_trigger = {\n  \"tag_added\": {\n     \"tag\": \"new_customer\",\n     \"group\": \"crm\"\n    }\n}\npipeline.outcome = {\n  \"push\": {\n     \"audience\": \"triggered\",\n     \"device_types\": [\"ios\"],\n     \"notification\": {\n         \"alert\": \"Hello new customer!\"\n        }\n    }\n}\nautomation = UA::Automation.new(client: airship)\nautomation.pipeline_id = '0f927674-918c-31ef-51ca-e96fdd234da4'\nautomation.pipeline_object = pipeline.payload\nautomation.update_automation\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/preference-forms/{app_key}": {
      "get": [
        {
          "description": "Example list Preference Centers\n",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/preference_forms/af_ctTpJRuarzs9-o_Gkh3 HTTP/1.1\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n  \"ok\": true,\n  \"preference_forms\": [\n    {\n      \"form\": {\n        \"display\": {\n          \"description\": \"Choose your own adventure\",\n          \"name\": \"Preferences\"\n        },\n        \"id\": \"seanbird_mobile_app\",\n        \"sections\": [\n          {\n            \"display\": {\n              \"name\": \"Select the wonderful things you would like to receive notifications for:\"\n            },\n            \"id\": \"161bb08b-5e09-424b-8265-b0458920aa74\",\n            \"items\": [\n              {\n                \"display\": {\n                  \"description\": \"Be the first to know about what's on sale each week.\",\n                  \"name\": \"Weekly Special\"\n                },\n                \"id\": \"efe3e322-33c7-4157-b765-046b9cd2647a\",\n                \"subscription_id\": \"weekly_special\",\n                \"type\": \"channel_subscription\"\n              },\n            ],\n            \"type\": \"section\"\n          }\n        ]\n      },\n      \"form_id\": \"06d0e72f-0a2a-4533-8ea2-7ef83abe22d4\",\n      \"created\": \"2021-09-22T15:54:27.1\",\n      \"last_updated\": \"2021-10-08T22:55:05.926\",\n      \"platforms\": [\n        \"amazon\",\n        \"android\",\n        \"ios\"\n      ]\n    }\n  ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": false
        }
      ],
      "post": [
        {
          "description": "Example create Preference Center",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/preference-forms/af_ctTpJRuarzs9-o_Gkh3: HTTP/1.1\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n  \"preference_form\": {\n    \"form\": {\n      \"display\": {\n        \"description\": \"Choose your own adventure\",\n        \"name\": \"Preferences\"\n      },\n      \"id\": \"seanbird_mobile_app\",\n      \"sections\": [\n        {\n          \"display\": {\n            \"name\": \"Select the wonderful things you would like to receive notifications for:\"\n          },\n          \"id\": \"161bb08b-5e09-424b-8265-b0458920aa74\",\n          \"items\": [\n            {\n              \"display\": {\n                \"description\": \"Be the first to know about what's on sale each week.\",\n                \"name\": \"Weekly Special\"\n              },\n              \"id\": \"efe3e322-33c7-4157-b765-046b9cd2647a\",\n              \"subscription_id\": \"weekly_special\",\n              \"type\": \"channel_subscription\"\n            },\n          ],\n          \"type\": \"section\"\n        }\n      ]\n    },\n    \"platforms\": [\n      \"amazon\",\n      \"android\",\n      \"ios\"\n    ]\n  }\n}\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n  \"ok\": true,\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": false
        }
      ]
    },
    "/api/push": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/push HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n    \"audience\": {\n        \"ios_channel\": \"9c36e8c7-5a73-47c0-9716-99fd3d4197d5\"\n    },\n    \"notification\": {\n        \"alert\": \"Hello!\"\n    },\n    \"device_types\": [ \"ios\" ]\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nPushPayload payload = PushPayload.newBuilder()\n        .setAudience(Selectors.iosChannel(\"9c36e8c7-5a73-47c0-9716-99fd3d4197d5\"))\n        .setNotification(Notifications.alert(\"Hello!\"))\n        .setDeviceTypes(DeviceTypeData.of(DeviceType.IOS))\n        .build();\n\nPushRequest request = PushRequest.newRequest(payload);\nResponse<PushResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, Push\n)\n\nclient = BasicAuthClient(\n    key=\"<app key>\",\n    secret=\"<master secret>\"\n)\n\npush = Push(client)\npush.audience = {'ios_channel': '9c36e8c7-5a73-47c0-9716-99fd3d4197d5'}\npush.notification = {'alert': 'Hello!'}\npush.device_types = ['ios']\npush.send()\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\npush = airship.create_push\npush.audience = UA.or( UA.ios_channel('9c36e8c7-5a73-47c0-9716-99fd3d4197d5'))\npush.notification = UA.notification(alert: 'Hello!')\npush.device_types = UA.device_types(['ios'])\npush.send_push\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 202 Accepted\nData-Attribute: push_ids\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true,\n    \"operation_id\": \"df6a6b50-9843-0304-d5a5-743f246a4946\",\n    \"push_ids\": [\n        \"9d78a53b-b16a-c58f-b78d-181d5e242078\"\n    ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Example push with localizations",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/push HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n   \"device_types\": [ \"ios\", \"android\" ],\n   \"audience\": {\n      \"tag\": \"needs_a_greeting\",\n      \"group\": \"new_customer\"\n   },\n   \"notification\": {\n      \"alert\": \"Hi!\"\n   },\n   \"localizations\": [\n       {\n          \"language\": \"de\",\n          \"country\": \"AT\",\n          \"notification\": {\n             \"alert\": \"Grüss Gott\"\n          }\n       },\n       {\n          \"language\": \"de\",\n          \"country\": \"DE\",\n          \"notification\": {\n             \"alert\": \"Guten Tag\"\n          }\n       }\n    ]\n }\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, Push\n)\n\nclient = BasicAuthClient(\n    key=\"<app key>\",\n    secret=\"<master secret>\"\n)\n\npush = Push(client)\npush.audience = {\n    'tag': 'needs_a_greeting',\n    'group': 'new_customer'\n}\npush.notification = {'alert': 'Hi!'}\npush.localizations = [\n    {\n        'country': 'at',\n        'language': 'de',\n        'notification': {'alert': \"Grüss Gott\"}\n    },\n    {\n        'country': 'de',\n        'language': 'de',\n        'notification': {'alert': \"Guten Tag\"}\n    }\n]\npush.device_types = ['ios', 'android']\npush.send()\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nLocalization localization = Localization.newBuilder()\n        .setCountry(\"AT\")\n        .setLanguage(\"de\")\n        .setNotification(Notifications.alert(\"Grüss Gott\"))\n        .build();\n\nPushPayload payload = PushPayload.newBuilder()\n        .setAudience(Selectors.or(Selectors.tagWithGroup(\"needs_a_greeting\", \"new_customer\")))\n        .addLocalization(localization)\n        .setNotification(Notifications.alert(\"Hi!\"))\n        .setDeviceTypes(DeviceTypeData.of(DeviceType.IOS, DeviceType.ANDROID))\n        .build();\n\nPushRequest request = PushRequest.newRequest(payload);\nResponse<PushResponse> response = client.execute(request);\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\npush = airship.create_push\npush.audience = UA.tag(\"needs_a_greeting\", group:'new_customer')\npush.notification = UA.notification(alert: 'Hi!')\npush.device_types = UA.device_types(['ios'])\npush.localizations = {\n  \"language\": \"de\",\n  \"country\": \"AT\",\n  \"notification\": {\n  \"alert\": \"Grüss Gott\"\n  }\n}\npush.send_push\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 202 Accepted\nData-Attribute: push_ids\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true,\n    \"operation_id\": \"df6a6b50-9843-0304-d5a5-743f246a4946\",\n    \"push_ids\": [\n        \"9d78a53b-b16a-c58f-b78d-181d5e242078\",\n        \"1cbfbfa2-08d1-92c2-7119-f8f7f670f5f6\",\n        \"939c3796-a755-413b-a36b-3026b1f92df8\"\n    ],\n    \"localized_ids\": [\n       \"1a38a2ba-c174-d32f-d01b-481a5d241934\"\n    ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Example email being sent using Push API with template ID",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/push HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n    \"audience\": {\n        \"tag\": \"needs_a_greeting\",\n        \"group\": \"new_customer\"\n    },\n    \"device_types\": [\n        \"email\"\n    ],\n    \"notification\": {\n      \"email\": {\n        \"message_type\": \"commercial\",\n        \"reply_to\": \"no-reply@airship.com\",\n        \"sender_address\": \"team@airship.com\",\n        \"sender_name\": \"Airship\",\n        \"template\": {\n            \"template_id\": \"876624ff-0120-4364-bf02-dba3d0cb5b85\"\n        }\n      }\n    }\n}\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 202 Accepted\nData-Attribute: push_ids\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true,\n    \"operation_id\": \"be97b696-8d6b-4aec-ac50-c9cfc4be57d6\",\n    \"push_ids\": [\n        \"72ce9ade-aa71-4fbe-b960-246f1a2ca9ee\"\n    ],\n    \"message_ids\": [],\n    \"content_urls\": [],\n    \"localized_ids\": []\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/push/validate": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/push/validate HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n    \"audience\": {\n        \"ios_channel\": \"9c36e8c7-5a73-47c0-9716-99fd3d4197d5\"\n    },\n    \"notification\": {\n        \"alert\": \"Hello!\"\n    },\n    \"device_types\": [ \"ios\" ]\n}\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, Push\n)\nfrom urbanairship.push.payload import notification, ios, android, web\n\nclient = BasicAuthClient(\n    key=\"<app key>\",\n    secret=\"<master secret>\"\n)\n\npush = Push(client)\npush.audience = {'ios_channel': '9c36e8c7-5a73-47c0-9716-99fd3d4197d5'}\npush.notification = notification(alert='Hello!')\npush.device_types = ['ios']\npush.validate()\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nPushPayload payload = PushPayload.newBuilder()\n        .setAudience(Selectors.iosChannel(\"9c36e8c7-5a73-47c0-9716-99fd3d4197d5\"))\n        .setNotification(Notifications.alert(\"Hello!\"))\n        .setDeviceTypes(DeviceTypeData.of(DeviceType.IOS))\n        .build();\n\nPushRequest request = PushRequest.newRequest(payload).setValidateOnly(true);\nResponse<PushResponse> response = client.execute(request);\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/regions": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/regions/?limit=100&start=100 HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nData-Attribute: regions\nLink: <https://go.urbanairship.com/api/regions?limit=100&start=100>; rel=next\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\": true,\n   \"next_page\": \"https://go.urbanairship.com/api/regions?limit=100&start=100\",\n   \"count\": 100,\n   \"regions\": [\n       {\n           \"region_id\": \"abe5deb3-01d0-436e-8c5d-94b6421a01e0\",\n           \"name\": \"My Favorite Place\",\n           \"created_at\": \"2020-06-09T12:34:56\",\n           \"updated_at\": \"2020-06-09T12:34:56\",\n           \"geofence\": {\n               \"type\": \"POLYGON\",\n               \"points\": [\n                   {\n                       \"latitude\": 90.0,\n                       \"longitude\": 120.0\n                   },\n                   {\n                       \"latitude\": 45.0,\n                       \"longitude\": 120.0\n                   },\n                   {\n                       \"latitude\": 0.0,\n                       \"longitude\": 0.0\n                   }\n               ]\n           },\n           \"beacons\": [\n               {\n                   \"name\": \"entryway\",\n                   \"id\": \"VLSHZAOEXOFCMLDVTKFQ\"\n               },\n               {\n                   \"name\": \"Exhibit A\",\n                   \"id\": \"ZAQYMNOZKRFCRPYEUCZI\"\n               }\n           ],\n           \"attributes\": {\n               \"store_name\": \"Tonali's Donuts\"\n           },\n           \"source_info\": {\n               \"source\": \"GIMBAL\",\n               \"region_id\": \"C56654BC0C3243D6A4B7A3673560D6F8\",\n               \"vendor_href\": \"https://manager.gimbal.com/api/v2/places/C56654BC0C3243D6A4B7A3673560D6F8\"\n           }\n       }\n   ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/regions/{region_id}": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/regions/7d4d9a5c-eff5-40f2-b648-4352c166e878 HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nData-Attribute: region\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true,\n    \"region\": {\n        \"region_id\": \"7dbd9a5c-eff5-40f2-b648-4352c1668878\",\n        \"created_at\": \"2020-08-24T23:15:22.900\",\n        \"updated_at\": \"2020-08-24T23:15:22.900\",\n        \"name\": \"Alberta Park\",\n        \"source_info\": {\n            \"source\": \"GIMBAL\",\n            \"region_id\": \"C56654BC0C3243D6A4B7A3673560D6F8\",\n            \"vendor_href\": \"https://manager.gimbal.com/api/v2/places/C56654BC0C3243D6A4B7A3673560D6F8\"\n        },\n        \"geofence\": {\n            \"type\": \"CIRCLE\",\n            \"center\": {\n                \"latitude\": 45.56447530000002,\n                \"longitude\": -122.64461097354126\n            },\n            \"radius\": 200\n        },\n        \"attributes\": {\n             \"park_name\": \"alberta\",\n             \"type\": \"park\"\n        }\n    }\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/remote-audience-check/app/{app_key}": {
      "post": [
        {
          "description": "Example remote audience check",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/remote-audience-check/app/af_ctTpJRuarzs9-o_Gkh3: HTTP/1.1\nAuthorization: <Contact JWT Token>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\nX-UA-Contact-ID: 7c24ebdd-ec06-47d4-9a56-ced8611f5b52\nX-UA-Appkey: af_ctTpJRuarzs9-o_Gkh3\n\n{\n  \"channel_id\": \"164c3a13-9c75-4ea9-be2c-1bed2c97f9c3\",\n  \"contact_id\": \"7c24ebdd-ec06-47d4-9a56-ced8611f5b52\",\n  \"context\": {\n    \"campaign\": \"cool_campaign_1\"\n  }\n}\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n  \"ok\": true,\n  \"allowed\": false,\n  \"cache_seconds\": 15\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/remote-config/app/{app_key}/{platform}": {
      "get": [
        {
          "description": "Example get configuration",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/remote-config/app/IAex_TTJRuarzs9-o_Gkhg/common HTTP/1.1\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 Ok\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n  \"ok\": true,\n  \"timestamp\": \"2025-01-01T12:00:00\",\n  \"data\": {\n    \"message_center\": {\n      \"background_color\": \"0000FF\",\n      \"font\": \"Comic Sans\"\n    },\n    \"other_thing\": {\n      \"foo\": \"bar\"\n    }\n  },\n  \"frequency_constraints\": [\n    {\n      \"period\": \"hours\",\n      \"range\": 10,\n      \"boundary\": 101,\n      \"category\": \"category message\"\n    },\n    {\n      \"period\": \"days\",\n      \"range\": 3,\n      \"boundary\": 1001\n    }\n  ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "post": [
        {
          "description": "Example update configuration",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/remote-config/app/IAex_TTJRuarzs9-o_Gkhg/common HTTP/1.1\nAccept: application/vnd.urbanairship+json; version=3\nContent-type: application/json\n\n{\n  \"notify\": true,\n  \"set_values\": [\n    {\n      \"scope\": [\"message_center\", \"font\"],\n      \"value\": \"Times New Roman\"\n    }\n  ],\n  \"deletes\" : [\n    {\n      \"scope\": [\"message_center\", \"background_color\"]\n    }\n  ]\n}\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 Ok\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n  \"ok\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Example delete value object",
          "examples": [
            {
              "lang": "json",
              "source": "// Only the final field in the scope is removed, so the following delete:\n{\n  \"scope\": [\"message_center\", \"font\"]\n}\n\n// When applied to the following payload:\n{\n  \"message_center\": {\n    \"font\": \"Times New Roman\",\n    \"background_color\": \"FFFFFF\"\n  }\n}\n\n// Would result in the following final payload:\n{\n  \"message_center\": {\n    \"background_color\": \"FFFFFF\"\n  }\n}\n"
            }
          ]
        },
        {
          "description": "Example frequency constraints object",
          "examples": [
            {
              "lang": "json",
              "source": "{\n  \"period\": \"hours\",\n  \"range\": 10,\n  \"boundary\": 101,\n  \"category\": \"hello\"\n}\n"
            }
          ]
        },
        {
          "description": "Example set value object",
          "examples": [
            {
              "lang": "json",
              "source": "// Example 1\n// To set a top-level field, a scope of length 1 should be used.\n{\n  \"scope\": [\"message_center\"],\n  \"value\": {\n    \"font\": \"Comic Sans\",\n    \"background_color\": \"FFFFFF\"\n  }\n}\n\n// Example 2\n// While processing this update against the target data,\n// objects will be created as necessary,\n// so the following update:\n{\n  \"scope\": [\"foo\", \"bar\", \"baz\"],\n  \"value\": 1000\n}\n\n// When applied to the following payload:\n{\n  \"unrelated\": { }\n}\n\n// Would result in the following final payload:\n{\n  \"unrelated\": { },\n  \"foo\": {\n    \"bar\": {\n      \"baz\": 1000\n    }\n  }\n}\n"
            }
          ]
        }
      ]
    },
    "/api/remote-data-contact/{platform}/{contact_id}": {
      "get": [
        {
          "description": "Example retrieve contact remote data\n",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/remote-data-contact/android/3c2be0e5-8a1a-5d3d-b64c-925c339c504a: HTTP/1.1\nAuthorization: <Json Web Token>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\nX-UA-Appkey: af_ctTpJRuarzs9-o_Gkh3\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n  \"ok\": true,\n  \"payloads\": [\n    {\n      \"type\": \"in_app_messages\",\n      \"timestamp\": \"2023-02-03T22:33:13.781\",\n      \"data\": {\n        \"in_app_messages\": [\n          {\n            \"message\": {\n              \"name\": \"my message\",\n              \"message_id\": \"01bbe0e5-8a1a-483d-ac4c-925c333150ae\",\n              \"display_type\": \"fullscreen\",\n              \"display\": {\n                \"heading\": {\n                  \"text\": \"header\",\n                  \"color\": \"#000000\",\n                  \"size\": 14,\n                  \"font_family\": [\n                    \"sans-serif\"\n                  ],\n                  \"alignment\": \"left\"\n                },\n                \"body\": {\n                  \"text\": \"body\",\n                  \"color\": \"#000000\",\n                  \"size\": 14,\n                  \"font_family\": [\n                    \"sans-serif\"\n                  ],\n                  \"alignment\": \"left\"\n                },\n                \"background_color\": \"#ffffff\",\n                \"button_layout\": \"stacked\",\n                \"buttons\": [\n                  {\n                    \"label\": {\n                      \"text\": \"bouton\",\n                      \"color\": \"#ffffff\",\n                      \"size\": 12,\n                      \"font_family\": [\n                        \"sans-serif\"\n                      ],\n                      \"style\": [\n                        \"bold\"\n                      ]\n                    },\n                    \"id\": \"bouton\",\n                    \"background_color\": \"#000000\",\n                    \"border_color\": \"#000000\",\n                    \"border_radius\": 2,\n                    \"actions\": {\n\n                    }\n                  }\n                ],\n                \"footer\": {\n                  \"label\": {\n                    \"text\": \"footer\",\n                    \"color\": \"#ffa600\",\n                    \"size\": 18,\n                    \"font_family\": [\n                      \"Gothem SSm\",\n                      \"gothem_family\",\n                      \"sans-serif\"\n                    ],\n                    \"alignment\": \"left\",\n                    \"style\": [\n                      \"bold\",\n                      \"italic\",\n                      \"underline\"\n                    ]\n                  },\n                  \"id\": \"footer\",\n                  \"actions\": {\n                    \"open_external_url_action\": \"https://google.fr\"\n                  }\n                },\n                \"media\": {\n                  \"url\": \"https://hangar-dl.urbanairship.com/binary/public/af_ctTpJRuarzs9-o_Gkh3/8da2a9db-309e-4f11-85e2-b24429e9bcc0\",\n                  \"type\": \"image\",\n                  \"description\": \"Image\"\n                },\n                \"dismiss_button_color\": \"#000000\",\n                \"template\": \"header_media_body\"\n              },\n              \"audience\": {\n                \"tags\": {\n                  \"and\": [\n                    {\n                      \"tag\": \"paris\"\n                    }\n                  ]\n                },\n                \"miss_behavior\": \"skip\"\n              }\n            },\n            \"created\": \"2021-07-19T12:44:21.152\",\n            \"last_updated\": \"2021-07-19T12:44:21.152\",\n            \"additional_audience_check_overrides\": {\n              \"bypass\": true\n            },\n            \"triggers\": [\n              {\n                \"type\": \"active_session\",\n                \"goal\": 1\n              }\n            ],\n            \"edit_grace_period\": 14,\n            \"requires_eligibility\": true,\n            \"reporting_metadata\": \"{\"pipeline_id\":\"7f6c8656-adfe-480f-98c3-d9fa45434e39\"}\"\n          }\n        ]\n      }\n    }\n  ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/remote-data/app/{app_key}/{platform}": {
      "get": [
        {
          "description": "Example retrieve remote data\n",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/remote-data/app/af_ctTpJRuarzs9-o_Gkh3/android HTTP/1.1\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{ \"ok\": true,\n  \"payloads\": [\n    { \"type\": \"app_config\",\n      \"timestamp\": \"2023-01-31T16:27:28.13\",\n      \"data\": {\n        \"airship_config\": {\n          \"analytics_url\": \"https://combine.urbanairship.com\",\n          \"device_api_url\": \"https://device-api.urbanairship.com\",\n          \"wallet_url\": \"https://wallet-api.urbanairship.com\",\n          \"metered_usage_url\": \"https://metered-usage-api.urbanairship.com\"\n        },\n        \"additional_audience_check\": {\"url\": \"https://device-api.urbanairship.com/api/remote-audience-check/app/af_ctTpJRuarzs9-o_Gkh3\"},\n        \"testkey\": \"prod\",\n        \"fetch_contact_remote_data\": false\n      }\n    },\n    { \"type\": \"in_app_messages\",\n      \"timestamp\": \"2023-02-03T22:33:13.781\",\n      \"data\": {\n        \"in_app_messages\": [\n          { \"message\": {\n              \"name\": \"my message\",\n              \"message_id\": \"01bbe0e5-8a1a-483d-ac4c-925c333150ae\",\n              \"display_type\": \"fullscreen\",\n              \"display\": {\n                \"heading\": {\n                  \"text\": \"header\",\n                  \"color\": \"#000000\",\n                  \"size\": 14,\n                  \"font_family\": [\"sans-serif\"],\n                  \"alignment\": \"left\"\n                },\n                \"body\": {\n                  \"text\": \"body\",\n                  \"color\": \"#000000\",\n                  \"size\": 14,\n                  \"font_family\": [\"sans-serif\"],\n                  \"alignment\": \"left\"\n                },\n                \"background_color\": \"#ffffff\",\n                \"button_layout\": \"stacked\",\n                \"buttons\": [\n                  { \"label\": {\n                      \"text\": \"bouton\",\n                      \"color\": \"#ffffff\",\n                      \"size\": 12,\n                      \"font_family\": [\"sans-serif\"],\n                      \"style\": [\"bold\"]\n                    },\n                    \"id\": \"bouton\",\n                    \"background_color\": \"#000000\",\n                    \"border_color\": \"#000000\",\n                    \"border_radius\": 2,\n                    \"actions\": {}\n                  }\n                ],\n                \"footer\": {\n                  \"label\": {\n                    \"text\": \"footer\",\n                    \"color\": \"#ffa600\",\n                    \"size\": 18,\n                    \"font_family\": [\"Gothem SSm\", \"gothem_family\", \"sans-serif\"],\n                    \"alignment\": \"left\",\n                    \"style\": [\"bold\", \"italic\", \"underline\"]\n                  },\n                  \"id\": \"footer\",\n                  \"actions\": {\"open_external_url_action\": \"https://google.fr\"}\n                },\n                \"media\": {\n                  \"url\": \"https://hangar-dl.urbanairship.com/binary/public/af_ctTpJRuarzs9-o_Gkh3/8da2a9db-309e-4f11-85e2-b24429e9bcc0\",\n                  \"type\": \"image\",\n                  \"description\": \"Image\"\n                },\n                \"dismiss_button_color\": \"#000000\",\n                \"template\": \"header_media_body\"\n              },\n              \"audience\": {\n                \"tags\": { \"and\": [ {\"tag\": \"paris\"} ] },\n                \"miss_behavior\": \"skip\"\n              }\n            },\n            \"created\": \"2021-07-19T12:44:21.152\",\n            \"last_updated\": \"2021-07-19T12:44:21.152\",\n            \"additional_audience_check_overrides\": {\"context\": {\"campaign\": \"cool_campaign_1\"}},\n            \"triggers\": [ {\"type\": \"active_session\", \"goal\": 1} ],\n            \"edit_grace_period\": 14\n          }\n        ]\n      }\n    },\n    {\n      \"type\": \"preference_forms\",\n      \"timestamp\": \"2022-12-14T18:52:31.938\",\n      \"data\": {\n        \"preference_forms\": [\n          { \"form\": {\n              \"display\": {\n                \"description\": \"Choose your own adventure\",\n                \"name\": \"Preferences\"\n              },\n              \"id\": \"seanbird_mobile_app\",\n              \"sections\": [\n                { \"display\": {\"name\": \"Select the wonderful things you would like to receive notifications for:\"},\n                  \"id\": \"161bb08b-5e09-424b-8265-b0458920aa74\",\n                  \"items\": [\n                    { \"display\": {\"description\": \"Be the first to know about what's on sale each week.\", \"name\": \"Weekly Special\"},\n                      \"id\": \"efe3e322-33c7-4157-b765-046b9cd2647a\",\n                      \"subscription_id\": \"weekly_special\",\n                      \"type\": \"channel_subscription\"\n                    },\n                    { \"display\": {\"description\": \"\", \"name\": \"Celebrity goat gossip\"},\n                      \"id\": \"ceb607e4-6924-46d3-b4c0-c17d1d6cb86f\",\n                      \"subscription_id\": \"celebrity_goat_gossip\",\n                      \"type\": \"channel_subscription\"\n                    },\n                    { \"display\": {\"description\": \"\", \"name\": \"Goat traffic\"},\n                      \"id\": \"07b324e9-1b05-4cab-90b6-cae5b6843037\",\n                      \"subscription_id\": \"goat_traffic\",\n                      \"type\": \"channel_subscription\"\n                    },\n                    { \"display\": {\"description\": \"\", \"name\": \"Goat crime\"},\n                      \"id\": \"498f7bde-537a-4739-a130-18773304ff1c\",\n                      \"subscription_id\": \"goat_crime\",\n                      \"type\": \"channel_subscription\"\n                    },\n                    { \"display\": {\"description\": \"\", \"name\": \"Goat business\"},\n                      \"id\": \"c6887ac3-fead-4fac-a2ac-03f8fcebabfb\",\n                      \"subscription_id\": \"goat_business\",\n                      \"type\": \"channel_subscription\"\n                    },\n                    { \"display\": {\"description\": \"It's just like normal yoga, but with goats.\", \"name\": \"Goat yoga\"},\n                      \"id\": \"112d528d-8096-435c-b68a-e9225a53ad7b\",\n                      \"subscription_id\": \"goat_yoga\",\n                      \"type\": \"channel_subscription\"\n                    }\n                  ],\n                  \"type\": \"section\"\n                }\n              ]\n            },\n            \"form_id\": \"06d0e72f-0a2a-4533-8ea2-7ef83abe22d4\",\n            \"created\": \"2021-09-22T15:54:27.1\",\n            \"last_updated\": \"2021-10-08T22:55:05.926\",\n            \"platforms\": [\"amazon\", \"android\", \"ios\"]\n          }\n        ]\n      }\n    }\n  ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/reports/activity/details": {
      "get": [
        {
          "description": "Example (response truncated)",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/reports/activity/details?start=2020-06-02T20:47:20&end=2023-01-31T20:47:20 HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n    \"app_key\": \"Wz9d8TlSWk0lZTAwzHA2qc\",\n    \"start\": \"2020-06-02T20:47:20\",\n    \"end\": \"2023-01-31T20:47:20\",\n    \"limit\": 10,\n    \"next_page\": \"https://go.urbanairship.com/api/reports/activity/details...\",\n    \"activities\": [\n        {\n            \"push_id\": \"ecb8eaf0-0430-4dfa-93d8-c3149f479d96\",\n            \"timestamp\": \"2023-01-31 20:47:20\",\n            \"type\": \"GROUP\",\n            \"experiment\": true,\n            \"details\": {\n                \"interaction\": {\n                    \"web\": {\n                        \"clicks\": 20,\n                        \"sessions\": 13\n                    },\n                    \"app\": {\n                        \"influenced\": 13,\n                        \"direct\": 12,\n                        \"indirect\": 10,\n                        \"rich_read\": 5\n                    }\n                },\n                \"delivery\": {\n                    \"web\": {\n                        \"total\": 13\n                    },\n                    \"app\": {\n                        \"silent\": 125,\n                        \"alerting\": 13,\n                        \"rich\": 5,\n                        \"in_app\": {\n                            \"impressions\": 10,\n                            \"impressions_opted_in\": 5,\n                            \"impressions_opted_out\": 5\n                        }\n                    }\n                }\n            }\n        }\n    ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/reports/devices": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/reports/devices?date=2020-08-28T00:00:00 HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nDevicesReportRequest request = DevicesReportRequest.newRequest()\n        .setDate(DateTime.parse(\"2020-08-28T10:34:22Z\"));\n\nResponse<DevicesReportResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "from datetime import datetime\nfrom urbanairship import (\n    BasicAuthClient, DevicesReport\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\ndate = datetime(2020, 8, 28)\nresponse = DevicesReport(airship=client).get(date=date)\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nd = UA::DevicesReport.new(client: airship)\ndevices = d.get(date: '2020/08/28')\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"total_unique_devices\": 13186,\n    \"date_closed\": \"2020-08-28 00:00:00\",\n    \"date_computed\": \"2020-08-29 13:30:45\",\n    \"counts\": {\n        \"ios\": {\n            \"unique_devices\": 231,\n            \"opted_in\": 142,\n            \"opted_out\": 89,\n            \"uninstalled\": 2096\n        },\n        \"android\": {\n            \"unique_devices\": 11795,\n            \"opted_in\": 226,\n            \"opted_out\": 11569,\n            \"uninstalled\": 1069\n        },\n        \"amazon\": {\n            \"unique_devices\": 29,\n            \"opted_in\": 22,\n            \"opted_out\": 7,\n            \"uninstalled\": 9\n        },\n        \"sms\": {\n            \"unique_devices\": 26,\n            \"opted_in\": 23,\n            \"opted_out\": 3,\n            \"uninstalled\": 17\n        }\n    }\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/reports/events": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/reports/events?start=2020-08-01T10:00:00.000Z&end=2020-08-15T20:00:00.000Z&precision=MONTHLY&page_size=20 HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nDateTime startDate = DateTime.parse(\"2022-01-01T10:00:00\");\nDateTime endDate =  DateTime.parse(\"2023-01-01T10:00:00\");\n\nCustomEventsDetailsListingRequest customEventsDetailsListingRequest = CustomEventsDetailsListingRequest\n        .newRequest(startDate, endDate)\n        .setPageSize(10)\n        .setPrecision(Precision.MONTHLY)\n        .setPage(2);\n\nResponse<CustomEventsDetailsListingResponse> response = client.execute(customEventsDetailsListingRequest);\nList<CustomEventsDetailResponse> customEventsDetailResponses = response.getBody().get().getEvents().get();\n"
            },
            {
              "lang": "python",
              "source": "from datetime import datetime\nfrom urbanairship import (\n    BasicAuthClient, CustomEventsList\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\nstart_date = datetime(2020, 8, 1)\nend_date = datetime(2020, 8, 15)\nfor event in CustomEventsList(airship=client, start_date=start_date, end_date=end_date, precision='MONTHLY'):\n    print(event)\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true,\n    \"total_value\": 2,\n    \"total_count\": 709,\n    \"next_page\": \"https://go.urbanairship.com/api/reports/events?start=2020-08-01T10:00:00.000Z&end=2020-08-15T20:00:00.000Z&precision=MONTHLY&page_size=20&page=2\",\n    \"events\": [\n        {\n            \"name\": \"banner_image\",\n            \"conversion\": \"indirect\",\n            \"location\": \"ua_mcrap\",\n            \"count\": 1,\n            \"value\": 1\n        },\n        {\n            \"name\": \"bounce\",\n            \"conversion\": \"direct\",\n            \"location\": \"custom\",\n            \"count\": 23,\n            \"value\": 0\n        },\n        {\n            \"name\": \"button-click-Do it \",\n            \"conversion\": \"direct\",\n            \"location\": \"in_app_message\",\n            \"count\": 1,\n            \"value\": 0\n        },\n        {\n            \"name\": \"button-click-Get Notifications\",\n            \"conversion\": \"unattributed\",\n            \"location\": \"in_app_message\",\n            \"count\": 3,\n            \"value\": 0\n        },\n        {\n            \"name\": \"button-click-RATE NOW\",\n            \"conversion\": \"direct\",\n            \"location\": \"in_app_message\",\n            \"count\": 1,\n            \"value\": 0\n        },\n        {\n            \"name\": \"button-click-Rate the app.\",\n            \"conversion\": \"direct\",\n            \"location\": \"in_app_message\",\n            \"count\": 1,\n            \"value\": 0\n        }\n    ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/reports/events/summary/pergroup/{group_id}": {
      "get": [
        {
          "description": "Example request",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/reports/events/summary/pergroup/8bd09679-f672-4783-a31a-d4e516f9e99c HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Response with Group ID parameter",
          "examples": [
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true,\n    \"group_id\": \"8bd09679-f672-4783-a31a-d4e516f9e99c\",\n    \"events\": [\n        {\n            \"name\": \"custom_event_name\",\n            \"location\": \"custom\",\n            \"conversion\": \"direct\",\n            \"count\": 4,\n            \"value\": 16.4\n        },\n        ...\n    ],\n    \"total_count\": 12,\n    \"total_value\": 321.2,\n    \"next_page\": \"https://go.urbanairship.com/api/reports/events/summary/pergroup/...\",\n    \"prev_page\": \"https://go.urbanairship.com/api/reports/events/summary/pergroup/...\"\n}\n"
            }
          ]
        }
      ]
    },
    "/api/reports/events/summary/perpush/{push_id}": {
      "get": [
        {
          "description": "Example request",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/reports/events/summary/perpush/8bd09679-f672-4783-a31a-d4e516f9e99c HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Response with Push ID parameter",
          "examples": [
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true,\n    \"push_id\": \"8bd09679-f672-4783-a31a-d4e516f9e99c\",\n    \"events\": [\n        {\n            \"name\": \"custom_event_name\",\n            \"location\": \"custom\",\n            \"conversion\": \"direct\",\n            \"count\": 4,\n            \"value\": 16.4\n        },\n        ...\n    ],\n    \"total_count\": 12,\n    \"total_value\": 321.2,\n    \"next_page\": \"https://go.urbanairship.com/api/reports/events/summary/perpush/...\",\n    \"prev_page\": \"https://go.urbanairship.com/api/reports/events/summary/perpush/...\"\n}\n"
            }
          ]
        },
        {
          "description": "Response with variant parameter",
          "examples": [
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true,\n    \"push_id\": \"8bd09679-f672-4783-a31a-d4e516f9e99c\",\n    \"variant\": 1,\n    \"events\": [\n        {\n            \"name\": \"custom_event_name\",\n            \"location\": \"custom\",\n            \"conversion\": \"direct\",\n            \"count\": 4,\n            \"value\": 16.4\n        },\n        ...\n    ],\n    \"total_count\": 12,\n    \"total_value\": 321.2,\n    \"next_page\": \"https://go.urbanairship.com/api/reports/events/summary/perpush/...\",\n    \"prev_page\": \"https://go.urbanairship.com/api/reports/events/summary/perpush/...\"\n}\n"
            }
          ]
        }
      ]
    },
    "/api/reports/experiment/detail/{push_id}/{variant_id}": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/reports/experiment/detail/b43ae1b2-3ff6-4c02-adb2-79deac0bbb19/2 HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nExperimentVariantReportRequest experimentVariantReportRequest = ExperimentVariantReportRequest.newRequest(\"b43ae1b2-3ff6-4c02-adb2-79deac0bbb19\", \"1\");\nResponse<ExperimentVariantReportResponse> response = client.execute(experimentVariantReportRequest);\n"
            },
            {
              "lang": "python",
              "source": "from datetime import datetime\nfrom urbanairship import (\n    BasicAuthClient, ExperimentReport\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\n\nexperiment_report = ExperimentReport(airship=client)\nvariant_report = experiment_report.get_variant(\n  push_id=\"b43ae1b2-3ff6-4c02-adb2-79deac0bbb19\",\n  variant=2\n)\nprint(variant_report)\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"app_key\": \"some_app_key\",\n    \"experiment_id\": \"a7806815-6483-4cb9-9d74-bc3b4f3dc1b8\",\n    \"push_id\": \"b43ae1b2-3ff6-4c02-adb2-79deac0bbb19\",\n    \"created\": \"2020-02-25 23:03:12\",\n    \"variant\": 2,\n    \"variant_name\": \"thing_two\",\n    \"sends\": 64,\n    \"direct_responses\": 3,\n    \"influenced_responses\": 1,\n    \"platforms\": {\n        \"android\": {\n            \"direct_responses\": 0,\n            \"influenced_responses\": 0,\n            \"sends\": 22\n        },\n        \"ios\": {\n            \"direct_responses\": 0,\n            \"influenced_responses\": 1,\n            \"sends\": 36\n        },\n        \"amazon\": {\n            \"direct_responses\": 0,\n            \"influenced_responses\": 0,\n            \"sends\": 0\n        },\n        \"web\": {\n            \"direct_responses\": 3,\n            \"indirect_responses\": 0,\n            \"sends\": 6\n        }\n    }\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/reports/experiment/overview/{push_id}": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/reports/experiment/overview/b43ae1b2-3ff6-4c02-adb2-79deac0bbb19 HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nExperimentOverviewReportRequest experimentOverviewReportRequest = ExperimentOverviewReportRequest.newRequest(\"4b83d756-cc64-45e0-b140-3f5ec04170fb\");\nResponse<ExperimentOverviewReportResponse> response = client.execute(experimentOverviewReportRequest);\n"
            },
            {
              "lang": "python",
              "source": "from datetime import datetime\nfrom urbanairship import (\n    BasicAuthClient, ExperimentReport\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\n\nexperiment_report = ExperimentReport(airship=client)\noverview_report = experiment_report.get_overview(\n                    push_id=\"b43ae1b2-3ff6-4c02-adb2-79deac0bbb19\"\n                  )\nprint(overview_report)\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"app_key\": \"some_app_key\",\n   \"experiment_id\": \"a7806815-6483-4cb9-9d74-bc3b4f3dc1b8\",\n   \"push_id\": \"b43ae1b2-3ff6-4c02-adb2-79deac0bbb19\",\n   \"created\": \"2020-02-25 23:03:12\",\n   \"sends\": 532,\n   \"direct_responses\": 50,\n   \"influenced_responses\": 60,\n   \"web_clicks\": 6,\n   \"web_sessions\": 8,\n   \"variants\": [\n      {\n         \"id\" : 0,\n         \"name\": \"call to action\",\n         \"audience_pct\": 45.0,\n         \"sends\": 238,\n         \"direct_responses\": 32,\n         \"direct_response_pct\": 13.44,\n         \"indirect_responses\": 0,\n         \"indirect_response_pct\": 0.0\n      },\n      {\n         \"id\" : 1,\n         \"name\": \"gentle reminder\",\n         \"audience_pct\": 45.0,\n         \"sends\": 251,\n         \"direct_responses\": 20,\n         \"direct_response_pct\": 7.97,\n         \"indirect_responses\": 4,\n         \"indirect_response_pct\": 1.59\n      }\n   ],\n   \"control\": {\n     \"audience_pct\": 10.0,\n     \"sends\": 50,\n     \"responses\": 1,\n     \"response_rate_pct\": 2.0\n   }\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/reports/opens": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/reports/opens?start=2020-08-01T10:00&end=2020-08-15T20:00&precision=MONTHLY HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nPlatformStatsRequest request = PlatformStatsRequest.newRequest(PlatformStatsRequestType.APP_OPENS)\n        .setStart(DateTime.parse(\"2020-08-01T10:34:22Z\"))\n        .setEnd(DateTime.parse(\"2020-08-15T10:34:22Z\"))\n        .setPrecision(Precision.MONTHLY);\n\nResponse<PlatformStatsResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "from datetime import datetime\nfrom urbanairship import (\n    BasicAuthClient, AppOpensList\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\nstart_date = datetime(2020, 8, 1)\nend_date = datetime(2020, 8, 15)\nfor open in AppOpensList(airship=client, start_date=start_date, end_date=end_date, precision='DAILY'):\n    print(open)\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nlisting = UA::AppOpensList.new(\n    client: airship,\n    start_date: '2020-08-01',\n    end_date: '2020-08-15',\n    precision: 'MONTHLY')\nlisting.each do |app_opens|\n    puts(app_opens)\nend\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"opens\": [\n        {\n            \"date\": \"2020-08-01 00:00:00\",\n            \"ios\": 350,\n            \"android\": 250\n        }\n    ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": "tru"
        }
      ]
    },
    "/api/reports/optins": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/reports/optins?start=2020-08-01T10:00&end=2020-08-15T20:00&precision=MONTHLY HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nPlatformStatsRequest request = PlatformStatsRequest.newRequest(PlatformStatsRequestType.OPT_INS)\n        .setStart(DateTime.parse(\"2020-08-01T10:34:22Z\"))\n        .setEnd(DateTime.parse(\"2020-08-15T10:34:22Z\"))\n        .setPrecision(Precision.MONTHLY);\n\nResponse<PlatformStatsResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "from datetime import datetime\nfrom urbanairship import (\n    BasicAuthClient, OptInList\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\nstart_date = datetime(2020, 8, 1)\nend_date = datetime(2020, 8, 15)\nfor opt_in in OptInList(airship=client, start_date=start_date, end_date=end_date, precision='DAILY'):\n    print(opt_in)\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nlisting = UA::OptInList.new(\n    client: airship,\n    start_date: '2020-08-01',\n    end_date: '2020-08-15',\n    precision: 'MONTHLY')\nlisting.each do |opt_ins|\n    puts(opt_ins)\nend\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"optins\": [\n      {\n         \"android\": 50,\n         \"date\": \"2020-05-01 00:00:00\",\n         \"ios\": 500\n      }\n   ],\n   \"next_page\": \"https://go.urbanairship.com/api/reports/...\"\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/reports/optouts": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/reports/optouts?start=2020-08-01T10:00&end=2020-08-15T20:00&precision=MONTHLY HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nPlatformStatsRequest request = PlatformStatsRequest.newRequest(PlatformStatsRequestType.OPT_OUTS)\n        .setStart(DateTime.parse(\"2020-08-01T10:34:22Z\"))\n        .setEnd(DateTime.parse(\"2020-08-15T10:34:22Z\"))\n        .setPrecision(Precision.MONTHLY);\n\nResponse<PlatformStatsResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "from datetime import datetime\nfrom urbanairship import (\n    BasicAuthClient, OptOutList\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\nstart_date = datetime(2020, 8, 1)\nend_date = datetime(2020, 8, 15)\nfor opt_out in OptOutList(airship=client, start_date=start_date, end_date=end_date, precision='DAILY'):\n    print(opt_out)\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nlisting = UA::OptOutList.new(\n    client: airship,\n    start_date: '2020-08-01',\n    end_date: '2020-08-15',\n    precision: 'MONTHLY')\nlisting.each do |opt_outs|\n    puts(opt_outs)\nend\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"optouts\": [\n      {\n         \"android\": 5,\n         \"date\": \"2020-05-01 00:00:00\",\n         \"ios\": 25\n      }\n   ],\n   \"next_page\": \"https://go.urbanairship.com/api/reports/...\"\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/reports/pergroup/detail/{group_id}": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/reports/pergroup/detail/57ef3728-79dc-46b1-a6b9-20081e561f97 HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n    \"app_key\": \"some_app_key\",\n    \"group_id\": \"57ef3728-79dc-46b1-a6b9-20081e561f97\",\n    \"created\": \"2023-07-25 23:03:12\",\n    \"rich_deletions\": 0,\n    \"rich_responses\": 0,\n    \"rich_sends\": 0,\n    \"sends\": 103,\n    \"alerting_sends\": 103,\n    \"silent_sends\": 0,\n    \"direct_responses\": 0,\n    \"influenced_responses\": 3,\n    \"platforms\": {\n        \"android\": {\n            \"direct_responses\": 0,\n            \"influenced_responses\": 0,\n            \"sends\": 22\n        },\n        \"ios\": {\n            \"direct_responses\": 0,\n            \"influenced_responses\": 1,\n            \"sends\": 36\n        },\n        \"amazon\": {\n            \"direct_responses\": 0,\n            \"influenced_responses\": 1,\n            \"sends\": 5\n        },\n        \"web\": {\n            \"direct_responses\": 0,\n            \"influenced_responses\": 1,\n            \"sends\": 40\n        }\n    }\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/reports/pergroup/series/{group_id}": {
      "get": [
        {
          "description": "Example (response truncated to 2 items)",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/reports/pergroup/series/57ef3728-79dc-46b1-a6b9-20081e561f97 HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n    \"app_key\": \"some_app_key\",\n    \"group_id\": \"57ef3728-79dc-46b1-a6b9-20081e561f97\",\n    \"start\": \"2023-07-25 23:00:00\",\n    \"end\": \"2023-07-26 11:00:00\",\n    \"precision\": \"HOURLY\",\n    \"counts\": [\n        {\n            \"push_platforms\": {\n                \"all\": {\n                    \"direct_responses\": 0,\n                    \"influenced_responses\": 1,\n                    \"sends\": 58\n                },\n                \"android\": {\n                    \"direct_responses\": 0,\n                    \"influenced_responses\": 0,\n                    \"sends\": 22\n                },\n                \"ios\": {\n                    \"direct_responses\": 0,\n                    \"influenced_responses\": 1,\n                    \"sends\": 36\n                }\n            },\n            \"rich_push_platforms\": {\n                \"all\": {\n                    \"responses\": 0,\n                    \"sends\": 0\n                }\n            },\n            \"time\": \"2023-07-25 23:00:00\"\n        },\n        {\n            \"push_platforms\": {\n                \"all\": {\n                    \"direct_responses\": 0,\n                    \"influenced_responses\": 0,\n                    \"sends\": 0\n                },\n                \"android\": {\n                    \"direct_responses\": 0,\n                    \"influenced_responses\": 0,\n                    \"sends\": 0\n                },\n                \"ios\": {\n                    \"direct_responses\": 0,\n                    \"influenced_responses\": 0,\n                    \"sends\": 0\n                }\n            },\n            \"rich_push_platforms\": {\n                \"all\": {\n                    \"responses\": 0,\n                    \"sends\": 0\n                }\n            },\n            \"time\": \"2023-07-26 00:00:00\"\n        }\n    ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/reports/perpush/detail/{push_id}": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/reports/perpush/detail/57ef3728-79dc-46b1-a6b9-20081e561f97 HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n    \"app_key\": \"some_app_key\",\n    \"push_id\": \"57ef3728-79dc-46b1-a6b9-20081e561f97\",\n    \"created\": \"2023-07-25 23:03:12\",\n    \"rich_deletions\": 0,\n    \"rich_responses\": 0,\n    \"rich_sends\": 0,\n    \"sends\": 103,\n    \"alerting_sends\": 103,\n    \"silent_sends\": 0,\n    \"direct_responses\": 0,\n    \"influenced_responses\": 3,\n    \"platforms\": {\n        \"android\": {\n            \"direct_responses\": 0,\n            \"influenced_responses\": 0,\n            \"sends\": 22\n        },\n        \"ios\": {\n            \"direct_responses\": 0,\n            \"influenced_responses\": 1,\n            \"sends\": 36\n        },\n        \"amazon\": {\n            \"direct_responses\": 0,\n            \"influenced_responses\": 1,\n            \"sends\": 5\n        },\n        \"web\": {\n            \"direct_responses\": 0,\n            \"influenced_responses\": 1,\n            \"sends\": 40\n        }\n    }\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/reports/perpush/pushbody/{push_id}": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/reports/perpush/pushbody/57ef3728-79dc-46b1-a6b9-20081e561f97 HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n    \"push_body\": \"<Base64-encoded string>\"\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/reports/perpush/series/{push_id}": {
      "get": [
        {
          "description": "Example (response truncated to 2 items)",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/reports/perpush/series/57ef3728-79dc-46b1-a6b9-20081e561f97 HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n    \"app_key\": \"some_app_key\",\n    \"push_id\": \"57ef3728-79dc-46b1-a6b9-20081e561f97\",\n    \"start\": \"2023-07-25 23:00:00\",\n    \"end\": \"2023-07-26 11:00:00\",\n    \"precision\": \"HOURLY\",\n    \"counts\": [\n        {\n            \"push_platforms\": {\n                \"all\": {\n                    \"direct_responses\": 0,\n                    \"influenced_responses\": 1,\n                    \"sends\": 58\n                },\n                \"android\": {\n                    \"direct_responses\": 0,\n                    \"influenced_responses\": 0,\n                    \"sends\": 22\n                },\n                \"ios\": {\n                    \"direct_responses\": 0,\n                    \"influenced_responses\": 1,\n                    \"sends\": 36\n                }\n            },\n            \"rich_push_platforms\": {\n                \"all\": {\n                    \"responses\": 0,\n                    \"sends\": 0\n                }\n            },\n            \"time\": \"2023-07-25 23:00:00\"\n        },\n        {\n            \"push_platforms\": {\n                \"all\": {\n                    \"direct_responses\": 0,\n                    \"influenced_responses\": 0,\n                    \"sends\": 0\n                },\n                \"android\": {\n                    \"direct_responses\": 0,\n                    \"influenced_responses\": 0,\n                    \"sends\": 0\n                },\n                \"ios\": {\n                    \"direct_responses\": 0,\n                    \"influenced_responses\": 0,\n                    \"sends\": 0\n                }\n            },\n            \"rich_push_platforms\": {\n                \"all\": {\n                    \"responses\": 0,\n                    \"sends\": 0\n                }\n            },\n            \"time\": \"2023-07-26 00:00:00\"\n        }\n    ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/reports/responses": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/reports/responses?start=2020-05-01T10:00&end=2020-05-30T10:00&precision=MONTHLY HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nResponseReportRequest request = ResponseReportRequest\n        .newRequest(DateTime.parse(\"2020-05-01T10:34:22Z\"),\n                    DateTime.parse(\"2020-05-30T10:34:22Z\"),\n                    Precision.MONTHLY);\n\nResponse<ResponseReportResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "from datetime import datetime\nfrom urbanairship import (\n    BasicAuthClient, ResponseReportList\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\nstart_date = datetime(2020, 5, 1)\nend_date = datetime(2020, 5, 30)\nfor response in ResponseReportList(airship=client, start_date=start_date, end_date=end_date, precision='DAILY'):\n    print(response)\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nlisting = UA::ResponseReportList.new(\n    client: airship,\n    start_date: '2020-05-01',\n    end_date: '2020-05-30',\n    precision: 'MONTHLY'\n)\nlisting.each do |resp|\n    puts(resp)\nend\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"next_page\": \"https://go.urbanairship.com/api/reports/...\",\n   \"responses\": [\n      {\n         \"android\": {\n            \"direct\": 25,\n            \"influenced\": 118\n         },\n         \"date\": \"2020-05-01 00:00:00\",\n         \"ios\": {\n            \"direct\": 16,\n            \"influenced\": 87\n         }\n      }\n   ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/reports/responses/list": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/reports/responses/list?start=2020-08-01T10:00&end=2020-08-15T10:00&limit=20 HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nPushListingRequest request = PushListingRequest.newRequest()\n        .setStart(DateTime.parse(\"2020-08-01T10:34:22Z\"))\n        .setEnd(DateTime.parse(\"2020-08-15T10:34:22Z\"))\n        .setLimit(20);\n\nResponse<PushListingResponse> response = client.execute(request);\n\n// Get the first item in an array of push info responses. You can use all of the getters\n// listed in the \"Individual Push Response Statistics\" section.\nPushInfoResponse pushInfo = response.getBody().get().getPushInfoList().get().get(0);\n"
            },
            {
              "lang": "python",
              "source": "from datetime import datetime\nfrom urbanairship import (\n    BasicAuthClient, ResponseList\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\nstart_date = datetime(2020, 8, 1)\nend_date = datetime(2020, 8, 15)\nfor response in ResponseList(airship=client, start_date=start_date, end_date=end_date):\n    print(response)\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nresponse_list = UA::ResponseList.new(\n    client: airship,\n    start_date: '2020-08-01',\n    end_date: '2020-08-30',\n    limit: 20,\n    push_id_start: 'start_id'\n)\nresponse_list.each do |resp|\n    puts(resp)\nend\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"next_page\": \"https://go.urbanairship.com/api/reports/responses/list?start=2020-08-01+10%...\",\n    \"pushes\": [\n        {\n            \"push_uuid\": \"f4db3752-a982-4a2b-994e-7b5fd1c7f02f\",\n            \"push_time\": \"2020-08-15 02:12:22\",\n            \"push_type\": \"UNICAST_PUSH\",\n            \"group_id\": \"4e768dc7-4ebc-4206-890a-60b5627763a7\",\n            \"direct_responses\": 0,\n            \"sends\": 1,\n            \"open_channels_sends\": {\n                \"platforms\": []\n            }\n        },\n        {\n            \"push_uuid\": \"5a4ade58-fbd3-43a2-ac3c-e834ee190151\",\n            \"push_time\": \"2020-08-14 19:58:15\",\n            \"push_type\": \"UNICAST_PUSH\",\n            \"group_id\": \"c5664e1f-106e-4616-9820-7d9ecce8a3f3\",\n            \"direct_responses\": 1,\n            \"sends\": 2,\n            \"open_channels_sends\": {\n                \"platforms\": []\n            }\n        }\n    ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/reports/responses/{push_id}": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/reports/responses/90f28bc6-6c9b-4c99-b970-973afc266e08 HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nPushInfoRequest request = PushInfoRequest.newRequest(\"90f28bc6-6c9b-4c99-b970-973afc266e08\");\n\nResponse<PushInfoResponse> response = client.execute(request);\nPushInfoResponse pushInfo = response.getBody().get();\n\n// Number of sends\nint sends = pushInfo.getSends();\n// Number of direct responses to the push\nint directResponses = pushInfo.getDirectResponses();\n// When the push was sent\nDateTime date = pushInfo.getPushTime();\n// The push type - can be one of BROADCAST_PUSH, SCHEDULED_PUSH, TAG_PUSH, UNICAST_PUSH\nPushInfoResponse.PushType type = pushInfo.getPushType();\n// The unique identifier for the push\nUUID pushId = pushInfo.getPushId();\n"
            },
            {
              "lang": "python",
              "source": "from datetime import datetime\nfrom urbanairship import (\n    BasicAuthClient, IndividualResponseStats\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\npush_id = '90f28bc6-6c9b-4c99-b970-973afc266e08'\nresponse = IndividualResponseStats(airship=client).get(push_id)\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nd = UA::IndividualResponseStats.new(client: airship)\nstatistics = d.get(push_id: '90f28bc6-6c9b-4c99-b970-973afc266e08')\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"push_uuid\": \"90f28bc6-6c9b-4c99-b970-973afc266e08\",\n   \"push_time\": \"2020-02-25 23:03:12\",\n   \"push_type\": \"UNICAST_PUSH\",\n   \"sends\": 167,\n   \"direct_responses\": 15,\n   \"open_channels_sends\": {\n      \"platforms\": [\n        {\n           \"id\": \"PLATFORM_NAME\",\n           \"sends\": 22\n        },\n        {\n           \"id\": \"ANOTHER_PLATFORM\",\n           \"sends\": 145\n        }\n      ]\n   }\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/reports/sends": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/reports/sends?start=2020-05-01T10:00&end=2020-05-30T20:00&precision=MONTHLY HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nPlatformStatsRequest request = PlatformStatsRequest.newRequest(PlatformStatsRequestType.SENDS)\n        .setStart(DateTime.parse(\"2020-05-01T10:34:22Z\"))\n        .setEnd(DateTime.parse(\"2020-05-30T10:34:22Z\"))\n        .setPrecision(Precision.MONTHLY);\n\nResponse<PlatformStatsResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "from datetime import datetime\nfrom urbanairship import (\n    BasicAuthClient, PushList\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\nstart_date = datetime(2020, 5, 1)\nend_date = datetime(2020, 5, 30)\nprecision = 'MONTHLY'\nlisting = PushList(airship=client, start_date=start_date, end_date=end_date, precision=precision)\n\nfor resp in listing:\n  print(resp.date, resp.android, resp.ios)\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nlisting = UA::PushList.new(\n    client: airship,\n    start_date: '2020/05/01',\n    end_date: '2020/05/30',\n    precision: 'MONTHLY'\n)\nlisting.each do |resp|\n    puts(resp)\nend\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"sends\": [\n      {\n         \"android\": 50,\n         \"date\": \"2020-05-01 00:00:00\",\n         \"ios\": 500\n      }\n   ],\n   \"next_page\": \"https://go.urbanairship.com/api/reports/...\"\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/reports/timeinapp": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/reports/timeinapp?start=2020-05-01T10:00&end=2020-05-15T20:00&precision=MONTHLY HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nPlatformStatsRequest request = PlatformStatsRequest.newRequest(PlatformStatsRequestType.TIME_IN_APP)\n        .setStart(DateTime.parse(\"2020-05-01T10:34:22Z\"))\n        .setEnd(DateTime.parse(\"2020-05-15T10:34:22Z\"))\n        .setPrecision(Precision.MONTHLY);\n\nResponse<PlatformStatsResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "from datetime import datetime\nfrom urbanairship import (\n    BasicAuthClient, TimeInAppList\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\nstart_date = datetime(2020, 5, 1)\nend_date = datetime(2020, 5, 15)\nprecision = 'MONTHLY'\nlisting = TimeInAppList(airship=client, start_date=start_date, end_date=end_date, precision=precision)\nfor resp in listing:\n    print(resp.date, resp.android, resp.ios)\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nlisting = UA::TimeInAppList.new(\n    client: airship,\n    start_date: '2020-05-01',\n    end_date: '2020-05-30',\n    precision: 'MONTHLY')\nlisting.each do |time_in_app|\n    puts(time_in_app)\nend\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"timeinapp\": [\n      {\n         \"android\": 50,\n         \"date\": \"2020-05-01 00:00:00\",\n         \"ios\": 500\n      }\n   ],\n   \"next_page\": \"https://go.urbanairship.com/api/reports/...\"\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/reports/web/interaction": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/reports/web/interaction?app_key=ZGIwZTY3YjEtZTRiMi00ZG&start=2020-05-01T10:00&end=2020-05-03T20:00&precision=HOURLY HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nWebResponseReportRequest webResponseReportRequest = WebResponseReportRequest.newRequest(\"<app key>\", DateTime.parse(\"2020-08-01T10:34:22Z\"));\nResponse<WebResponseReportResponse> response = client.execute(webResponseReportRequest);\n"
            },
            {
              "lang": "python",
              "source": "from datetime import datetime\nfrom urbanairship import (\n    BasicAuthClient, WebResponseReport\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\nstart_date = datetime(2020, 5, 1)\nend_date = datetime(2020, 5, 3)\nfor web_response in WebResponseReport(airship=client, start_date=start_date, end_date=end_date, precision='DAILY'):\n    print(web_response)\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"app_key\": \"ZGIwZTY3YjEtZTRiMi00ZG\",\n   \"end\": \"2020-05-03 00:00:00\",\n   \"precision\": \"HOURLY\",\n   \"start\": \"2020-05-01 00:00:00\",\n   \"total_counts\": [\n      {\"counts\": {\"clicks\": 36, \"sessions\": 55 }, \"date\": \"2020-05-01 10:00:00\"},\n      {\"counts\": {\"clicks\": 50, \"sessions\": 79 }, \"date\": \"2020-05-01 11:00:00\"},\n      {\"...\"},\n      {\"...\"},\n      {\"counts\": {\"clicks\": 67, \"sessions\": 75 }, \"date\": \"2020-05-03 20:00:00\"}\n  ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/schedules": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/schedules HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nScheduleListingRequest request = ScheduleListingRequest.newRequest();\nResponse<ListAllSchedulesResponse> response = client.execute(request);\nList<SchedulePayloadResponse> schedules = response.getBody().get().getSchedules();\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import BasicAuthClient, ScheduledList\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\n\nfor schedule in ScheduledList(client):\n    print(\n        schedule.name, schedule.url, schedule.push_ids,\n        schedule.schedule, schedule.push\n    )\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nscheduled_push_list = UA::ScheduledPushList.new(client: airship)\nscheduled_push_list.each do |schedule|\n    puts(schedule)\nend\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nCount: 2\nData-Attribute: schedules\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true,\n    \"count\": 2,\n    \"total_count\": 4,\n    \"next_page\": \"https://go.urbanairship.com/api/schedules/?start=5c69320c-3e91-5241-fad3-248269eed104&limit=2&order=asc\",\n    \"schedules\": [\n        {\n            \"url\": \"http://go.urbanairship/api/schedules/2d69320c-3c91-5241-fac4-248269eed109\",\n            \"schedule\": { },\n            \"push\": { }\n        },\n        {\n            \"url\": \"http://go.urbanairship/api/schedules/2d69320c-3c91-5241-fac4-248269eed10A\",\n            \"schedule\": { },\n            \"push\": { }\n        }\n    ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/schedules HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n[\n  {\n    \"name\": \"Morning People\",\n    \"schedule\": {\n        \"scheduled_time\": \"2020-06-03T09:15:00\"\n    },\n    \"push\": {\n        \"audience\": { \"tag\": \"earlyBirds\" },\n        \"notification\": { \"alert\": \"Good Day Sunshine\" },\n        \"device_types\": [ \"ios\", \"android\" ]\n    }\n  },\n  {\n    \"name\": \"Everybody Else\",\n    \"schedule\": {\n        \"best_time\": {\n          \"send_date\": \"2020-06-03\"\n        }\n    },\n    \"push\": {\n        \"audience\": { \"tag\": \"normalPeople\" },\n        \"notification\": { \"alert\": \"Stay Up Late\" },\n        \"device_types\": [ \"ios\", \"android\" ]\n    }\n  }\n]\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nSchedulePayload schedulePayload = SchedulePayload.newBuilder()\n        .setName(\"Morning People\")\n        .setSchedule(Schedule.newBuilder()\n                .setScheduledTimestamp(DateTime.parse(\"2020-06-03T09:15:00Z\"))\n                .build())\n        .setPushPayload(PushPayload.newBuilder()\n                .setDeviceTypes(DeviceTypeData.of(DeviceType.IOS, DeviceType.ANDROID))\n                .setNotification(Notifications.alert(\"Good Day Sunshine\"))\n                .setAudience(Selectors.tag(\"earlyBirds\"))\n                .build())\n        .build();\n\nScheduleRequest scheduleRequest = ScheduleRequest.newRequest(schedulePayload);\nResponse<ScheduleResponse> response = client.execute(scheduleRequest);\n"
            },
            {
              "lang": "python",
              "source": "from datetime import datetime\nfrom urbanairship import (\n    BasicAuthClient, ScheduledPush, Push,\n    tag, notification, scheduled_time\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\n\n# Create the push payload\npush = Push(client)\npush.audience = tag('earlyBirds')\npush.notification = notification(alert='Good Day Sunshine')\npush.device_types = ['ios', 'android']\n\n# Create the schedule\nsched = ScheduledPush(client)\nsched.name = 'Morning People'\nsched.schedule = scheduled_time(datetime(2020, 6, 3, 9, 15, 0))\nsched.push = push\n\n# Send the scheduled push\nresponse = sched.send()\nprint('Created schedule. URL:', response.schedule_url)\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\npush = airship.create_push\npush.audience = UA.tag('earlyBirds')\npush.notification = UA.notification(alert: 'Morning People')\npush.device_types = UA.device_types(['ios','android'])\n\nschedule = airship.create_scheduled_push\nschedule.push = push\nschedule.name = \"Morning People\"\nschedule.schedule = UA.scheduled_time(Time.now.utc + 60)\nresponse = schedule.send_push\nprint (\"Created schedule. url: \" + response.schedule_url)\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Example schedule with localizations",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/schedules HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n[\n  {\n    \"name\": \"Greetings\",\n    \"schedule\": {\n        \"best_time\": {\n          \"send_date\": \"2020-11-15\"\n        }\n    },\n    \"push\": {\n        \"device_types\": [\n          \"ios\",\n          \"android\"\n        ],\n        \"audience\": {\n          \"tag\": \"needs_a_greeting\",\n          \"group\": \"new_customer\"\n        },\n        \"notification\": {\n          \"alert\": \"Hi!\"\n        },\n        \"localizations\": [\n          {\n              \"language\": \"de\",\n              \"country\": \"AT\",\n              \"notification\": {\n                \"alert\": \"Grüss Gott\"\n              }\n          },\n          {\n              \"language\": \"de\",\n              \"country\": \"DE\",\n              \"notification\": {\n                \"alert\": \"Guten Tag\"\n              }\n          }\n        ]\n    }\n  }\n]\n"
            },
            {
              "lang": "python",
              "source": "from datetime import datetime\nfrom urbanairship import (\n    BasicAuthClient, ScheduledPush, Push,\n    tag_group, notification, best_time,\n    localization\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\n\n# Create the push payload\npush = Push(client)\npush.audience = tag_group('new_customer', 'needs_a_greeting')\npush.notification = notification(alert='Hi!')\npush.device_types = ['ios', 'android']\npush.localizations = [\n    localization(\n        country='AT',\n        language='de',\n        notification=notification(alert='Grüss Gott')\n    ),\n    localization(\n        country='DE',\n        language='de',\n        notification=notification(alert='Guten Tag')\n    )\n]\n\n# Create the schedule\nsched = ScheduledPush(client)\nsched.name = 'Greetings'\nsched.schedule = best_time(send_date=datetime(2020, 11, 15))\nsched.push = push\n\n# Send the scheduled push\nresponse = sched.send()\nprint('Created schedule. URL:', response.schedule_url)\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nLocalization one = Localization.newBuilder()\n        .setCountry(\"AT\")\n        .setLanguage(\"de\")\n        .setNotification(Notifications.alert(\"Grüss Gott\"))\n        .build();\n\nLocalization two = Localization.newBuilder()\n        .setCountry(\"DE\")\n        .setLanguage(\"de\")\n        .setNotification(Notifications.alert(\"Guten Tag\"))\n        .build();\n\nSchedulePayload schedulePayload = SchedulePayload.newBuilder()\n        .setName(\"Greetings\")\n        .setSchedule(Schedule.newBuilder()\n                .setBestTime(BestTime.newBuilder()\n                        .setSendDate(DateTime.parse(\"2020-11-15T00:00:00Z\"))\n                        .build())\n                .build())\n        .setPushPayload(PushPayload.newBuilder()\n                .setDeviceTypes(DeviceTypeData.of(DeviceType.IOS, DeviceType.ANDROID))\n                .setNotification(Notifications.alert(\"Hi!\"))\n                .setAudience(Selectors.tagWithGroup(\"needs_a_greeting\", \"new_customer\"))\n                .addLocalization(one)\n                .addLocalization(two)\n                .build())\n        .build();\n\nScheduleRequest scheduleRequest = ScheduleRequest.newRequest(schedulePayload);\nResponse<ScheduleResponse> response = client.execute(scheduleRequest);\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\npush = airship.create_push\npush.audience = UA.tag('needs_a_greeting', group:'new_customer')\npush.notification = UA.notification(alert: 'Hi!')\npush.device_types = UA.device_types(['ios', 'android'])\npush.localizations = {\n  \"language\": \"de\",\n  \"country\": \"AT\",\n  \"notification\": {\n  \"alert\": \"Grüss Gott\"\n  }\n}\n\nschedule = airship.create_scheduled_push\nschedule.push = push\nschedule.name = \"Greetings\"\nschedule.schedule = UA.scheduled_time(Time.now.utc + 60)\nresponse = schedule.send_push\nprint (\"Created schedule. url: \" + response.schedule_url)\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 201 Created\nData-Attribute: schedule_urls\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\": true,\n   \"operation_id\": \"efb18e92-9a60-6689-45c2-82fedab36399\",\n   \"schedule_urls\": [\n        \"https://go.urbanairship.com/api/schedules/eac2ace6-349a-41a2-b874-5496d7bf0100\",\n        \"https://go.urbanairship.com/api/schedules/6c7c9bf5-cb2b-47cb-b27f-f85981391c4e\"\n    ],\n    \"schedule_ids\": [\n        \"eac2ace6-349a-41a2-b874-5496d7bf0100\",\n        \"6c7c9bf5-cb2b-47cb-b27f-f85981391c4e\"\n    ],\n   \"schedules\": [\n      {\n         \"url\": \"https://go.urbanairship.com/api/schedules/eac2ace6-349a-41a2-b874-5496d7bf0100\",\n         \"schedule\": {\n            \"scheduled_time\": \"2020-06-03T09:15:00\"\n         },\n         \"name\": \"Morning People\",\n         \"push\": {\n            \"audience\": { \"tag\": \"earlyBirds\" },\n            \"notification\": { \"alert\": \"Good Day Sunshine\" },\n            \"device_types\": [ \"ios\", \"android\" ]\n         },\n         \"push_ids\": [ \"83046227-9b06-4114-9f23-0df349792bbd\" ]\n      }\n      {\n          \"url\": \"https://go.urbanairship.com/api/schedules/6c7c9bf5-cb2b-47cb-b27f-f85981391c4e\",\n          \"schedule\": {\n            \"best_time\": {\n              \"send_date\": \"2020-06-03\"\n            }\n          },\n          \"name\": \"Everybody Else\",\n          \"push\": {\n            \"audience\": { \"tag\": \"normalPeople\" },\n            \"notification\": { \"alert\": \"Stay Up Late\" },\n            \"device_types\": [ \"ios\", \"android\" ]\n         },\n         \"push_ids\": [ \"8438e81-bb31-82a9-5feb-e7fd5b21ca7e\" ]\n      }\n   ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/schedules/bulk-send": {
      "post": [
        {
          "description": "Example Schedule Create and Send a message with bulk ID",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/schedules/bulk-send HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3;\nContent-type: application/json\n\n{\n    \"schedule\": {\n      \"scheduled_time\" : \"2024-11-07T12:00:00\"\n    },\n    \"name\" : \"scheduled bulk send\",\n    \"push\" : {\n      \"audience\" : {\n            \"bulk_id\" : \"36d5a261-0454-40f5-b952-942c4b2b0f22\"\n      },\n      \"device_types\" : [ \"android\" ],\n      \"notification\" : {\n            \"alert\" : \"Hope you voted\"\n      },\n      \"campaigns\": {\n            \"categories\": [\"midterms2024\", \"getoutthevote2024\"]\n      }\n    }\n}\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 202 Accepted\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true,\n    \"operation_id\": \"67c65146-c27f-431f-b54a-83aca694fdd3\",\n    \"schedule_urls\": [\n      \"http://go.urbanairship/api/schedules/2d69320c-3c91-5241-fac4-248269eed109\"\n    ],\n    \"schedules\": [\n      {\n            \"url\": \"http://go.urbanairship/api/schedules/2d69320c-3c91-5241-fac4-248269eed109\"\n            \"schedule\": {\n                \"scheduled_time\" : \"2024-11-07T12:00:00\"\n            }\n            \"push\": {\n                \"audience\": {\n                  \"bulk_id\" : \"36d5a261-0454-40f5-b952-942c4b2b0f22\"\n                },\n                \"device_types\" : [ \"open::rcs\" ],\n                \"notification\" : {\n                  \"alert\" : \"Welcome to the winter sale!!\"\n                },\n                \"campaigns\": {\n                  \"categories\": [\"winter sale\", \"west coast\"]\n                }\n            }\n      }\n    ],\n    \"push_ids\": [\"8cf8b2a5-7655-40c2-a500-ff498e60453e\"]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/schedules/create-and-send": {
      "post": [
        {
          "description": "Example scheduled Create and Send message",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/schedules/create-and-send HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n  \"schedule\": {\n    \"scheduled_time\" : \"2020-11-11T12:00:00\"\n  },\n  \"name\" : \"scheduled winter sale email\",\n  \"push\" : {\n    \"audience\": {\n      \"create_and_send\" : [\n        {\n          \"ua_address\": \"new@example.com\",\n          \"ua_commercial_opted_in\": \"2020-11-29T10:34:22\"\n        },\n        {\n          \"ua_address\" : \"ben@example.com\",\n          \"ua_commercial_opted_in\": \"2020-11-29T12:45:10\"\n        }\n      ]\n    },\n    \"device_types\" : [ \"email\" ],\n    \"notification\" : {\n      \"email\": {\n        \"subject\": \"Welcome to the Winter Sale! \",\n        \"html_body\": \"<h1>Seasons Greetings</h1><p>Check out our winter deals!</p><p><a data-ua-unsubscribe=\\\"1\\\" title=\\\"unsubscribe\\\" href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\">Unsubscribe</a></p>\",\n        \"plaintext_body\": \"Greetings! Check out our latest winter deals! [[ua-unsubscribe href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\"]]\",\n        \"message_type\": \"commercial\",\n        \"sender_name\": \"Airship\",\n        \"sender_address\": \"team@airship.com\",\n        \"reply_to\": \"no-reply@airship.com\"\n      }\n    },\n    \"campaigns\": {\n        \"categories\": [\"winter sale\", \"west coast\"]\n    }\n  }\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nString htmlBodyString = \"<h1>Seasons Greetings</h1><p>Check out our winter deals!</p><p><a data-ua-unsubscribe=\\\"1\\\" title=\\\"unsubscribe\\\" href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\">Unsubscribe</a></p>\";\nString plaintextBodyString = \"Greetings! Check out our latest winter deals! [[ua-unsubscribe href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\"]]\";\n\nEmailChannel newChannel = EmailChannel.newBuilder()\n        .setAddress(\"new@example.com\")\n        .setCommertialOptedIn(DateTime.parse(\"2020-11-29T10:34:22Z\"))\n        .build();\n\nEmailChannel benChannel = EmailChannel.newBuilder()\n        .setAddress(\"ben@example.com\")\n        .setTransactionalOptedIn(DateTime.parse(\"2020-11-29T12:45:10Z\"))\n        .build();\n\nCreateAndSendAudience audience = new CreateAndSendAudience(EmailChannels.newBuilder()\n        .addChannel(newChannel)\n        .addChannel(benChannel)\n        .build());\n\nCreateAndSendEmailPayload createAndSendEmailPayload = CreateAndSendEmailPayload.newBuilder()\n        .setSubject(\"Welcome to the Winter Sale! \")\n        .setHtmlBody(htmlBodyString)\n        .setPlaintextBody(plaintextBodyString)\n        .setMessageType(MessageType.TRANSACTIONAL)\n        .setSenderName(\"Airship\")\n        .setSenderAddress(\"team@airship.com\")\n        .setReplyTo(\"no-reply@airship.com\")\n        .build();\n\nNotification notification = Notification.newBuilder()\n        .addDeviceTypeOverride(DeviceType.EMAIL, createAndSendEmailPayload)\n        .build();\n\nCampaigns campaign = Campaigns.newBuilder()\n        .addCategory(\"winter sale\")\n        .addCategory(\"west coast\")\n        .build();\n\nCreateAndSendPayload payload = CreateAndSendPayload.newBuilder()\n        .setAudience(audience)\n        .setNotification(notification)\n        .setCampaigns(campaign)\n        .build();\n\nCreateAndSendSchedulePayload schedulePayload = CreateAndSendSchedulePayload.newBuilder()\n        .setPayload(payload)\n        .setScheduleTime(DateTime.parse(\"2020-11-11T12:00:00\"))\n        .setName(\"scheduled winter sale email\")\n        .build();\n\nCreateAndSendScheduleRequest scheduleRequest = CreateAndSendScheduleRequest.newRequest(schedulePayload)\nResponse<GenericResponse> response = client.execute(scheduleRequest);\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nemail_notification = UA::EmailNotification.new(client: airship)\nemail_notification.bypass_opt_in_level = false\nemail_notification.html_body = \"<h1>Seasons Greetings</h1><p>Check out our winter deals!</p><p><a data-ua-unsubscribe=\\\"1\\\" title=\\\"unsubscribe\\\" href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\">Unsubscribe</a></p>\"\nemail_notification.message_type = 'transactional'\nemail_notification.plaintext_body = 'Greetings! Check out our latest winter deals! [[ua-unsubscribe href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\"]]'\nemail_notification.reply_to = 'no-reply@airship.com'\nemail_notification.sender_address = 'team@airship.com'\nemail_notification.sender_name = 'Airship'\nemail_notification.subject = 'Welcome to the Winter Sale!'\noverride = email_notification.email_override\nsend_it = UA::CreateAndSend.new(client: airship)\nsend_it.addresses = [\n  {\n    \"ua_address\": \"new@example.com\",\n    \"ua_commercial_opted_in\": \"2020-10-28T10:34:22\"\n  }\n]\nsend_it.device_types = [ \"email\" ]\nsend_it.campaigns = [\"winter sale\", \"west coast\"]\nsend_it.notification = email_notification.email_override\nsend_it.name = \"scheduled winter sale email\"\nsend_it.scheduled_time = \"2020-12-08T11:06:00\"\nsend_it.schedule\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 202 Accepted\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n  \"ok\": true,\n  \"operation_id\": \"67c65146-c27f-431f-b54a-83aca694fdd3\",\n  \"push_ids\": [\n      \"8cf8b2a5-7655-40c2-a500-ff498e60453e\"\n  ],\n  \"schedule_urls\": [\n      \"http://go.urbanairship/api/schedules/2d69320c-3c91-5241-fac4-248269eed109\"\n  ],\n  \"schedules\": [\n      {\n        \"push\": {\n            \"audience\": {\n              \"create_and_send\": [\n                  {\n                    \"ua_address\": \"new@example.com\",\n                    \"ua_commercial_opted_in\": \"2020-11-29T10:34:22\"\n                  },\n                  {\n                    \"ua_address\": \"ben@example.com\",\n                    \"ua_commercial_opted_in\": \"2020-11-29T12:45:10\"\n                  }\n              ]\n            },\n            \"device_types\": [\n              \"email\"\n            ],\n            \"notification\": {\n              \"campaigns\": {\n                  \"categories\": [\n                    \"winter sale\",\n                    \"west coast\"\n                  ]\n              },\n              \"email\": {\n                  \"html_body\": \"<h1>Seasons Greetings</h1><p>Check out our winter deals!</p><p><a data-ua-unsubscribe=\\\"1\\\" title=\\\"unsubscribe\\\" href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\">Unsubscribe</a></p>\",\n                  \"message_type\": \"commercial\",\n                  \"plaintext_body\": \"Greetings! Check out our latest winter deals! [[ua-unsubscribe href=\\\"http://unsubscribe.urbanairship.com/email/success.html\\\"]]\",\n                  \"reply_to\": \"no-reply@airship.com\",\n                  \"sender_address\": \"team@airship.com\",\n                  \"sender_name\": \"Airship\",\n                  \"subject\": \"Welcome to the Winter Sale! \"\n              }\n            }\n        },\n        \"schedule\": {\n            \"scheduled_time\": \"2020-11-11T12:00:00\"\n        },\n        \"url\": \"http://go.urbanairship/api/schedules/2d69320c-3c91-5241-fac4-248269eed109\"\n      }\n  ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/schedules/segmentation-bridge/{id}": {
      "delete": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "DELETE /api/schedules/segmentation-bridge/b384ca54-0a1d-9cb3-2dfd-ae5964630e66 HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 204 No Content\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/schedules/segmentation-bridge/b384ca54-0a1d-9cb3-2dfd-ae5964630e66 HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\nContent-Length: 123\n\n{\n  \"url\": \"https://<host>/api/schedules/segmentation-bridge/b384ca54-0a1d-9cb3-2dfd-ae5964630e66\",\n  \"name\": \"test\",\n  \"schedule\": {\n      \"scheduled_time\" : \"2023-04-01T18:45:30\"\n  },\n  \"request\": {\n      \"audience\": {\n          \"segment\": \"8f18fcb5-e2aa-4b61-b190-42652eadb5ef\"\n      },\n      \"device_types\": [\n          \"ios\",\n          \"android\"\n      ],\n      \"payload\": {\n          \"segmentation_trigger_id\": \"5cde3564-ead8-9743-63af-821e12337812\"\n      }\n  }\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "put": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "PUT /api/schedules/segmentation-bridge/b384ca54-0a1d-9cb3-2dfd-ae5964630e66 HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\nContent-Length: 123\n\n{\n    \"name\": \"test\",\n    \"schedule\": {\n        \"scheduled_time\" : \"2023-04-01T18:45:30\"\n    },\n    \"request\": {\n        \"audience\": {\n            \"segment\": \"8f18fcb5-e2aa-4b61-b190-42652eadb5ef\"\n        },\n        \"device_types\": [\n            \"ios\",\n            \"android\"\n        ],\n        \"payload\": {\n            \"segmentation_trigger_id\": \"5cde3564-ead8-9743-63af-821e12337812\"\n        }\n    }\n}\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\nContent-Length: 123\n\n{\n    \"url\": \"https://<host>/api/schedules/segmentation-bridge/b384ca54-0a1d-9cb3-2dfd-ae5964630e66\",\n    \"name\": \"test\",\n    \"schedule\": {\n        \"scheduled_time\" : \"2023-04-01T18:45:30\"\n    },\n    \"request\": {\n        \"audience\": {\n            \"segment\": \"8f18fcb5-e2aa-4b61-b190-42652eadb5ef\"\n        },\n        \"device_types\": [\n            \"ios\",\n            \"android\"\n        ],\n        \"payload\": {\n            \"segmentation_trigger_id\": \"5cde3564-ead8-9743-63af-821e12337812\"\n        }\n    }\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/schedules/{schedule_id}": {
      "delete": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "DELETE /api/schedules/b384ca54-0a1d-9cb3-2dfd-ae5964630e66 HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nScheduleDeleteRequest request = ScheduleDeleteRequest.newRequest(\"b384ca54-0a1d-9cb3-2dfd-ae5964630e66\");\nResponse<GenericResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import BasicAuthClient, ScheduledPush\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\nschedule = ScheduledPush.from_url(client, 'https://go.urbanairship.com/api/schedules/b384ca54-0a1d-9cb3-2dfd-ae5964630e66')\n\n# Cancel schedule\nschedule.cancel()\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nschedule = airship.create_scheduled_push\nschedule = UA::ScheduledPush.from_url(client: airship, url: 'https://go.urbanairship.com/api/schedules/b384ca54-0a1d-9cb3-2dfd-ae5964630e66')\nschedule.cancel\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 204 No Content\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/schedules/5cde3564-ead8-9743-63af-821e12337812 HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nScheduleListingRequest request = ScheduleListingRequest.newRequest(\"5cde3564-ead8-9743-63af-821e12337812\");\nResponse<ListAllSchedulesResponse> response = client.execute(request);\nSchedulePayloadResponse schedule = response.getBody().get().getSchedules().get(0);\n// Get the schedule's name\nOptional<String> name = schedule.getName();\n// Get the push IDs\nSet<String> pushIds = schedule.getPushIds();\n// Get the scheduled time\nSchedule sched = schedule.getSchedule();\n// Get the associated push payload\nPushPayload payload = schedule.getPushPayload();\n// Get the URL\nOptional<String> url = schedule.getUrl();\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nschedule = airship.create_scheduled_push\nscheduled_push = UA::ScheduledPush.new(airship)\nschedule_details = scheduled_push.list(schedule_id: '5cde3564-ead8-9743-63af-821e12337812')\nputs(schedule_details)\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"name\": \"I would like to subscribe to your newsletter\",\n   \"schedule\": {\n      \"scheduled_time\": \"2020-04-01T18:45:30\"\n   },\n   \"push\": {\n      \"audience\": {\n         \"tag\": [\n            \"intriguing\",\n            \"ideas\"                       ]\n      },\n      \"notification\": {\n         \"alert\": \"Check your inbox!\"\n      },\n      \"device_types\": [ \"ios\", \"android\" ]\n   }\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "put": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "PUT /api/schedules/5cde3564-ead8-9743-63af-821e12337812 HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n   \"name\": \"I would like to subscribe to your newsletter\",\n   \"schedule\": {\n      \"scheduled_time\": \"2020-04-01T18:45:30\"\n   },\n   \"push\": {\n      \"audience\": {\n         \"tag\": [\n            \"intriguing\",\n            \"ideas\",\n            \"thought_leadership\"\n         ]\n      },\n      \"notification\": {\n         \"alert\": \"Check your inbox!\"\n      },\n      \"device_types\": [ \"ios\", \"android\" ]\n   }\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nSchedulePayload schedulePayload = SchedulePayload.newBuilder()\n        .setName(\"I would like to subscribe to your newsletter\")\n        .setSchedule(Schedule.newBuilder()\n                .setScheduledTimestamp(DateTime.parse(\"2020-04-01T18:45:00Z\"))\n                .build())\n        .setPushPayload(PushPayload.newBuilder()\n                .setDeviceTypes(DeviceTypeData.of(DeviceType.IOS, DeviceType.ANDROID))\n                .setNotification(Notifications.alert(\"Check your inbox!\"))\n                .setAudience(Selectors.tag(\"intriguing\"))\n                .build())\n        .build();\n\nScheduleRequest scheduleRequest = ScheduleRequest.newUpdateRequest(schedulePayload, \"5cde3564-ead8-9743-63af-821e12337812\");\nResponse<ScheduleResponse> response = client.execute(scheduleRequest);\n"
            },
            {
              "lang": "python",
              "source": "from datetime import datetime\nfrom urbanairship import (\n    BasicAuthClient, ScheduledPush, Push,\n    tag, notification, scheduled_time\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\nschedule = ua.ScheduledPush.from_url(client, 'https://go.urbanairship.com/api/schedules/5cde3564-ead8-9743-63af-821e12337812')\n\n# change scheduled time to tomorrow\nschedule.schedule = scheduled_time(datetime.datetime.utcnow() + datetime.timedelta(days=1))\nresp = schedule.update()\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nschedule = airship.create_scheduled_push\nschedule = UA::ScheduledPush.from_url(client: airship, url: 'https://go.urbanairship.com/api/schedules/5cde3564-ead8-9743-63af-821e12337812')\n# change scheduled time to tomorrow\nschedule.schedule = UA.scheduled_time(Time.now.utc + (60 * 60 * 24))\nschedule.update\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Length: 123\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true,\n    \"operation_id\": \"7c56d013-5599-d66d-6086-6205115d85e2\",\n    \"schedule_urls\": [ \"https://go.urbanairship.com/api/schedules/0af1dead-e769-4b78-879a-7c4bb52d7c9e\" ],\n    \"schedules\": [\n        {\n            \"url\": \"https://go.urbanairship.com/api/schedules/0af1dead-e769-4b78-879a-7c4bb52d7c9e\",\n            \"schedule\": {\n                \"scheduled_time\": \"2020-04-01T18:45:30\"\n            },\n            \"name\": \"I would like to subscribe to your newsletter\",\n            \"push\": {\n                \"audience\": {\"tag\": [\"intriguing\", \"ideas\", \"thought_leadership\"] },\n                \"notification\": {\"alert\": \"Check your inbox!\"},\n                \"device_types\": [ \"ios\", \"android\" ]\n            },\n            \"push_ids\": [ \"48fb8e8a-ee51-4e2a-9a47-9fab9b13d846\" ]\n        }\n    ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/schedules/{schedule_id}/pause": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/schedules/5cde3564-ead8-9743-63af-821e12337812/pause HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import BasicAuthClient, ScheduledPush\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\n\nsched = ScheduledPush(client)\nsched.url = \"http://go.urbanairship/api/schedules/5cde3564-ead8-9743-63af-821e12337812\"\n\nsched.pause()\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nScheduleStatusRequest pauseRequest = ScheduleStatusRequest.pauseScheduleRequest(\"68b2d71f-1c10-4592-bd96-2725aee0ae57\");\nResponse<GenericResponse> pauseResponse = client.execute(pauseRequest);      \n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/schedules/{schedule_id}/resume": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/schedules/5cde3564-ead8-9743-63af-821e12337812/resume HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import BasicAuthClient, ScheduledPush\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\n\nsched = ScheduledPush(client)\nsched.url = \"http://go.urbanairship/api/schedules/5cde3564-ead8-9743-63af-821e12337812\"\n\nsched.resume()\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nScheduleStatusRequest resumeRequest = ScheduleStatusRequest.resumeScheduleRequest(\"68b2d71f-1c10-4592-bd96-2725aee0ae57\");\nResponse<GenericResponse> resumeResponse = client.execute(resumeRequest);\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/segmentation-bridge": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/segmentation-bridge HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n    \"audience\" : {\n        \"segment\": \"<segment-id>\"\n    },\n    \"device_types\" : [\n        \"ios\",\n        \"android\"\n    ],\n    \"payload\" : {\n        \"segmentation_trigger_id\": \"<trigger-id>\"\n    }\n}\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 201 OK\nContent-Length: 11\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true,\n    \"operation_id\": \"1fd202ca-9deb-4372-b052-dff0516f9518\",\n    \"segmentation_request_id\": \"39a50aef-c776-43d8-ae60-0d3bdd03c0ed\"\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/segments": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/segments/ HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nSegmentListingRequest request = SegmentListingRequest.newRequest();\nResponse<SegmentListingResponse> response = client.execute(request);\n\n// Get the first segment in the list\nSegmentListingView segment = response.getBody().get().getSegmentListingViews().get(0);\n\n// Get the segment display name\nString displayName = segment.getDisplayName();\n\n// Get the segment ID\nString id = segment.getSegmentId();\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, SegmentList\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\n\n# List all segments\nsegment_list = SegmentList(client)\nfor segment in segment_list:\n    print(segment.display_name)\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nsegment_list = UA::SegmentList.new(client: airship)\n\nsegment_list.each do |segment|\n   puts(segment['display_name'])\nend\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nLink: <https://go.urbanairship.com/api/segments?limit=1&sort=id&order=asc&start=3832cf72-cb44-4132-a11f-eafb41b82f64>;rel=next\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"next_page\": \"https://go.urbanairship.com/api/segments?limit=1&sort=id&order=asc&start=3832cf72-cb44-4132-a11f-eafb41b82f64\",\n   \"segments\": [\n      {\n         \"creation_date\": 1346248822221,\n         \"display_name\": \"A segment\",\n         \"id\": \"00c0d899-a595-4c66-9071-bc59374bbe6b\",\n         \"modification_date\": 1346248822221\n      }\n   ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/segments HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n   \"display_name\": \"News but not sports\",\n   \"criteria\": {\n      \"and\": [\n         {\"tag\": \"news\"},\n         {\"not\":\n            {\"tag\": \"sports\"}\n         }\n      ]\n   }\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\n// Define the segment criteria\nSelector compound = Selectors.and(Selectors.tag(\"news\"), Selectors.not(Selectors.tag(\"sports\")));\n\nSegmentRequest request = SegmentRequest.newRequest();\nrequest.setCriteria(compound);\nrequest.setDisplayName(\"News but not sports\");\n\nResponse<GenericResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, Segment,\n    tag, not_, and_\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\n\n# Create a new segment\nsegment = Segment()\nsegment.display_name = \"News but not sports\"\nsegment.criteria = and_(\n    tag('news'),\n    not_(tag('sports'))\n)\n\n# Create the segment\nresponse = segment.create(client)\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nsegment = UA::Segment.new(client: airship)\nsegment.display_name = 'Display Name'\nsegment.criteria = { 'tag' => 'existing_tag' }\nsegment.create\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 201 Created\nLocation: https://go.urbanairship.com/api/segments/f35da41d-59c1-4106-a192-9594bd480cb6\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\": true,\n   \"segment_id\": \"f35da41d-59c1-4106-a192-9594bd480cb6\",\n   \"operation_id\": \"1d154121-951f-45b9-896d-e70718b5865b\"\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/segments/{segment_id}": {
      "delete": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "DELETE /api/segments/00c0d899-a595-4c66-9071-bc59374bbe6b HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nSegmentDeleteRequest request = SegmentDeleteRequest.newRequest(\"00c0d899-a595-4c66-9071-bc59374bbe6b\");\nResponse<GenericResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, Segment\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\n\n# Delete a segment\nsegment = Segment()\nsegment.from_id(client, \"00c0d899-a595-4c66-9071-bc59374bbe6b\")\nresponse = segment.delete(client)\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nsegment = UA::Segment.new(client: airship)\nsegment.from_id(id: '00c0d899-a595-4c66-9071-bc59374bbe6b')\nsegment.delete\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 204 No Content\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/segments/00c0d899-a595-4c66-9071-bc59374bbe6b HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nSegmentLookupRequest request = SegmentLookupRequest.newRequest(\"00c0d899-a595-4c66-9071-bc59374bbe6b\");\nResponse<SegmentView> response = client.execute(request);\n\n// Get the segment criteria\nSelector criteria = response.getBody().get().getCriteria();\n\n// Get the segment display name\nString displayName = response.getBody().get().getDisplayName();\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, Segment\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\n\n# Look up a segment by ID\nsegment = Segment()\nresponse = segment.from_id(client, \"00c0d899-a595-4c66-9071-bc59374bbe6b\")\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nsegment = UA::Segment.new(client: airship)\ndetails = segment.from_id(id: '00c0d899-a595-4c66-9071-bc59374bbe6b')\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"criteria\": {\n      \"and\": [\n         {\n            \"tag\": \"ipad\"\n         },\n         {\n            \"not\": {\n               \"tag\": \"foo\"\n            }\n         }\n      ]\n   },\n   \"display_name\": \"A segment\"\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "put": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "PUT /api/segments/00c0d899-a595-4c66-9071-bc59374bbe6b HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n   \"display_name\": \"Entertainment but not sports\",\n   \"criteria\": {\n      \"and\": [\n         {\"tag\": \"entertainment\"},\n         {\"not\":\n            {\"tag\": \"sports\"}\n         }\n      ]\n   }\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\n// Define the segment criteria\nSelector compound = Selectors.and(Selectors.tag(\"entertainment\"), Selectors.not(Selectors.tag(\"sports\")));\n\nSegmentRequest request = SegmentRequest.newUpdateRequest(\"00c0d899-a595-4c66-9071-bc59374bbe6b\");\nrequest.setCriteria(compound);\nrequest.setDisplayName(\"Entertainment but not sports\");\n\nResponse<GenericResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, Segment,\n    tag, not_, and_\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\n\n# Update an existing segment\nsegment = Segment()\nsegment.from_id(client, \"00c0d899-a595-4c66-9071-bc59374bbe6b\")\n\n# Update segment properties\nsegment.display_name = \"Entertainment but not sports\"\nsegment.criteria = and_(\n    tag('entertainment'),\n    not_(tag('sports'))\n)\n\n# Save the changes\nresponse = segment.update(client)\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\nairship = UA::Client.new(key: '<app key>', secret: '<master secret>')\n\nsegment = UA::Segment.new(client: airship)\nsegment.from_id(id: '00c0d899-a595-4c66-9071-bc59374bbe6b')\nsegment.display_name = 'New Display Name'\nsegment.criteria = { 'tag' => 'new_tag' }\nsegment.update\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Length: 65\nContent-Type: application/vnd.urbanairship+json;version=3\n\n{\n   \"ok\": true,\n   \"operation_id\": \"1f93ca85-b8fd-4833-8d1a-6e2b7f4ceea9\"\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/sms/clx/inbounds": {
      "post": [
        {
          "description": "Example incoming request from Sinch",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/sms/clx/inbounds HTTP/1.1\nUser-Agent: Apache-HttpAsyncClient/4.0.1 (java 1.5)\nContent-Type: application/json\nAuthorization: Basic <user:pass>\nConnection: close\n\n{\n  \"body\": \"a message for urbanair\",\n  \"operator_id\": \"10488\",\n  \"from\": \"11235678309\",\n  \"to\": \"54321\",\n  \"received_at\": \"2018-06-19T17:52:33.332Z\",\n  \"type\": \"mo_text\",\n  \"id\": \"b-RwkaPN_PIJdx3X\"\n}\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n   \"ok\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/sms/custom-response": {
      "post": [
        {
          "description": "SMS example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/sms/custom-response HTTP/1.1\nAuthorization: Bearer <authorization token>\nX-UA-Appkey: <app key>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n  \"sms\" : {\n      \"alert\": \"Your balance is $1234.56. Go to https://www.example.com/myaccount/my-balance?ua-tag-add=balance_prefs:sms to see more about your account.\",\n      \"shorten_links\": true\n  },\n  \"mobile_originated_id\" : \"28883743-4868-4083-ab5d-77ac4542531a\"\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setBearerToken(\"<token>\")\n        .build();\n\nCustomSmsResponseSmsPayload customSmsResponseChannelSms = CustomSmsResponseSmsPayload.newBuilder()\n        .setAlert(\"Your balance is $1234.56. Go to https://www.example.com/myaccount/my-balance?ua-tag-add=balance_prefs:sms to see more about your account.\")\n        .setMobileOriginatedId(\"28883743-4868-4083-ab5d-77ac4542531a\")\n        .setShortenLinks(true)\n        .build();\n\nCustomSmsResponseRequest customSmsResponseRequest = CustomSmsResponseRequest.newRequest(customSmsResponseChannelSms);\nResponse<CustomSmsResponseResponse> response = client.execute(customSmsResponseRequest);\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BearerTokenClient, SmsCustomResponse,\n    sms, mms\n)\n\nclient = BearerTokenClient(\n    app_key='<app_key>',\n    token='<bearer_token>'\n)\n\ncustom_response = SmsCustomResponse(\n    client=client,\n    mobile_originated_id=\"28883743-4868-4083-ab5d-77ac4542531a\"\n)\n\ncustom_response.sms = sms(\n    alert=\"Your balance is $1234.56. Go to https://www.example.com/myaccount/my-balance?ua-tag-add=balance_prefs:sms to see more about your account.\",\n    shorten_links=True\n)\n\nresponse = custom_response.send()\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "MMS example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/sms/custom-response HTTP/1.1\nAuthorization: Bearer <bearer token>\nX-UA-Appkey: <app key>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n  \"mms\" : {\n    \"fallback_text\": \"See fun cat pics at https://example.com/cat/pics/12345678\",\n    \"slides\": [\n      {\n        \"media\": {\n          \"url\": \"https://example.com/cat/pics/12345678.gif\",\n          \"content_type\": \"image/gif\",\n          \"content_length\": 23098\n        }\n      }\n    ],\n    \"shorten_links\": true\n  },\n  \"mobile_originated_id\" : \"3e1e4fb3-2d3c-431e-96bf-9b235a12f84b\"\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setBearerToken(\"<token>\")\n        .build();\n\nMmsSlides mmsSlides = MmsSlides.newBuilder()\n        .setText(\"Test\")\n        .setMediaUrl(\"https://example.com/cat/pics/12345678.gif\")\n        .setMediaContentType(\"image/gif\")\n        .setMediaContentLength(23098)\n        .build();\n\nCustomSmsResponseMmsPayload customSmsResponseMmsPayload = CustomSmsResponseMmsPayload.newBuilder()\n        .setFallbackText(\"See fun cat pics at https://example.com/cat/pics/12345678\")\n        .setMobileOriginatedId(\"28883743-4868-4083-ab5d-77ac4542531a\")\n        .setSlides(mmsSlides)\n        .build();\n\nCustomSmsResponseRequest customSmsResponseRequest = customSmsResponseRequest.newRequest(customSmsResponseMmsPayload);\nResponse<CustomSmsResponseResponse> response = client.execute(customSmsResponseRequest);\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BearerTokenClient, SmsCustomResponse,\n    mms\n)\n\nclient = BearerTokenClient(\n    app_key='<app_key>',\n    token='<bearer_token>'\n)\n\ncustom_response = SmsCustomResponse(\n    client=client,\n    mobile_originated_id=\"3e1e4fb3-2d3c-431e-96bf-9b235a12f84b\"\n)\n\ncustom_response.mms = mms(\n    fallback_text=\"See fun cat pics at https://example.com/cat/pics/12345678\",\n    slides=[{\n        \"media\": {\n            \"url\": \"https://example.com/cat/pics/12345678.gif\",\n            \"content_type\": \"image/gif\",\n            \"content_length\": 23098\n        }\n    }],\n    shorten_links=True\n)\n\nresponse = custom_response.send()\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n      \"ok\": true,\n      \"operation_id\": \"f3d0993e-e3e1-4aae-b1c0-864a715bfaff\",\n      \"push_id\": \"7502abe6-e6ea-4f2b-906f-ebbab612c69e\"\n}\n"
            }
          ]
        }
      ]
    },
    "/api/sms/tyntec/inbounds": {
      "post": [
        {
          "description": "Example incoming request from Tyntec",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/sms/tyntec/inbounds HTTP/1.1\nUser-Agent: Apache-HttpAsyncClient/4.0.1 (java 1.5)\nContent-Type: application/json\nConnection: close\n\n{ \"from\": \"+491622943176\",\n  \"to\": \"+14155270903\",\n  \"message\": \"This is an example.\",\n  \"originMCC\": \"262\",\n  \"originMNC\": \"02\",\n  \"originTtId\": \"2\",\n  \"totalPrice\": \"0.002\",\n  \"requestId\": \"12-75cfafba-8799-4f2b-8505-ece6af6abf01\",\n  \"size\": 1,\n  \"missingParts\": false,\n  \"contentList\": [\n    { \"msgId\": \"12-1407778865439+1234567890\",\n      \"sentDate\": \"2014-05-13T17:41:06+0100\",\n      \"price\": \"0.001\",\n      \"currency\": \"EUR\",\n      \"priceEffective\": \"2010-11-01T00:00:00+0000\",\n      \"sequenceNumber\": 1\n    }\n  ]\n}\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{ \"ok\": true }\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/sms/{msisdn}/keywords": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/sms/15035556789/keywords HTTP/1.1\nUser-Agent: Apache-HttpAsyncClient/4.0.1 (java 1.5)\nContent-Type: application/json\nAuthorization: Basic <user:pass>\nConnection: close\n\n{\n  \"keyword\" : \"stop\",\n  \"sender_ids\" : [ \"54321\", \"1234\"]\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nKeywordInteractionRequest request = KeywordInteractionRequest.newRequest(\"15035556789\")\n        .addKeyword(\"stop\")\n        .addSenderId(\"54321\")\n        .addSenderId(\"1234\");\n\nResponse<CustomSmsResponseResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, KeywordInteraction\n)\nfrom datetime import datetime\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\n\ninteraction = KeywordInteraction(\n    client=client,\n    keyword=\"stop\",\n    sender_ids=[\"54321\", \"1234\"],\n    timestamp=datetime(2021, 10, 8, 12, 0, 0)\n)\nresponse = interaction.post()\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n  \"ok\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Failure response (Keyword not configured for Sender ID)",
          "examples": [
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 400 Bad Request\nContent-Type: application/json\n\n{\n  \"ok\" : false,\n  \"error\" : \"The following sender(s) are not configured for the 'stop' keyword: ['1234']\",\n  \"error_code\" : 400\n}\n"
            }
          ]
        }
      ]
    },
    "/api/subscription_lists": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/subscription_lists HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nSubscriptionListListingRequest subscriptionListListingRequest = SubscriptionListListingRequest.newRequest();\nResponse<SubscriptionListListingResponse> response = client.execute(subscriptionListListingRequest);\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\" : true,\n   \"subscription_lists\": [\n       {\n           \"list_id\": \"example_listId-1\",\n           \"name\": \"A nice readable name 1\",\n           \"scopes\": [\"email\"],\n           \"messaging_type\": \"transactional\",\n           \"default_opted_in\": false\n       },\n       {\n           \"list_id\": \"example_listId-2\",\n           \"name\": \"A nice readable name 2\",\n           \"description\": \"A very nice description for you.\",\n           \"scopes\": [\"app\", \"web\"],\n           \"default_opted_in\": true\n       }\n   ]\n}\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, SubscriptionList\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\n\n# List all subscription lists\nsubscription_lists = SubscriptionList(client).list()\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/subscription_lists/channels/{channel_id}": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/subscription_lists/channels/dc51e541-6d14-43fa-824b-700def260f64 HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\" : true,\n   \"list_ids\": [\"example_listId-1\",\"example_listId-2\"]\n}  \n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, SubscriptionList\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\n\n# Get subscription lists for a channel\nchannel_lists = SubscriptionList(client).list_by_channel('dc51e541-6d14-43fa-824b-700def260f64')\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/subscription_lists/contacts/{contact_id}": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/subscription_lists/contacts/dc51e541-6d14-43fa-824b-700def260f64 HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\" : true,\n   \"subscription_lists\": [\n      {\n         \"list_ids\": [\"example_listId-2\", \"example_listId-4\"],\n         \"scope\": \"app\"\n      },\n      {\n         \"list_ids\": [\"example_listId-2\"],\n         \"scope\": \"web\"\n      }\n   ],\n}\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, SubscriptionList\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\n\n# Get subscription lists for a contact\ncontact_lists = SubscriptionList(client).list_by_contact('dc51e541-6d14-43fa-824b-700def260f64')\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/subscription_lists/named_users/{named_user_id}": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/subscription_lists/named_users/4cbd1c1c-42e1-4606-bc93-9b707bcedcbc HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nNamedUserSubscriptionListsListingRequest namedUserSubscriptionListsListingRequest = NamedUserSubscriptionListsListingRequest.newRequest(\"4cbd1c1c-42e1-4606-bc93-9b707bcedcbc\");\nResponse<NamedUserSubscriptionListsListingResponse> response = client.execute(namedUserSubscriptionListsListingRequest);\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\" : true,\n   \"subscription_lists\": [\n      {\n         \"list_ids\": [\"example_listId-2\", \"example_listId-4\"],\n         \"scope\": \"app\"\n      },\n      {\n         \"list_ids\": [\"example_listId-2\"],\n         \"scope\": \"web\"\n      }\n   ],\n}\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, SubscriptionList\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\n\n# Get subscription lists for a named user\nnamed_user_lists = SubscriptionList(client).list_by_named_user('4cbd1c1c-42e1-4606-bc93-9b707bcedcbc')\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/tag-lists": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/tag-lists HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, TagList\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\n\n# List all tag lists\nresponse = TagList.list(airship=client)\ntag_lists = response.json()\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\nUA = Urbanairship\nairship = UA::Client.new(key: 'app_key', secret: 'master_secret')\n\ntag_list = UA::TagList.new(client: airship)\nlist_response = tag_list.list\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nTagListListingRequest tagListListingRequest = TagListListingRequest.newRequest();\nResponse<TagListListingResponse> response = client.execute(tagListListingRequest);\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nData-Tag: lists\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n  \"ok\" : true,\n  \"lists\" : [\n    {\n      \"name\" : \"ua_tags_foo\",\n      \"description\" : \"\",\n      \"extra\" : { \"key\": \"value\" },\n      \"add\":{\n        \"tag-group-name\": [\n          \"tag-value\"\n        ],\n        \"tag-group-name2\": [\n          \"tag-value2a\",\n          \"tag-value2b\"\n        ]\n      },\n      \"remove\": {\n        \"tag-group-name3\": [\n          \"tag-value\"\n        ]\n      },\n      \"set\": {\n        \"tag-group-name4\": [\n          \"tag-value\"\n        ]\n      },\n      \"created\" : \"2013-08-08T20:41:06\",\n      \"last_updated\" : \"2014-05-01T18:00:27\",\n      \"channel_count\" : 0,\n      \"mutation_success_count\": 1000,\n      \"mutation_error_count\": 10,\n      \"error_path\":  \"https://go.urbanairship.com/api/tag-lists/users_a/errors\",\n      \"status\" : \"ready\"\n    },\n    {\n      \"...\" : \"...\"\n    }\n  ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/tag-lists HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n  \"name\":\"ua_tags_foobar\",\n  \"description\":\"Description of the file being uploaded\",\n  \"extra\":{\n      \"key\":\"value\",\n      \"another\":\"etc...\"\n  },\n  \"add\":{\n      \"tag-group-name\":[\n        \"tag-value\"\n      ],\n      \"tag-group-name2\":[\n        \"tag-value2a\",\n        \"tag-value2b\"\n      ]\n  },\n  \"remove\":{\n      \"tag-group-name3\":[\n        \"tag-value\"\n      ]\n  },\n  \"set\":{\n      \"tag-group-name4\":[\n        \"tag-value\"\n      ]\n  }\n}\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 201 Created\nContent-Type: application/json\nLocation: https://go.urbanairship.com/api/tag-lists/ua_tags_foobar\n\n{\n  \"ok\" : true\n}\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, TagList\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\n\ntag_list = TagList(\n    client=client,\n    list_name=\"ua_tags_my_new_list\",\n    description=\"First of many tags lists!\",\n    extra={\n        \"filename\": \"tags.csv\",\n        \"source\": \"CRM\"\n    },\n    add_tags={\n        \"tag-group-name\": [\"tag-value\"],\n        \"tag-group-name2\": [\"tag-value2a\", \"tag-value2b\"]\n    },\n    remove_tags={\n        \"tag-group-name3\": [\"tag-value\"]\n    },\n    set_tags={\n        \"tag-group-name4\": [\"tag-value\"]\n    }\n)\n\ntag_list.create()\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\nUA = Urbanairship\nairship = UA::Client.new(key: 'app_key', secret: 'master_secret')\ntags = {'tag_group_name': ['tag1', 'tag2']}\n\ntag_list = UA::TagList.new(client: airship)\ntag_list.name = 'ua_tags_list_name'\ntag_list.create(description: 'description', extra: {'key': 'value'}, add: tags)\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nTagListRequest tagListRequest = TagListRequest.newRequest()\n        .setName(\"ua_tags_my_new_list\");\n        .setDescription(\"First of many tags lists!\")\n        .addTags(\"tag_group1\", ImmutableSet.of(\"tag1\",\"tag2\"))\n        .removeTags(\"tag_group2\", ImmutableSet.of(\"tag3\",\"tag4\"))\n        .setTags(\"tag_group3\", ImmutableSet.of(\"tag4\",\"tag5\"))\n        .addExtra(\"test\",\"value\")\nResponse<GenericResponse> response = client.execute(tagListRequest);\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/tag-lists/{list_name}": {
      "delete": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "DELETE /api/tag-lists/ua_tags_foobar HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+csv; version=3\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 204 No Content\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/tag-lists/{list_name}/csv": {
      "put": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "PUT /api/tag-lists/ua_tags_foobar/csv HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: text/csv\n\nchannel_id\nc543f3a3-bc1d-4830-8dee-7532c6a23b9a\n6ba360a0-1f73-4ee7-861e-95f6c1ed6410\n15410d17-687c-46fa-bbd9-f255741a1523\nc2c64ef7-8f5c-470e-915f-f5e3da04e1df\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, TagList\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\n\ntag_list = TagList(\n    client=client,\n    list_name=\"ua_tags_cool_list\",\n    description=\"example list\"\n)\n\ntag_list.upload(file_path=\"path/to/file.csv\")\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\nUA = Urbanairship\nairship = UA::Client.new(key: 'app_key', secret: 'master_secret')\n\ntag_list = UA::TagList.new(client: airship)\ntag_list.name = 'ua_tags_list_name'\ntag_list.upload(csv_file: 'file_content', gzip: true)\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n        \nTagListUploadRequest tagListUploadRequest = TagListUploadRequest.newRequest(\"ua_tags_cool_list\", \"path/to/file.csv\");\nResponse<GenericResponse> response = client.execute(tagListUploadRequest);\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 202 Accepted\nContent-Type: application/json\n\n{\n  \"ok\" : true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Tag list CSV upload for SMS",
          "examples": [
            {
              "lang": "HTTP",
              "source": "PUT /api/tag-lists/ua_tags_foobar/csv HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: text/csv\n\nmsisdn,sms_sender,firstName\n5035556789,18588675309,Jane\n4155551212,18588675309,Rory\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, TagList\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\n\ntag_list = TagList(\n    client=client,\n    list_name=\"ua_tags_foobar\",\n    description=\"example list\"\n)\n\ntag_list.upload(file_path=\"path/to/sms_file.csv\")\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\nUA = Urbanairship\nairship = UA::Client.new(key: 'app_key', secret: 'master_secret')\n\ntag_list = UA::TagList.new(client: airship)\ntag_list.name = 'ua_tags_list_name'\ntag_list.upload(csv_file: 'sms_file_content', gzip: true)\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nTagListUploadRequest tagListUploadRequest = TagListUploadRequest.newRequest(\"ua_tags_cool_list\", \"path/to/sms_file.csv.csv\");\nResponse<GenericResponse> response = client.execute(tagListUploadRequest);\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 202 Accepted\nContent-Type: application/json\n\n{\n  \"ok\" : true\n}\n"
            }
          ]
        }
      ]
    },
    "/api/tag-lists/{list_name}/errors": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/tag-lists/ua_tags_foobar/errors HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+csv; version=3\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, TagList\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\n\ntag_list = TagList(\n  airship=client, \n  list_name=\"ua_tags_foobar\", \n  description=\"example list\", \n)\n\nerrors = tag_list.get_errors()\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\nUA = Urbanairship\nairship = UA::Client.new(key: 'app_key', secret: 'master_secret')\n\ntag_list = UA::TagList.new(client: airship)\nerror_csv = tag_list.errors\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nTagListErrorsRequest request = TagListErrorsRequest.newRequest(\"ua_tags_foobar\");\nResponse<String> response = client.execute(request);\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: text/csv\n\n8b4de669-16f1-4e71-9a1f-0c62a8235a65,ERROR,\"Unknown channel\"\nabcd,ERROR,\"Invalid msisdn\"\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/templates": {
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/templates HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nTemplateListingRequest request = TemplateListingRequest.newRequest();\nResponse<TemplateListingRequest> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, Template, TemplateList, merge_data\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\n\n# List all templates\nfor template in TemplateList(client):\n    print(\n        f\"Template ID: {template.template_id}\\n\"\n        f\"Created: {template.created_at}\\n\"\n        f\"Modified: {template.modified_at}\\n\"\n        f\"Last Used: {template.last_used}\\n\"\n        f\"Name: {template.name}\\n\"\n        f\"Description: {template.description}\\n\"\n        f\"Variables: {template.variables}\\n\"\n        f\"Push: {template.push}\"\n    )\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nData-Attribute: templates\nCount: 1\nTotal-Count: 1\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\" : true,\n    \"count\": 1,\n    \"total_count\": 1,\n    \"templates\": [\n        {\n            \"id\": \"ef34a8d9-0ad7-491c-86b0-aea74da15161\",\n            \"created_at\": \"2020-08-17T11:10:01Z\",\n            \"modified_at\": \"2020-08-17T11:10:01Z\",\n            \"last_used\": null,\n            \"name\": \"Welcome Message\",\n            \"description\": \"Our welcome message\",\n            \"variables\": [\n                {\n                    \"key\": \"TITLE\",\n                    \"name\": \"Title\",\n                    \"description\": \"e.g., Mr, Ms, Dr, etc.\",\n                    \"default_value\": \"\"\n                },\n                {\n                    \"key\": \"FIRST_NAME\",\n                    \"name\": \"First Name\",\n                    \"description\": \"Given name\",\n                    \"default_value\": null\n                },\n                {\n                    \"key\": \"LAST_NAME\",\n                    \"name\": \"Last Name\",\n                    \"description\": \"Family name\",\n                    \"default_value\": null\n                }\n            ],\n            \"push\": {\n                \"notification\": {\n                    \"alert\": \"Hello {{FIRST_NAME}}, this is your welcome message!\"\n                }\n            }\n        }\n    ],\n    \"next_page\": null,\n    \"prev_page\": null\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/templates HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n    \"name\": \"Welcome Message\",\n    \"description\": \"Our welcome message\",\n    \"variables\": [\n        {\n            \"key\": \"TITLE\",\n            \"name\": \"Title\",\n            \"description\": \"e.g., Mr, Ms, Dr, etc.\",\n            \"default_value\": \"\"\n        },\n        {\n            \"key\": \"FIRST_NAME\",\n            \"name\": \"First Name\",\n            \"description\": \"Given name\",\n            \"default_value\": null\n        },\n        {\n            \"key\": \"LAST_NAME\",\n            \"name\": \"Last Name\",\n            \"description\": \"Family name\",\n            \"default_value\": null\n        }\n    ],\n    \"push\": {\n        \"notification\": {\n            \"alert\": \"Hello {{FIRST_NAME}}, this is your welcome message!\"\n        }\n    }\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nTemplateVariable titleVariable = TemplateVariable.newBuilder()\n        .setKey(\"TITLE\")\n        .setName(\"Title\")\n        .setDescription(\"e.g., Mr, Ms, Dr, etc.\")\n        .setDefaultValue(\"\")\n        .build();\n\nTemplateVariable firstNameVariable = TemplateVariable.newBuilder()\n        .setKey(\"FIRST_NAME\")\n        .setName(\"First Name\")\n        .setDescription(\"Given name\")\n        .setDefaultValue(null)\n        .build();\n\nTemplateVariable lastNameVariable = TemplateVariable.newBuilder()\n        .setKey(\"LAST_NAME\")\n        .setName(\"Last Name\")\n        .setDescription(\"Family name\")\n        .setDefaultValue(\"\")\n        .build();\n\nPartialPushPayload partialPushPayload = PartialPushPayload.newBuilder()\n        .setNotification(Notification.newBuilder()\n                .setAlert(\"Hello {{TITLE}} {{FIRST_NAME}} {{LAST_NAME}}, this is your welcome message!\")\n                .build()\n        )\n        .build();\n\nTemplateRequest request = TemplateRequest.newRequest()\n        .setName(\"Welcome Message\")\n        .setDescription(\"Our welcome message\")\n        .addVariable(titleVariable)\n        .addVariable(firstNameVariable)\n        .addVariable(lastNameVariable)\n        .setPush(partialPushPayload);\n\nResponse<TemplateResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, Template, TemplateList, merge_data\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\n\n# Create a new template\ntemplate = Template(client)\ntemplate.name = 'Welcome Message'\ntemplate.description = 'Our welcome message'\ntemplate.variables = [\n    {\n        'key': 'TITLE',\n        'name': 'Title',\n        'description': 'e.g., Mr., Ms., Dr., etc.',\n        'default_value': ''\n    },\n    {\n        'key': 'FIRST_NAME',\n        'name': 'First Name',\n        'description': 'Given name',\n        'default_value': None\n    },\n    {\n        'key': 'LAST_NAME',\n        'name': 'Last Name',\n        'description': 'Family name',\n        'default_value': None\n    }\n]\ntemplate.push = {\n    'notification': {\n        'alert': 'Hello {{TITLE}} {{FIRST_NAME}} {{LAST_NAME}}, this is your welcome message!'\n    }\n}\nresponse = template.create()\nprint(f\"Template ID: {template.template_id}\")  # To get the template ID for future use\n\n# List all templates\nfor template in TemplateList(client):\n    print(\n        f\"Template ID: {template.template_id}\\n\"\n        f\"Created: {template.created_at}\\n\"\n        f\"Modified: {template.modified_at}\\n\"\n        f\"Last Used: {template.last_used}\\n\"\n        f\"Name: {template.name}\\n\"\n        f\"Description: {template.description}\\n\"\n        f\"Variables: {template.variables}\\n\"\n        f\"Push: {template.push}\"\n    )\n\n# Send a push using a template\npush = client.create_push()\npush.device_types = ['ios']\npush.audience = {\n    'ios_channel': 'b8f9b663-0a3b-cf45-587a-be880946e881'\n}\npush.merge_data = merge_data(\n    template_id='ef34a8d9-0ad7-491c-86b0-aea74da15161',\n    substitutions={\n        'FIRST_NAME': 'Bob',\n        'LAST_NAME': 'Smith',\n        'TITLE': ''\n    }\n)\nresponse = push.send()\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 201 Created\nLocation: https://go.urbanairship.com/api/templates/ef34a8d9-0ad7-491c-86b0-aea74da15161\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\" : true,\n    \"operation_id\" : \"9ce808c8-7176-45dc-b79e-44aa74249a5a\",\n    \"template_id\": \"ef34a8d9-0ad7-491c-86b0-aea74da15161\"\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/templates/push": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/templates/push HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n    \"device_types\": [ \"ios\" ],\n    \"audience\": {\n       \"ios_channel\": \"b8f9b663-0a3b-cf45-587a-be880946e881\"\n    },\n    \"merge_data\": {\n        \"template_id\": \"ef34a8d9-0ad7-491c-86b0-aea74da15161\",\n        \"substitutions\": {\n            \"FIRST_NAME\": \"Bob\",\n            \"LAST_NAME\": \"Smith\",\n            \"TITLE\": \"\"\n        }\n    }\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nTemplatePushPayload payload = TemplatePushPayload.newBuilder()\n        .setAudience(Selectors.iosChannel(\"b8f9b663-0a3b-cf45-587a-be880946e881\"))\n        .setDeviceTypes(DeviceTypeData.of(DeviceType.IOS))\n        .setMergeData(TemplateSelector.newBuilder()\n                .setTemplateId(\"ef34a8d9-0ad7-491c-86b0-aea74da15161\")\n                .addSubstitution(\"FIRST_NAME\", \"Bob\")\n                .addSubstitution(\"LAST_NAME\", \"Smith\")\n                .addSubstitution(\"TITLE\", \"Mr.\")\n                .build())\n        .build();\n\nTemplatePushRequest request = TemplatePushRequest.newRequest()\n        .addTemplatePushPayload(payload);\n\nResponse<TemplateResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, Template, TemplateList, merge_data\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\n\n# Send a push using a template\npush = client.create_push()\npush.device_types = ['ios']\npush.audience = {\n    'ios_channel': 'b8f9b663-0a3b-cf45-587a-be880946e881'\n}\npush.merge_data = merge_data(\n    template_id='ef34a8d9-0ad7-491c-86b0-aea74da15161',\n    substitutions={\n        'FIRST_NAME': 'Bob',\n        'LAST_NAME': 'Smith',\n        'TITLE': ''\n    }\n)\nresponse = push.send()\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 202 Accepted\nContent-Length: 123\nData-Attribute: push_ids\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\" : true,\n    \"operation_id\" : \"df6a6b50-9843-0304-d5a5-743f246a4946\",\n    \"push_ids\": [\n        \"1cbfbfa2-08d1-92c2-7119-f8f7f670f5f6\"\n    ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/templates/push/validate": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/templates/push/validate HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n    \"device_types\": [ \"ios\" ],\n    \"audience\": {\n       \"ios_channel\": \"b8f9b663-0a3b-cf45-587a-be880946e881\"\n    },\n    \"merge_data\": {\n        \"template_id\": \"ef34a8d9-0ad7-491c-86b0-aea74da15161\",\n        \"substitutions\": {\n            \"FIRST_NAME\": \"Bob\",\n            \"LAST_NAME\": \"Smith\",\n            \"TITLE\": \"\"\n        }\n    }\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nTemplatePushPayload payload = TemplatePushPayload.newBuilder()\n        .setAudience(Selectors.iosChannel(\"b8f9b663-0a3b-cf45-587a-be880946e881\"))\n        .setDeviceTypes(DeviceTypeData.of(DeviceType.IOS))\n        .setMergeData(TemplateSelector.newBuilder()\n                .setTemplateId(\"ef34a8d9-0ad7-491c-86b0-aea74da15161\")\n                .addSubstitution(\"FIRST_NAME\", \"Bob\")\n                .addSubstitution(\"LAST_NAME\", \"Smith\")\n                .addSubstitution(\"TITLE\", \"Mr.\")\n                .build())\n        .build();\n\nTemplatePushRequest request = TemplatePushRequest.newRequest()\n        .addTemplatePushPayload(payload)\n        .setValidateOnly(true);\n\nResponse<TemplateResponse> response = client.execute(request);\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Length: 123\nData-Attribute: push_ids\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\" : true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/templates/schedules": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/templates/schedules HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n[\n    {\n        \"name\": \"Hello Bob\",\n        \"schedule\": {\n           \"scheduled_time\": \"2020-05-02T22:00:00Z\"\n        },\n        \"device_types\": [ \"ios\" ],\n        \"audience\": {\n           \"ios_channel\": \"b8f9b663-0a3b-cf45-587a-be880946e881\"\n        },\n        \"merge_data\": {\n            \"template_id\": \"ef34a8d9-0ad7-491c-86b0-aea74da15161\",\n            \"substitutions\": {\n                \"FIRST_NAME\": \"Bob\",\n                \"LAST_NAME\": \"Takahashi\",\n                \"TITLE\": null\n            }\n        }\n    },\n    {\n        \"name\": \"Hello Joe\",\n        \"schedule\": {\n           \"scheduled_time\": \"2020-05-05T18:00:00Z\"\n        },\n        \"device_types\": [ \"android\" ],\n        \"audience\": {\n           \"android_channel\": \"df6a6b50-9843-0304-d5a5-743f246a4946\"\n        },\n        \"merge_data\": {\n            \"template_id\": \"ef34a8d9-0ad7-491c-86b0-aea74da15161\",\n            \"substitutions\": {\n                \"FIRST_NAME\": \"Joe\",\n                \"LAST_NAME\": \"Smith\",\n                \"TITLE\": \"Sir\"\n            }\n        }\n    }\n]\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nTemplateScheduledPushPayload payload = TemplateScheduledPushPayload.newBuilder()\n        .setAudience(Selectors.iosChannel(\"b8f9b663-0a3b-cf45-587a-be880946e881\"))\n        .setDeviceTypes(DeviceTypeData.of(DeviceType.IOS))\n        .setMergeData(TemplateSelector.newBuilder()\n                .setTemplateId(\"ef34a8d9-0ad7-491c-86b0-aea74da15161\")\n                .addSubstitution(\"FIRST_NAME\", \"Bob\")\n                .addSubstitution(\"LAST_NAME\", \"Takahashi\")\n                .addSubstitution(\"TITLE\", \"Dr.\")\n                .build())\n        .setSchedule(Schedule.newBuilder()\n                .setScheduledTimestamp(DateTime.parse(\"2020-05-05T18:00:00Z\"))\n                .build())\n        .build();\n\nTemplateScheduledPushRequest request = TemplateScheduledPushRequest.newRequest()\n                                          .addTemplateScheduledPushPayload(payload);\nResponse<ScheduleResponse> response = client.execute(request);\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 202 Accepted\nContent-Length: 123\nData-Attribute: schedule_urls\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\" : true,\n    \"operation_id\" : \"efb18e92-9a60-6689-45c2-82fedab36399\",\n    \"schedule_urls\" : [\n        \"http://go.urbanairship/api/schedules/a0cef4f9-1fcd-47ef-b459-01f432b64043\",\n        \"http://go.urbanairship/api/schedules/fe2dab5e-f837-4707-8d0c-0e8c589ef4cf\"\n    ],\n    \"schedule_ids\" : [\n        \"a0cef4f9-1fcd-47ef-b459-01f432b64043\",\n        \"fe2dab5e-f837-4707-8d0c-0e8c589ef4cf\"\n    ],\n    \"schedules\" : [\n        {\n            \"url\" : \"http://go.urbanairship/api/schedules/a0cef4f9-1fcd-47ef-b459-01f432b64043\",\n            \"name\": \"Hello Joe\",\n            \"schedule\" : { \"...\" },\n            \"push\" : { \"...\" },\n            \"push_ids\": [ \"6a5ecb9c-46ee-4af4-9ced-9308121afaf9\" ]\n        },\n        {\n            \"url\" : \"http://go.urbanairship/api/schedules/fe2dab5e-f837-4707-8d0c-0e8c589ef4cf\",\n            \"name\": \"Hello Bob\",\n            \"schedule\" : { \"...\" },\n            \"push\" : { \"...\" },\n            \"push_ids\": [ \"5162bbf8-7de7-4040-a64d-e018b71f02f6\" ]\n        }\n    ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/templates/{template_id}": {
      "delete": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "DELETE /api/templates/ef34a8d9-0ad7-491c-86b0-aea74da15161 HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nTemplateDeleteRequest request = TemplateDeleteRequest.newRequest(\"ef34a8d9-0ad7-491c-86b0-aea74da15161\");\nResponse<TemplateResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, Template, TemplateList, merge_data\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\n\ntemplate_id = 'ef34a8d9-0ad7-491c-86b0-aea74da15161'\n\n# Delete via template lookup\nresponse = Template(client).lookup(template_id).delete()\n\n# OR, if you want to delete a template without fetching it from the API\nresponse = Template(client).delete(template_id)\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true,\n    \"operation_id\": \"a6394ff8-8a65-4494-ad06-677eb8b7ad6a\"\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "get": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/templates/ef34a8d9-0ad7-491c-86b0-aea74da15161 HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nTemplateListingRequest request = TemplateListingRequest.newRequest(\"ef34a8d9-0ad7-491c-86b0-aea74da15161\");\nResponse<TemplateListingResponse> response = client.execute(request);\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, Template, TemplateList, merge_data\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\n\ntemplate_id = 'ef34a8d9-0ad7-491c-86b0-aea74da15161'\ntemplate = Template(client).lookup(template_id)\nprint(\n    template.template_id, template.created_at, template.modified_at,\n    template.last_used, template.name, template.description,\n    template.variables, template.push\n)\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nData-Attribute: template\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\" : true,\n    \"template\": {\n        \"id\": \"ef34a8d9-0ad7-491c-86b0-aea74da15161\",\n        \"created_at\": \"2020-08-17T11:10:02Z\",\n        \"modified_at\": \"2020-08-17T11:10:02Z\",\n        \"last_used\": null,\n        \"name\": \"Welcome Message\",\n        \"description\": \"Our welcome message\",\n        \"variables\": [\n            {\n                \"key\": \"TITLE\",\n                \"name\": \"Title\",\n                \"description\": \"e.g., Mr, Ms, Dr, etc.\",\n                \"default_value\": \"\"\n            },\n            {\n                \"key\": \"FIRST_NAME\",\n                \"name\": \"First Name\",\n                \"description\": \"Given name\",\n                \"default_value\": null\n            },\n            {\n                \"key\": \"LAST_NAME\",\n                \"name\": \"Last Name\",\n                \"description\": \"Family name\",\n                \"default_value\": null\n            }\n        ],\n        \"push\": {\n            \"notification\": {\n                \"alert\": \"Hello {{FIRST_NAME}}, this is your welcome message!\"\n            }\n        }\n    }\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/templates/ef34a8d9-0ad7-491c-86b0-aea74da15161 HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n    \"name\": \"Welcome Message\",\n    \"description\": \"Our welcome message\",\n    \"push\": {\n        \"notification\": {\n            \"alert\": \"Hello {{FIRST_NAME}} {{LAST_NAME}}, this is your welcome message!\"\n        }\n    }\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nPartialPushPayload partialPushPayload = PartialPushPayload.newBuilder()\n        .setNotification(Notification.newBuilder()\n                .setAlert(\"Hello {{FIRST_NAME}} {{LAST_NAME}}, this is your welcome message!\")\n                .build()\n        )\n        .build();\n\nTemplateRequest request = TemplateRequest.newRequest(\"ef34a8d9-0ad7-491c-86b0-aea74da15161\")\n        .setName(\"Welcome Message\")\n        .setDescription(\"Our welcome message\")\n        .setPush(partialPushPayload);\n\nResponse<TemplateResponse> response = client.execute(request);\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"ok\": true,\n    \"operation_id\": \"df6a6b50-9843-0304-d5a5-743f246a4946\"\n}\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, Template, TemplateList, merge_data\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\n\ntemplate_id = 'ef34a8d9-0ad7-491c-86b0-aea74da15161'\nupdated_template = Template(client)\nupdated_template.push = {\n    'notification': {\n        'alert': 'Hi {{FIRST_NAME}} {{LAST_NAME}}!'\n    }\n}\nresponse = updated_template.update(template_id)\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Alternatively, call the lookup function on your updated template:",
          "examples": [
            {
              "lang": "python",
              "source": "from urbanairship import (\n    BasicAuthClient, Template, TemplateList, merge_data\n)\n\nclient = BasicAuthClient(\n    key='<app_key>',\n    secret='<master_secret>'\n)\n\ntemplate_id = 'ef34a8d9-0ad7-491c-86b0-aea74da15161'\nupdated_template = Template(client).lookup(template_id)\nupdated_template.push = {\n    'notification': {\n        'alert': 'Greetings {{TITLE}} {{FIRST_NAME}} {{LAST_NAME}}!'\n    }\n}\nresponse = updated_template.update()\n"
            }
          ]
        }
      ]
    },
    "/api/user": {
      "post": [
        {
          "description": "Example create a rich push user\n",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/user/ HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n  \"alias\": \"user1\",\n  \"tags\": [\"tag1\", \"tag2\"],\n  \"android_channels\": [\"6368d6f8-5c69-4f91-bec4-870239ab28bf\"],\n  \"ua_device_id\": \"<UUID identifier>\"\n}\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 201 Created\nAuthorization: Basic <application authorization string>\nContent-Type: application/json; charset=utf-8\n\n{\n  \"user_url\": \"https://go.urbanairship.com/api/user/example_user_id/\",\n  \"user_id\": \"example_user_id\",\n  \"password\": \"example_password\",\n  \"apids\": [\"6368d6f8-5c69-4f91-bec4-870239ab28bf\"],\n  \"ios_channels\": [\"6368d6f8-5c69-4f91-bec4-870239ab28bf\"],\n  \"device_tokens\": [],\n  \"device_pins\": []\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/user/messages/batch-delete": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/user/messages/batch-delete HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n    \"message_ids\": [\n        \"drKa4OdxEeyhSwJC9TkdtQ\",\n        \"W5ersOdxEeyvwAJCxz92iA\"\n    ]\n}\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n        \n List<String> arrayList = new ArrayList<>();\n arrayList.add(\"9dWD3LBIS5iZ51Y1GwOi4Q\");\n arrayList.add(\"lsDtpTBJTN6KpQTwfOSNbw\");\n\n InboxBatchDeleteRequest inboxBatchDeleteRequest = InboxBatchDeleteRequest.newRequest(arrayList);\n Response<InboxBatchDeleteResponse> response = client.execute(inboxBatchDeleteRequest);\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 202 Accepted\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"deleted_message_ids\": [\n        \"W5ersOdxEeyvwAJCxz92iA\",\n        \"drKa4OdxEeyhSwJC9TkdtQ\"\n   ],\n   \"errors\": []\n}\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 404 Not Found\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n    \"deleted_message_ids\": [],\n    \"errors\": [\n        {\n            \"message_id\": \"drKa4OdxEeyhSwJC9Tkdt1\",\n            \"error_message\": \"Message not found.\",\n            \"error_code\": 40404\n        },\n        {\n            \"message_id\": \"W5ersOdxEeyvwAJCxz92i1\",\n            \"error_message\": \"Message not found.\",\n            \"error_code\": 40404\n        }\n    ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/user/messages/{push_id}": {
      "delete": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "DELETE /api/user/messages/(push_id) HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "python",
              "source": "from urbanairship import BasicAuthClient, Push\n\nclient = BasicAuthClient(\n   key='<app_key>',\n   secret='<master_secret>'\n)\n\nPush.message_center_delete(airship=client, push_id=\"941086fd-f7db-493b-a8a7-1f5a7dc6aae4\")\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\n InboxDeleteRequest request = InboxDeleteRequest.newRequest(\"68b2d71f-1c10-4592-bd96-2725aee0ae57\");\n Response<GenericResponse> response = client.execute(request);\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 202 Accepted\nContent-Type: application/vnd.urbanairship+json; version=3\n\n{\n   \"ok\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/user/{user_id}": {
      "get": [
        {
          "description": "Example\n",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/user/<user_id>/ HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/json; charset=utf-8\n\n{\n  \"user_url\": \"https://go.urbanairship.com/api/user/example_user_id/\",\n  \"user_id\": \"example_user_id\",\n  \"ios_channels\": [\"6368d6f8-5c69-4f91-bec4-870239ab28bf\"],\n  \"device_tokens\": [],\n  \"device_pins\": [],\n  \"apids\": []\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "post": [
        {
          "description": "Example request (Android)\n",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/user/<user_id>/ HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n  \"android_channels\": {\n      \"add\":[\"6368d6f8-5c69-4f91-bec4-870239ab28bf\"]\n  }\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Example request (iOS)\n",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/user/<user_id>/ HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n  \"ios_channels\": {\n      \"add\":[\"6368d6f8-5c69-4f91-bec4-870239ab28bf\"]\n  },\n  \"device_tokens\": {\n      \"remove\":[\"686ba477da73fb432a5ec25b28a2e8379e1c02234655458e5ee98b90c6a106c6\"]\n  }\n}\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/user/{user_id}/messages": {
      "get": [
        {
          "description": "Example list user messages\n",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/user/some_user_id/messages/ HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n  \"messages\" : [\n      {\n        \"content_size\" : 123,\n        \"content_type\" : \"text/html\",\n        \"extra\" : {\n            \"some_key\" : \"some_value\"\n        },\n        \"icons\": {\n            \"list_icon\": \"some_uri\"\n        },\n        \"options\": {\n            \"some_key\" : \"some_value\"\n        },\n        \"title\" : \"Some Message Title\",\n        \"unread\" : true,\n        \"message_id\" : \"some_message_id\",\n        \"message_sent\" : \"2015-12-12 08:00:00\",\n        \"message_expiry\" : \"2015-12-31 08:00:00\",\n        \"message_url\": \"https://go.urbanairship.com/api/user/some_user_id/messages/some_message_id/\",\n        \"message_reporting\": {\n          \"message_id\": \"some_message_id\",\n          \"group_id\": \"some_group_id\",\n          \"variant_id\": 1\n        }\n      },\n      {\n        \"content_size\" : 435,\n        \"...\" : \"...\"\n      }\n  ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/user/{user_id}/messages/delete": {
      "post": [
        {
          "description": "Example batch delete user messages\n",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/user/some_user_id/messages/delete HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n  \"delete\": [\n      \"https://go.urbanairship.com/api/user/some_user_id/messages/message/some_message_id_1/\",\n      \"https://go.urbanairship.com/api/user/some_user_id/messages/message/some_message_id_2/\",\n      \"https://go.urbanairship.com/api/user/some_user_id/messages/message/some_message_id_3/\",\n      \"https://go.urbanairship.com/api/user/some_user_id/messages/message/some_message_id_4/\"\n  ],\n  \"messages\": [\n    {\n      \"message_id\": \"some_message_id_1\",\n      \"group_id\": \"some_group_1\",\n      \"variant_id\": 1\n    }\n  ]\n}\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n  \"ok\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/user/{user_id}/messages/message/{message_id}": {
      "delete": [
        {
          "description": "Example delete user message\n",
          "examples": [
            {
              "lang": "HTTP",
              "source": "DELETE /api/user/some_user_id/messages/message/some_message_id/ HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n  \"ok\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "get": [
        {
          "description": "Example get user message\n",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/user/some_user_id/messages/message/some_message_id/ HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n  \"content_size\" : 123,\n  \"content_type\" : \"text/html\",\n  \"message\" : \"<html>Some Message</html>\",\n  \"extra\" : {\n      \"some_key\" : \"some_value\"\n  },\n  \"icons\": {\n      \"list_icon\": \"some_uri\"\n  },\n  \"options\": {\n      \"some_key\" : \"some_value\"\n  },\n  \"title\" : \"Some Message Title\",\n  \"unread\" : true,\n  \"message_id\" : \"some_message_id\",\n  \"message_sent\" : \"2015-12-12 08:00:00\",\n  \"message_expiry\" : \"2015-12-31 08:00:00\",\n  \"message_url\": \"https://go.urbanairship.com/api/user/some_user_id/messages/some_message_id/\",\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/user/{user_id}/messages/message/{message_id}/body": {
      "get": [
        {
          "description": "Example get user message body\n",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/user/some_user_id/messages/message/some_message_id/body/ HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: text/html;charset=utf-8\nContent-Length: 100\n\n<html>Some message body</html>\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/user/{user_id}/messages/message/{message_id}/read": {
      "post": [
        {
          "description": "Example mark user message as read\n",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/user/some_user_id/messages/message/some_message_id/read/ HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n  \"ok\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/user/{user_id}/messages/unread": {
      "get": [
        {
          "description": "Example list unread user messages\n",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /api/user/some_user_id/messages/unread HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n  \"messages\" : [\n      {\n        \"content_size\" : 123,\n        \"content_type\" : \"text/html\",\n        \"extra\" : {\n            \"some_key\" : \"some_value\"\n        },\n        \"icons\": {\n            \"list_icon\": \"some_uri\"\n        },\n        \"options\": {\n            \"some_key\" : \"some_value\"\n        },\n        \"title\" : \"Some Message Title\",\n        \"unread\" : true,\n        \"message_id\" : \"some_message_id\",\n        \"message_sent\" : \"2015-12-12 08:00:00\",\n        \"message_expiry\" : \"2015-12-31 08:00:00\",\n        \"message_url\": \"https://go.urbanairship.com/api/user/some_user_id/messages/some_message_id/\",\n        \"message_reporting\": {\n          \"message_id\": \"some_message_id\",\n          \"group_id\": \"some_group_id\",\n          \"variant_id\": 1\n        }\n      },\n      {\n        \"content_size\" : 435,\n        \"...\" : \"...\"\n      }\n  ]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ],
      "post": [
        {
          "description": "Example mark several user messages read\n",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/user/some_user_id/messages/unread HTTP/1.1\nAuthorization: Basic <authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n  \"mark_as_read\": [\n      \"https://go.urbanairship.com/api/user/some_user_id/messages/message/some_message_id_1/\",\n      \"https://go.urbanairship.com/api/user/some_user_id/messages/message/some_message_id_2/\",\n      \"https://go.urbanairship.com/api/user/some_user_id/messages/message/some_message_id_3/\",\n      \"https://go.urbanairship.com/api/user/some_user_id/messages/message/some_message_id_4/\"\n  ],\n  \"messages\": [\n    {\n      \"message_id\": \"some_message_id_1\",\n      \"group_id\": \"some_group_1\",\n      \"variant_id\": 1\n    }\n  ]\n}\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n  \"ok\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/web-channels": {
      "post": [
        {
          "description": "Example Safari registration",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/web-channels HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n   \"channel\" : {\n      \"device_type\": \"web\",\n      \"opt_in\": true,\n      \"push_address\": \"S26JIHLIGS7L5HGHJS35HJG7JH5G7JS\",\n      \"set_tags\": true,\n      \"tags\": [\"asdf\"],\n      \"timezone\" : \"America/Los_Angeles\",\n      \"locale_country\" : \"US\",\n      \"locale_language\" : \"en\",\n      \"web\": {\n            \"user_agent_string\" : \"Safari/6.1 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Safari/537.36\",\n            \"browser_name\": \"safari\",\n            \"browser_type\" : \"desktop\",\n            \"browser_version\": \"safari-61\",\n            \"web_sdk_version\": \"1.0.1\",\n            \"subscription\" : {\n               \"subscription_type\": \"apns\",\n            }\n      }\n   }\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Example VAPID registration",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/web-channels HTTP/1.1\nAuthorization: Basic <application authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n   \"channel\" : {\n      \"device_type\": \"web\",\n      \"opt_in\": true,\n      \"push_address\": \"https://android.googleapis.com/gcm/send/f1LsxkKphfQ:APA91bFUx7ja4BK4JVrNgVjpg1cs9lGSGI6IMNL4mQ3Xe6mDGxvt\",\n      \"set_tags\": true,\n      \"tags\": [\"asdf\"],\n      \"timezone\" : \"America/Los_Angeles\",\n      \"locale_country\" : \"US\",\n      \"locale_language\" : \"en\",\n      \"web\": {\n            \"user_agent_string\" : \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36\",\n            \"browser_name\": \"chrome\",\n            \"browser_type\" : \"desktop\",\n            \"browser_version\": \"chrome-53\",\n            \"web_sdk_version\": \"1.0.1\",\n            \"subscription\" : {\n               \"subscription_type\": \"vapid\",\n               \"keys\": {\n                  \"p256dh\":\"BLc4xRzKlKORKWlbdgFaBrrPK3ydWAHo4M0gs0i1oEKgPpWC5cW8OCzVrOQRv-1npXRWk8udnW3oYhIO4475rds=\",\n                  \"auth\":\"5I2Bu2oKdyy9CwL8QVF0NQ==\"\n               }\n            }\n      }\n   }\n}\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 201 Created\nContent-Type: application/json\nLocation: https://aswpapius.com/api/channels/df6a6b50-9843-0304-d5a5-743f246a4946\n\n{\n   \"ok\": true,\n   \"channel_id\": \"df6a6b50-9843-0304-d5a5-743f246a4946\"\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/web-channels/tags": {
      "post": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /api/web-channels/tags/ HTTP/1.1\nAuthorization: Basic <master authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n   \"audience\": {\n      \"channel\": [\"bbbbb663-aaab-cccc-587abbbbbbcccceee\", \"05404150-a262-45c6-9672-33d35be52726\"]\n   },\n   \"add\": {\n      \"my_fav_tag_group1\": [\"tag1\", \"tag2\", \"tag3\"],\n      \"my_fav_tag_group2\": [\"tag1\", \"tag2\", \"tag3\"],\n      \"my_fav_tag_group3\": [\"tag1\", \"tag2\", \"tag3\"]\n   }\n}\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 Ok\nContent-Type: application/json\n\n{\n   \"ok\": true,\n   \"warnings\": [\"The following tag groups do not exist: my_fav_tag_group2\", \"The following tag groups are deactivated: my_fav_tag_group3\"]\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/api/web-channels/{channel_id}": {
      "put": [
        {
          "description": "Example",
          "examples": [
            {
              "lang": "HTTP",
              "source": "PUT /api/web-channels/df6a6b50-9843-0304-d5a5-743f246a4946 HTTP/1.1\nAuthorization: Bearer <application authorization string>\nAccept: application/vnd.urbanairship+json; version=3\nContent-Type: application/json\n\n{\n   \"channel\": {\n      \"device_type\": \"web\",\n      \"opt_in\": true,\n      \"timezone\": \"America/Los_Angeles\",\n      \"locale_language\": \"en\",\n      \"locale_country\": \"US\",\n      \"web\": {\n         \"user_agent_string\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.95 Safari/537.36\",\n         \"browser_name\": \"chrome\",\n         \"browser_version\": \"chrome-54\",\n         \"browser_type\": \"desktop\",\n         \"web_sdk_version\": \"0.0.1\"\n      }\n   }\n}\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n   \"ok\": true\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/binary/app/{id}": {
      "get": [
        {
          "description": "Example get app content",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /binary/app/ef34a8d9-0ad7-491c-86b0-aea74da15161 HTTP/1.1\nAuthorization: Basic <application authorization string>\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/octet-stream\n\nBinary content.\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/binary/public/{context_id}/{id}": {
      "get": [
        {
          "description": "Example get public content",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /binary/public/qkdtins32bur04jzepkq13/ef34a8d9-0ad7-491c-86b0-aea74da15161 HTTP/1.1\nAuthorization: Basic <application authorization string>\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/octet-stream\n\nBinary content.\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/binary/render/app/{body_id}/{model_id}": {
      "get": [
        {
          "description": "Example get rendered template app content",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /binary/render/app/ef34a8d9-0ad7-491c-86b0-aea74da15161/9d78a53b-b16a-c58f-b78d-181d5e242078 HTTP/1.1\nAuthorization: Basic <application authorization string>\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: text/html\n\n<html>\n  <body>\n    Hello, John Smith!\n  </body>\n</html>\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/binary/render/token/{context_id}/{body_id}/{model_id}": {
      "get": [
        {
          "description": "Example get rendered template app content",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /binary/render/token/AbcDefGhiJkl015sdgaADD/ef34a8d9-0ad7-491c-86b0-aea74da15161/9d78a53b-b16a-c58f-b78d-181d5e242078?t=U1S10O0CQGuXC-Phgkzh2O5v7tvYg0KEyMl3aQUFDjY&d=XclaHxf66oG0iIf9dz2aJ2YeFimhL7-UETukkxhXaJk HTTP/1.1\nAuthorization: Basic <application authorization string>\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: text/html\n\n<html>\n  <body>\n    Hello, John Smith!\n  </body>\n</html>\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/binary/token/{context_id}/{id}": {
      "get": [
        {
          "description": "Example get token content",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /binary/token/AbcDefGhiJkl015sdgaADD/ef34a8d9-0ad7-491c-86b0-aea74da15161?t=U1S10O0CQGuXC-Phgkzh2O5v7tvYg0KEyMl3aQUFDjY&d=XclaHxf66oG0iIf9dz2aJ2YeFimhL7-UETukkxhXaJk HTTP/1.1\nAuthorization: Basic <application authorization string>\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/octet-stream\n\nBinary content.\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/token": {
      "post": [
        {
          "description": "Example request token with Basic Auth",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /token HTTP/1.1\nHost: oauth2.asnapius.com\nContent-Type: application/x-www-form-urlencoded\nAccept: application/json\nAuthorization: Basic <base64 encoded string of \"client_id:client_secret\">\n\ngrant_type=client_credentials&sub=app:JQIMcndxIHWy2QISpt1SpZ&scope=chn&scope=nu&ipaddr=24.20.40.0/24&ipaddr=2001:4860:4860::8888/32\n"
            },
            {
              "lang": "java",
              "source": "OAuthCredentials oAuthCredentials = OAuthCredentials.newBuilder(\"<client_id>\")\n        .setClientSecret(\"<client_secret>\")\n        .setSub(\"<sub>\")\n        .setScopes(Arrays.asList(\"<scope1>\",\"<scope2>\",\"<...>\"))\n        .setIpAddresses(Arrays.asList(\"<IP1>\",\"<IP2>\",<...>))\n        .build();\n\nUrbanAirshipClient oAuthClient = UrbanAirshipClient.newBuilder()\n        .setKey(\"yourAppKey\")\n        .setOAuthCredentials(oAuthCredentials)\n        .build();\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/json\nCache-Control: no-store\nPragma: no-cache\n\n{\n  \"access_token\": \"<token>\",\n  \"token_type\": \"Bearer\",\n  \"scope\": \"chn nu\",\n  \"expires_in\": 3600\n}\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        },
        {
          "description": "Example request token with assertion",
          "examples": [
            {
              "lang": "HTTP",
              "source": "POST /token HTTP/1.1\nHost: oauth2.asnapius.com\nContent-Type: application/x-www-form-urlencoded\nAccept: application/json\n\ngrant_type=client_credentials&assertion=<encoded_jwt>\n"
            },
            {
              "lang": "java",
              "source": "OAuthCredentials oAuthCredentials = OAuthCredentials.newBuilder(\"<client_id>\")\n        .setAssertionJWT(\"<encoded_jwt>\")\n        .build();\n\nUrbanAirshipClient oAuthClient = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setOAuthCredentials(oAuthCredentials)\n        .build();\n"
            },
            {
              "lang": "python",
              "source": "# The python OAuth client handles JWT creation \n# and token refresh automatically.\n# Once instantiated, this can be used as any other Airship client.\n\nairship_client = OAuthClient(\n  client_id=\"<client_id>\",\n  private_key=\"<private_key>\",\n  key=\"<project_key>\",\n  scope=[\"<scopes>\",],\n  id_addr=[\"<ip list>\",],\n  timeout=\"<timeout seconds int>\",\n  retries=\"<attempts on failure int>\"\n)\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/json\nCache-Control: no-store\nPragma: no-cache\n\n{\n  \"access_token\": \"<token>\",\n  \"token_type\": \"Bearer\",\n  \"scope\": \"chn nu\",\n  \"expires_in\": 3600\n}\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\napp_key = '<application_key>'\n\noauth = UA::Oauth.new(\n  client_id: '<client_id>',\n  key: app_key,\n  assertion_private_key: '<your_private_key>',\n  scopes: ['psh', 'chn'], # Optional\n  ip_addresses: ['23.74.131.15/22'], # Optional\n  oauth_server: 'api.asnapieu.com' # Optional\n)\n\nairship = UA::Client.new(key: app_key, oauth: oauth)\n"
            }
          ],
          "showMissingLanguagePlaceholders": true
        }
      ]
    },
    "/verify/public_key/{kid}": {
      "get": [
        {
          "description": "Example key verification",
          "examples": [
            {
              "lang": "HTTP",
              "source": "GET /verify/public_key/8817e96 HTTP/1.1\nHost: oauth2.asnapius.com\nAccept: text/plain\n"
            },
            {
              "lang": "java",
              "source": "UrbanAirshipClient client = UrbanAirshipClient.newBuilder()\n        .setKey(\"<app key>\")\n        .setSecret(\"<master secret>\")\n        .build();\n\nPublicKeyVerificationRequest request = PublicKeyVerificationRequest.newRequest(\"<kid>\");\nResponse<String> response = client.execute(request);\n"
            },
            {
              "lang": "HTTP",
              "source": "HTTP/1.1 200 OK\nContent-Type: application/x-pem-file\nCache-Control: max-age=600, must-revalidate\n\n-----BEGIN PUBLIC KEY-----\nMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAE7tcTz03ypC7PSPa73Cbgl7AbDDo+92eH\nDWgjAi6vt1gmlHE35e+GhpcwbywBByOiooY+5bvfUHkc0aKy4R8VbBK0rYwlp8B+\nfxyDr9Ye/oiUewMwwlp0z5AMPjgBUIKS\n-----END PUBLIC KEY-----\n"
            },
            {
              "lang": "ruby",
              "source": "require 'urbanairship'\n\nUA = Urbanairship\napp_key = '<application_key>'\n\noauth = UA::Oauth.new(\n  client_id: '<client_id>',\n  key: app_key,\n  assertion_private_key: '<your_private_key>',\n  scopes: ['psh', 'chn'], # Optional\n  ip_addresses: ['23.74.131.15/22'], # Optional\n  oauth_server: 'api.asnapieu.com' # Optional\n)\n\npublic_key = oauth.verify_public_key('<key_id>')\n"
            }
          ],
          "showMissingLanguagePlaceholders": false
        }
      ]
    }
  }
}